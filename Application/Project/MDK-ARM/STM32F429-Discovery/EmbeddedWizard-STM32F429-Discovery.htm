<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32F429-Discovery\EmbeddedWizard-STM32F429-Discovery.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32F429-Discovery\EmbeddedWizard-STM32F429-Discovery.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Thu Dec  9 11:55:07 2021
<BR><P>
<H3>Maximum Stack Usage =       2316 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ViewsFrame_Draw &rArr; GraphicsCanvas_DrawBitmapFrame &rArr; EwDrawBitmapFrame &rArr; EwTileBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[2cb]">CoreGroup_SwitchToDialog</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[294]">CoreGroup_PresentDialog</a><BR>
 <LI><a href="#[3e4]">EwExecuteTasks</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33b]">EwLockSurface</a><BR>
 <LI><a href="#[3e8]">WarpSurface2</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33b]">EwLockSurface</a><BR>
 <LI><a href="#[3a8]">EwFlushTasks</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a8]">EwFlushTasks</a><BR>
 <LI><a href="#[3d3]">GetGlyph</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d3]">GetGlyph</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[14f]">ApplicationApplication__Done</a> from application.o(.text.ApplicationApplication__Done) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[14d]">ApplicationApplication__Init</a> from application.o(.text.ApplicationApplication__Init) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[14e]">ApplicationApplication__ReInit</a> from application.o(.text.ApplicationApplication__ReInit) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[145]">ApplicationBlueGauge__Init</a> from application.o(.text.ApplicationBlueGauge__Init) referenced from application.o(.rodata._ApplicationBlueGauge)
 <LI><a href="#[67]">ApplicationCalibration_UpdateViewMenu</a> from application.o(.text.ApplicationCalibration_UpdateViewMenu) referenced 2 times from application.o(.text.ApplicationCalibration__Init)
 <LI><a href="#[164]">ApplicationCalibration__Done</a> from application.o(.text.ApplicationCalibration__Done) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[162]">ApplicationCalibration__Init</a> from application.o(.text.ApplicationCalibration__Init) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[163]">ApplicationCalibration__ReInit</a> from application.o(.text.ApplicationCalibration__ReInit) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[6a]">ApplicationCurrentMeasurement_UpdateViewMenu</a> from application.o(.text.ApplicationCurrentMeasurement_UpdateViewMenu) referenced 2 times from application.o(.text.ApplicationCurrentMeasurement__Init)
 <LI><a href="#[171]">ApplicationCurrentMeasurement__Done</a> from application.o(.text.ApplicationCurrentMeasurement__Done) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[16f]">ApplicationCurrentMeasurement__Init</a> from application.o(.text.ApplicationCurrentMeasurement__Init) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[170]">ApplicationCurrentMeasurement__ReInit</a> from application.o(.text.ApplicationCurrentMeasurement__ReInit) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[6b]">ApplicationDebug_UpdateViewMenu</a> from application.o(.text.ApplicationDebug_UpdateViewMenu) referenced 2 times from application.o(.text.ApplicationDebug__Init)
 <LI><a href="#[174]">ApplicationDebug__Done</a> from application.o(.text.ApplicationDebug__Done) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[172]">ApplicationDebug__Init</a> from application.o(.text.ApplicationDebug__Init) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[173]">ApplicationDebug__ReInit</a> from application.o(.text.ApplicationDebug__ReInit) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[6c]">ApplicationDetectorScreen_UpdateViewMenu</a> from application.o(.text.ApplicationDetectorScreen_UpdateViewMenu) referenced 2 times from application.o(.text.ApplicationDetectorScreen__Init)
 <LI><a href="#[177]">ApplicationDetectorScreen__Done</a> from application.o(.text.ApplicationDetectorScreen__Done) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[175]">ApplicationDetectorScreen__Init</a> from application.o(.text.ApplicationDetectorScreen__Init) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[176]">ApplicationDetectorScreen__ReInit</a> from application.o(.text.ApplicationDetectorScreen__ReInit) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[6f]">ApplicationDeviceClass_OnGetAngle</a> from application.o(.text.ApplicationDeviceClass_OnGetAngle) referenced 2 times from application.o(.text.ApplicationDeviceClass__UpdateAngle)
 <LI><a href="#[6f]">ApplicationDeviceClass_OnGetAngle</a> from application.o(.text.ApplicationDeviceClass_OnGetAngle) referenced 2 times from application.o(.text.ApplicationDistanceMeasurement__Init)
 <LI><a href="#[68]">ApplicationDeviceClass_OnGetCurrent</a> from application.o(.text.ApplicationDeviceClass_OnGetCurrent) referenced 2 times from application.o(.text.ApplicationCurrentMeasurement__Init)
 <LI><a href="#[68]">ApplicationDeviceClass_OnGetCurrent</a> from application.o(.text.ApplicationDeviceClass_OnGetCurrent) referenced 2 times from application.o(.text.ApplicationDeviceClass__UpdateCurrent)
 <LI><a href="#[71]">ApplicationDeviceClass_OnGetDistance</a> from application.o(.text.ApplicationDeviceClass_OnGetDistance) referenced 2 times from application.o(.text.ApplicationDeviceClass__UpdateDistance)
 <LI><a href="#[71]">ApplicationDeviceClass_OnGetDistance</a> from application.o(.text.ApplicationDeviceClass_OnGetDistance) referenced 2 times from application.o(.text.ApplicationDistanceMeasurement__Init)
 <LI><a href="#[6d]">ApplicationDeviceClass_OnGetLamptest</a> from application.o(.text.ApplicationDeviceClass_OnGetLamptest) referenced 2 times from application.o(.text.ApplicationDeviceClass_OnSetLamptest)
 <LI><a href="#[6d]">ApplicationDeviceClass_OnGetLamptest</a> from application.o(.text.ApplicationDeviceClass_OnGetLamptest) referenced 2 times from application.o(.text.ApplicationSettings__Init)
 <LI><a href="#[70]">ApplicationDeviceClass_OnSetAngle</a> from application.o(.text.ApplicationDeviceClass_OnSetAngle) referenced 2 times from application.o(.text.ApplicationDeviceClass__UpdateAngle)
 <LI><a href="#[70]">ApplicationDeviceClass_OnSetAngle</a> from application.o(.text.ApplicationDeviceClass_OnSetAngle) referenced 4 times from application.o(.text.ApplicationDistanceMeasurement__Init)
 <LI><a href="#[69]">ApplicationDeviceClass_OnSetCurrent</a> from application.o(.text.ApplicationDeviceClass_OnSetCurrent) referenced 2 times from application.o(.text.ApplicationCurrentMeasurement__Init)
 <LI><a href="#[69]">ApplicationDeviceClass_OnSetCurrent</a> from application.o(.text.ApplicationDeviceClass_OnSetCurrent) referenced 2 times from application.o(.text.ApplicationDeviceClass__UpdateCurrent)
 <LI><a href="#[72]">ApplicationDeviceClass_OnSetDistance</a> from application.o(.text.ApplicationDeviceClass_OnSetDistance) referenced 2 times from application.o(.text.ApplicationDeviceClass__UpdateDistance)
 <LI><a href="#[72]">ApplicationDeviceClass_OnSetDistance</a> from application.o(.text.ApplicationDeviceClass_OnSetDistance) referenced 4 times from application.o(.text.ApplicationDistanceMeasurement__Init)
 <LI><a href="#[6e]">ApplicationDeviceClass_OnSetLamptest</a> from application.o(.text.ApplicationDeviceClass_OnSetLamptest) referenced 2 times from application.o(.text.ApplicationDeviceClass_OnSetLamptest)
 <LI><a href="#[6e]">ApplicationDeviceClass_OnSetLamptest</a> from application.o(.text.ApplicationDeviceClass_OnSetLamptest) referenced 2 times from application.o(.text.ApplicationSettings__Init)
 <LI><a href="#[17a]">ApplicationDeviceClass__Done</a> from application.o(.text.ApplicationDeviceClass__Done) referenced from application.o(.rodata.__vmt_ApplicationDeviceClass)
 <LI><a href="#[178]">ApplicationDeviceClass__Init</a> from application.o(.text.ApplicationDeviceClass__Init) referenced from application.o(.rodata.__vmt_ApplicationDeviceClass)
 <LI><a href="#[179]">ApplicationDeviceClass__ReInit</a> from application.o(.text.ApplicationDeviceClass__ReInit) referenced from application.o(.rodata.__vmt_ApplicationDeviceClass)
 <LI><a href="#[146]">ApplicationDevice__Init</a> from application.o(.text.ApplicationDevice__Init) referenced from application.o(.rodata._ApplicationDevice)
 <LI><a href="#[73]">ApplicationDistanceMeasurement_UpdateViewMenu</a> from application.o(.text.ApplicationDistanceMeasurement_UpdateViewMenu) referenced 2 times from application.o(.text.ApplicationDistanceMeasurement__Init)
 <LI><a href="#[17d]">ApplicationDistanceMeasurement__Done</a> from application.o(.text.ApplicationDistanceMeasurement__Done) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[17b]">ApplicationDistanceMeasurement__Init</a> from application.o(.text.ApplicationDistanceMeasurement__Init) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[17c]">ApplicationDistanceMeasurement__ReInit</a> from application.o(.text.ApplicationDistanceMeasurement__ReInit) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[74]">ApplicationMenu_UpdateViewCurrent</a> from application.o(.text.ApplicationMenu_UpdateViewCurrent) referenced 2 times from application.o(.text.ApplicationMenu__Init)
 <LI><a href="#[76]">ApplicationMenu_UpdateViewDetector</a> from application.o(.text.ApplicationMenu_UpdateViewDetector) referenced 2 times from application.o(.text.ApplicationMenu__Init)
 <LI><a href="#[75]">ApplicationMenu_UpdateViewDistance</a> from application.o(.text.ApplicationMenu_UpdateViewDistance) referenced 2 times from application.o(.text.ApplicationMenu__Init)
 <LI><a href="#[77]">ApplicationMenu_UpdateViewSettings</a> from application.o(.text.ApplicationMenu_UpdateViewSettings) referenced 2 times from application.o(.text.ApplicationMenu__Init)
 <LI><a href="#[180]">ApplicationMenu__Done</a> from application.o(.text.ApplicationMenu__Done) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[17e]">ApplicationMenu__Init</a> from application.o(.text.ApplicationMenu__Init) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[17f]">ApplicationMenu__ReInit</a> from application.o(.text.ApplicationMenu__ReInit) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[79]">ApplicationSettings_UpdateViewCalibration</a> from application.o(.text.ApplicationSettings_UpdateViewCalibration) referenced 2 times from application.o(.text.ApplicationSettings__Init)
 <LI><a href="#[7a]">ApplicationSettings_UpdateViewDebug</a> from application.o(.text.ApplicationSettings_UpdateViewDebug) referenced 2 times from application.o(.text.ApplicationSettings__Init)
 <LI><a href="#[78]">ApplicationSettings_UpdateViewMenu</a> from application.o(.text.ApplicationSettings_UpdateViewMenu) referenced 2 times from application.o(.text.ApplicationSettings__Init)
 <LI><a href="#[183]">ApplicationSettings__Done</a> from application.o(.text.ApplicationSettings__Done) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[181]">ApplicationSettings__Init</a> from application.o(.text.ApplicationSettings__Init) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[182]">ApplicationSettings__ReInit</a> from application.o(.text.ApplicationSettings__ReInit) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[7b]">ApplicationWelcomeScreen_UpdateViewMenu</a> from application.o(.text.ApplicationWelcomeScreen_UpdateViewMenu) referenced 2 times from application.o(.text.ApplicationWelcomeScreen__Init)
 <LI><a href="#[186]">ApplicationWelcomeScreen__Done</a> from application.o(.text.ApplicationWelcomeScreen__Done) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[184]">ApplicationWelcomeScreen__Init</a> from application.o(.text.ApplicationWelcomeScreen__Init) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[185]">ApplicationWelcomeScreen__ReInit</a> from application.o(.text.ApplicationWelcomeScreen__ReInit) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f4xx_it.o(.text.BusFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[189]">CoreCursorEvent__Done</a> from core.o(.text.CoreCursorEvent__Done) referenced from core.o(.rodata.__vmt_CoreCursorEvent)
 <LI><a href="#[187]">CoreCursorEvent__Init</a> from core.o(.text.CoreCursorEvent__Init) referenced from core.o(.rodata.__vmt_CoreCursorEvent)
 <LI><a href="#[188]">CoreCursorEvent__ReInit</a> from core.o(.text.CoreCursorEvent__ReInit) referenced from core.o(.rodata.__vmt_CoreCursorEvent)
 <LI><a href="#[18c]">CoreCursorGrabEvent__Done</a> from core.o(.text.CoreCursorGrabEvent__Done) referenced from core.o(.rodata.__vmt_CoreCursorGrabEvent)
 <LI><a href="#[18a]">CoreCursorGrabEvent__Init</a> from core.o(.text.CoreCursorGrabEvent__Init) referenced from core.o(.rodata.__vmt_CoreCursorGrabEvent)
 <LI><a href="#[18b]">CoreCursorGrabEvent__ReInit</a> from core.o(.text.CoreCursorGrabEvent__ReInit) referenced from core.o(.rodata.__vmt_CoreCursorGrabEvent)
 <LI><a href="#[18f]">CoreCursorHit__Done</a> from core.o(.text.CoreCursorHit__Done) referenced from core.o(.rodata.__vmt_CoreCursorHit)
 <LI><a href="#[18d]">CoreCursorHit__Init</a> from core.o(.text.CoreCursorHit__Init) referenced from core.o(.rodata.__vmt_CoreCursorHit)
 <LI><a href="#[18e]">CoreCursorHit__ReInit</a> from core.o(.text.CoreCursorHit__ReInit) referenced from core.o(.rodata.__vmt_CoreCursorHit)
 <LI><a href="#[192]">CoreDialogContext__Done</a> from core.o(.text.CoreDialogContext__Done) referenced from core.o(.rodata.__vmt_CoreDialogContext)
 <LI><a href="#[190]">CoreDialogContext__Init</a> from core.o(.text.CoreDialogContext__Init) referenced from core.o(.rodata.__vmt_CoreDialogContext)
 <LI><a href="#[191]">CoreDialogContext__ReInit</a> from core.o(.text.CoreDialogContext__ReInit) referenced from core.o(.rodata.__vmt_CoreDialogContext)
 <LI><a href="#[195]">CoreDragEvent__Done</a> from core.o(.text.CoreDragEvent__Done) referenced from core.o(.rodata.__vmt_CoreDragEvent)
 <LI><a href="#[193]">CoreDragEvent__Init</a> from core.o(.text.CoreDragEvent__Init) referenced from core.o(.rodata.__vmt_CoreDragEvent)
 <LI><a href="#[194]">CoreDragEvent__ReInit</a> from core.o(.text.CoreDragEvent__ReInit) referenced from core.o(.rodata.__vmt_CoreDragEvent)
 <LI><a href="#[198]">CoreEvent__Done</a> from core.o(.text.CoreEvent__Done) referenced from core.o(.rodata.__vmt_CoreEvent)
 <LI><a href="#[196]">CoreEvent__Init</a> from core.o(.text.CoreEvent__Init) referenced from core.o(.rodata.__vmt_CoreEvent)
 <LI><a href="#[197]">CoreEvent__ReInit</a> from core.o(.text.CoreEvent__ReInit) referenced from core.o(.rodata.__vmt_CoreEvent)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[16d]">CoreGroup_BroadcastEvent</a> from core.o(.text.CoreGroup_BroadcastEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[167]">CoreGroup_ChangeViewState</a> from core.o(.text.CoreGroup_ChangeViewState) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[154]">CoreGroup_CursorHitTest</a> from core.o(.text.CoreGroup_CursorHitTest) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[16c]">CoreGroup_DispatchEvent</a> from core.o(.text.CoreGroup_DispatchEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[166]">CoreGroup_Draw</a> from core.o(.text.CoreGroup_Draw) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[16e]">CoreGroup_InvalidateArea</a> from core.o(.text.CoreGroup_InvalidateArea) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[16b]">CoreGroup_IsActiveDialog</a> from core.o(.text.CoreGroup_IsActiveDialog) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[16a]">CoreGroup_IsCurrentDialog</a> from core.o(.text.CoreGroup_IsCurrentDialog) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[159]">CoreGroup_OnSetBounds</a> from core.o(.text.CoreGroup_OnSetBounds) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[168]">CoreGroup_OnSetFocus</a> from core.o(.text.CoreGroup_OnSetFocus) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[169]">CoreGroup_OnSetOpacity</a> from core.o(.text.CoreGroup_OnSetOpacity) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[160]">CoreGroup_UpdateViewState</a> from core.o(.text.CoreGroup_UpdateViewState) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[19b]">CoreGroup__Done</a> from core.o(.text.CoreGroup__Done) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[199]">CoreGroup__Init</a> from core.o(.text.CoreGroup__Init) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[19a]">CoreGroup__ReInit</a> from core.o(.text.CoreGroup__ReInit) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 4 times from core.o(.text.CoreGroup_Add)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreGroup_ChangeViewState)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreGroup_InvalidateViewState)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreGroup_OnSetBounds)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 4 times from core.o(.text.CoreGroup_Remove)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 4 times from core.o(.text.CoreGroup_RestackTop)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreGroup__Init)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreOutline_OnSetBounds)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreQuadView_OnSetPoint1)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreQuadView_OnSetPoint2)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreQuadView_OnSetPoint3)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreQuadView_OnSetPoint4)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreRectView_OnSetBounds)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 2 times from core.o(.text.CoreRoot__Init)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 4 times from core.o(.text.CoreView_ChangeViewState)
 <LI><a href="#[7c]">CoreGroup_updateComponent</a> from core.o(.text.CoreGroup_updateComponent) referenced 4 times from core.o(.text.CoreView_OnSetLayout)
 <LI><a href="#[19e]">CoreKeyEvent__Done</a> from core.o(.text.CoreKeyEvent__Done) referenced from core.o(.rodata.__vmt_CoreKeyEvent)
 <LI><a href="#[19c]">CoreKeyEvent__Init</a> from core.o(.text.CoreKeyEvent__Init) referenced from core.o(.rodata.__vmt_CoreKeyEvent)
 <LI><a href="#[19d]">CoreKeyEvent__ReInit</a> from core.o(.text.CoreKeyEvent__ReInit) referenced from core.o(.rodata.__vmt_CoreKeyEvent)
 <LI><a href="#[1a1]">CoreKeyPressHandler__Done</a> from core.o(.text.CoreKeyPressHandler__Done) referenced from core.o(.rodata.__vmt_CoreKeyPressHandler)
 <LI><a href="#[19f]">CoreKeyPressHandler__Init</a> from core.o(.text.CoreKeyPressHandler__Init) referenced from core.o(.rodata.__vmt_CoreKeyPressHandler)
 <LI><a href="#[1a0]">CoreKeyPressHandler__ReInit</a> from core.o(.text.CoreKeyPressHandler__ReInit) referenced from core.o(.rodata.__vmt_CoreKeyPressHandler)
 <LI><a href="#[1a4]">CoreLayoutContext__Done</a> from core.o(.text.CoreLayoutContext__Done) referenced from core.o(.rodata.__vmt_CoreLayoutContext)
 <LI><a href="#[1a2]">CoreLayoutContext__Init</a> from core.o(.text.CoreLayoutContext__Init) referenced from core.o(.rodata.__vmt_CoreLayoutContext)
 <LI><a href="#[1a3]">CoreLayoutContext__ReInit</a> from core.o(.text.CoreLayoutContext__ReInit) referenced from core.o(.rodata.__vmt_CoreLayoutContext)
 <LI><a href="#[1a7]">CoreLayoutQuadContext__Done</a> from core.o(.text.CoreLayoutQuadContext__Done) referenced from core.o(.rodata.__vmt_CoreLayoutQuadContext)
 <LI><a href="#[1a5]">CoreLayoutQuadContext__Init</a> from core.o(.text.CoreLayoutQuadContext__Init) referenced from core.o(.rodata.__vmt_CoreLayoutQuadContext)
 <LI><a href="#[1a6]">CoreLayoutQuadContext__ReInit</a> from core.o(.text.CoreLayoutQuadContext__ReInit) referenced from core.o(.rodata.__vmt_CoreLayoutQuadContext)
 <LI><a href="#[1ab]">CoreOutline_Draw</a> from core.o(.text.CoreOutline_Draw) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[1ae]">CoreOutline_OnSetBounds</a> from core.o(.text.CoreOutline_OnSetBounds) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[1aa]">CoreOutline__Done</a> from core.o(.text.CoreOutline__Done) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[1a8]">CoreOutline__Init</a> from core.o(.text.CoreOutline__Init) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[1a9]">CoreOutline__ReInit</a> from core.o(.text.CoreOutline__ReInit) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[1b4]">CoreQuadView_ArrangeView</a> from core.o(.text.CoreQuadView_ArrangeView) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1b4]">CoreQuadView_ArrangeView</a> from core.o(.text.CoreQuadView_ArrangeView) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1b4]">CoreQuadView_ArrangeView</a> from core.o(.text.CoreQuadView_ArrangeView) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[1b4]">CoreQuadView_ArrangeView</a> from core.o(.text.CoreQuadView_ArrangeView) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[1b6]">CoreQuadView_GetExtent</a> from core.o(.text.CoreQuadView_GetExtent) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1b6]">CoreQuadView_GetExtent</a> from core.o(.text.CoreQuadView_GetExtent) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1b6]">CoreQuadView_GetExtent</a> from core.o(.text.CoreQuadView_GetExtent) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[1b6]">CoreQuadView_GetExtent</a> from core.o(.text.CoreQuadView_GetExtent) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[1b5]">CoreQuadView_MoveView</a> from core.o(.text.CoreQuadView_MoveView) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1b5]">CoreQuadView_MoveView</a> from core.o(.text.CoreQuadView_MoveView) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1b5]">CoreQuadView_MoveView</a> from core.o(.text.CoreQuadView_MoveView) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[1b5]">CoreQuadView_MoveView</a> from core.o(.text.CoreQuadView_MoveView) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[1ba]">CoreQuadView_OnSetPoint1</a> from core.o(.text.CoreQuadView_OnSetPoint1) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1ba]">CoreQuadView_OnSetPoint1</a> from core.o(.text.CoreQuadView_OnSetPoint1) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1b9]">CoreQuadView_OnSetPoint2</a> from core.o(.text.CoreQuadView_OnSetPoint2) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1b9]">CoreQuadView_OnSetPoint2</a> from core.o(.text.CoreQuadView_OnSetPoint2) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1b8]">CoreQuadView_OnSetPoint3</a> from core.o(.text.CoreQuadView_OnSetPoint3) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1b8]">CoreQuadView_OnSetPoint3</a> from core.o(.text.CoreQuadView_OnSetPoint3) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1b7]">CoreQuadView_OnSetPoint4</a> from core.o(.text.CoreQuadView_OnSetPoint4) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1b7]">CoreQuadView_OnSetPoint4</a> from core.o(.text.CoreQuadView_OnSetPoint4) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1b1]">CoreQuadView__Done</a> from core.o(.text.CoreQuadView__Done) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1af]">CoreQuadView__Init</a> from core.o(.text.CoreQuadView__Init) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1b0]">CoreQuadView__ReInit</a> from core.o(.text.CoreQuadView__ReInit) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1b2]">CoreQuadView_initLayoutContext</a> from core.o(.text.CoreQuadView_initLayoutContext) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1b2]">CoreQuadView_initLayoutContext</a> from core.o(.text.CoreQuadView_initLayoutContext) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1b2]">CoreQuadView_initLayoutContext</a> from core.o(.text.CoreQuadView_initLayoutContext) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[1b2]">CoreQuadView_initLayoutContext</a> from core.o(.text.CoreQuadView_initLayoutContext) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[155]">CoreRectView_ArrangeView</a> from core.o(.text.CoreRectView_ArrangeView) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[157]">CoreRectView_GetExtent</a> from core.o(.text.CoreRectView_GetExtent) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[156]">CoreRectView_MoveView</a> from core.o(.text.CoreRectView_MoveView) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[1be]">CoreRectView_OnSetBounds</a> from core.o(.text.CoreRectView_OnSetBounds) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[1be]">CoreRectView_OnSetBounds</a> from core.o(.text.CoreRectView_OnSetBounds) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[1be]">CoreRectView_OnSetBounds</a> from core.o(.text.CoreRectView_OnSetBounds) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[1be]">CoreRectView_OnSetBounds</a> from core.o(.text.CoreRectView_OnSetBounds) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[1be]">CoreRectView_OnSetBounds</a> from core.o(.text.CoreRectView_OnSetBounds) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[1bd]">CoreRectView__Done</a> from core.o(.text.CoreRectView__Done) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[1bb]">CoreRectView__Init</a> from core.o(.text.CoreRectView__Init) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[1bc]">CoreRectView__ReInit</a> from core.o(.text.CoreRectView__ReInit) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[150]">CoreRectView_initLayoutContext</a> from core.o(.text.CoreRectView_initLayoutContext) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[1c1]">CoreResource__Done</a> from core.o(.text.CoreResource__Done) referenced from core.o(.rodata.__vmt_CoreResource)
 <LI><a href="#[1bf]">CoreResource__Init</a> from core.o(.text.CoreResource__Init) referenced from core.o(.rodata.__vmt_CoreResource)
 <LI><a href="#[1c0]">CoreResource__ReInit</a> from core.o(.text.CoreResource__ReInit) referenced from core.o(.rodata.__vmt_CoreResource)
 <LI><a href="#[15f]">CoreRoot_BroadcastEvent</a> from core.o(.text.CoreRoot_BroadcastEvent) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[15f]">CoreRoot_BroadcastEvent</a> from core.o(.text.CoreRoot_BroadcastEvent) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[158]">CoreRoot_ChangeViewState</a> from core.o(.text.CoreRoot_ChangeViewState) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[158]">CoreRoot_ChangeViewState</a> from core.o(.text.CoreRoot_ChangeViewState) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[15e]">CoreRoot_DispatchEvent</a> from core.o(.text.CoreRoot_DispatchEvent) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[15e]">CoreRoot_DispatchEvent</a> from core.o(.text.CoreRoot_DispatchEvent) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[152]">CoreRoot_Draw</a> from core.o(.text.CoreRoot_Draw) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[152]">CoreRoot_Draw</a> from core.o(.text.CoreRoot_Draw) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[151]">CoreRoot_GetRoot</a> from core.o(.text.CoreRoot_GetRoot) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[151]">CoreRoot_GetRoot</a> from core.o(.text.CoreRoot_GetRoot) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[161]">CoreRoot_InvalidateArea</a> from core.o(.text.CoreRoot_InvalidateArea) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[161]">CoreRoot_InvalidateArea</a> from core.o(.text.CoreRoot_InvalidateArea) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[15d]">CoreRoot_IsActiveDialog</a> from core.o(.text.CoreRoot_IsActiveDialog) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[15d]">CoreRoot_IsActiveDialog</a> from core.o(.text.CoreRoot_IsActiveDialog) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[15c]">CoreRoot_IsCurrentDialog</a> from core.o(.text.CoreRoot_IsCurrentDialog) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[15c]">CoreRoot_IsCurrentDialog</a> from core.o(.text.CoreRoot_IsCurrentDialog) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[15a]">CoreRoot_OnSetFocus</a> from core.o(.text.CoreRoot_OnSetFocus) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[15a]">CoreRoot_OnSetFocus</a> from core.o(.text.CoreRoot_OnSetFocus) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[15b]">CoreRoot_OnSetOpacity</a> from core.o(.text.CoreRoot_OnSetOpacity) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[15b]">CoreRoot_OnSetOpacity</a> from core.o(.text.CoreRoot_OnSetOpacity) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[1c4]">CoreRoot__Done</a> from core.o(.text.CoreRoot__Done) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[1c2]">CoreRoot__Init</a> from core.o(.text.CoreRoot__Init) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[1c3]">CoreRoot__ReInit</a> from core.o(.text.CoreRoot__ReInit) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[7f]">CoreRoot_cursorHoldTimerProc</a> from core.o(.text.CoreRoot_cursorHoldTimerProc) referenced 2 times from core.o(.text.CoreRoot__Init)
 <LI><a href="#[1ca]">CoreSimpleTouchHandler_CursorHitTest</a> from core.o(.text.CoreSimpleTouchHandler_CursorHitTest) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1c8]">CoreSimpleTouchHandler_Draw</a> from core.o(.text.CoreSimpleTouchHandler_Draw) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1c9]">CoreSimpleTouchHandler_HandleEvent</a> from core.o(.text.CoreSimpleTouchHandler_HandleEvent) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1c7]">CoreSimpleTouchHandler__Done</a> from core.o(.text.CoreSimpleTouchHandler__Done) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1c5]">CoreSimpleTouchHandler__Init</a> from core.o(.text.CoreSimpleTouchHandler__Init) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1c6]">CoreSimpleTouchHandler__ReInit</a> from core.o(.text.CoreSimpleTouchHandler__ReInit) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1d4]">CoreTaskQueue__Done</a> from core.o(.text.CoreTaskQueue__Done) referenced from core.o(.rodata.__vmt_CoreTaskQueue)
 <LI><a href="#[1d2]">CoreTaskQueue__Init</a> from core.o(.text.CoreTaskQueue__Init) referenced from core.o(.rodata.__vmt_CoreTaskQueue)
 <LI><a href="#[1d3]">CoreTaskQueue__ReInit</a> from core.o(.text.CoreTaskQueue__ReInit) referenced from core.o(.rodata.__vmt_CoreTaskQueue)
 <LI><a href="#[82]">CoreTaskQueue_onDispatchNext</a> from core.o(.text.CoreTaskQueue_onDispatchNext) referenced 2 times from core.o(.text.CoreTaskQueue_onPreDispatchNext3)
 <LI><a href="#[7d]">CoreTaskQueue_onPreDispatchNext1</a> from core.o(.text.CoreTaskQueue_onPreDispatchNext1) referenced 2 times from core.o(.text.CoreGroup_FadeGroup)
 <LI><a href="#[7d]">CoreTaskQueue_onPreDispatchNext1</a> from core.o(.text.CoreTaskQueue_onPreDispatchNext1) referenced 2 times from core.o(.text.CoreTaskQueue_CancelTask)
 <LI><a href="#[7d]">CoreTaskQueue_onPreDispatchNext1</a> from core.o(.text.CoreTaskQueue_onPreDispatchNext1) referenced 2 times from core.o(.text.CoreTask_Complete)
 <LI><a href="#[80]">CoreTaskQueue_onPreDispatchNext2</a> from core.o(.text.CoreTaskQueue_onPreDispatchNext2) referenced 2 times from core.o(.text.CoreTaskQueue_onPreDispatchNext1)
 <LI><a href="#[81]">CoreTaskQueue_onPreDispatchNext3</a> from core.o(.text.CoreTaskQueue_onPreDispatchNext3) referenced 2 times from core.o(.text.CoreTaskQueue_onPreDispatchNext2)
 <LI><a href="#[1d1]">CoreTask_Complete</a> from core.o(.text.CoreTask_Complete) referenced from core.o(.rodata.__vmt_CoreTask)
 <LI><a href="#[1cf]">CoreTask_OnCancel</a> from core.o(.text.CoreTask_OnCancel) referenced from core.o(.rodata.__vmt_CoreTask)
 <LI><a href="#[1ce]">CoreTask_OnComplete</a> from core.o(.text.CoreTask_OnComplete) referenced from core.o(.rodata.__vmt_CoreTask)
 <LI><a href="#[1d0]">CoreTask_OnStart</a> from core.o(.text.CoreTask_OnStart) referenced from core.o(.rodata.__vmt_CoreTask)
 <LI><a href="#[1cd]">CoreTask__Done</a> from core.o(.text.CoreTask__Done) referenced from core.o(.rodata.__vmt_CoreTask)
 <LI><a href="#[1cb]">CoreTask__Init</a> from core.o(.text.CoreTask__Init) referenced from core.o(.rodata.__vmt_CoreTask)
 <LI><a href="#[1cc]">CoreTask__ReInit</a> from core.o(.text.CoreTask__ReInit) referenced from core.o(.rodata.__vmt_CoreTask)
 <LI><a href="#[1d8]">CoreTimer_Trigger</a> from core.o(.text.CoreTimer_Trigger) referenced from core.o(.rodata.__vmt_CoreTimer)
 <LI><a href="#[1d7]">CoreTimer__Done</a> from core.o(.text.CoreTimer__Done) referenced from core.o(.rodata.__vmt_CoreTimer)
 <LI><a href="#[1d5]">CoreTimer__Init</a> from core.o(.text.CoreTimer__Init) referenced from core.o(.rodata.__vmt_CoreTimer)
 <LI><a href="#[1d6]">CoreTimer__ReInit</a> from core.o(.text.CoreTimer__ReInit) referenced from core.o(.rodata.__vmt_CoreTimer)
 <LI><a href="#[1dd]">CoreView_ArrangeView</a> from core.o(.text.CoreView_ArrangeView) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[1ad]">CoreView_ChangeViewState</a> from core.o(.text.CoreView_ChangeViewState) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[1ac]">CoreView_CursorHitTest</a> from core.o(.text.CoreView_CursorHitTest) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[1b3]">CoreView_Draw</a> from core.o(.text.CoreView_Draw) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[1b3]">CoreView_Draw</a> from core.o(.text.CoreView_Draw) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[1b3]">CoreView_Draw</a> from core.o(.text.CoreView_Draw) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[1b3]">CoreView_Draw</a> from core.o(.text.CoreView_Draw) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[1df]">CoreView_GetExtent</a> from core.o(.text.CoreView_GetExtent) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from core.o(.rodata.__vmt_CoreSimpleTouchHandler)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[165]">CoreView_GetRoot</a> from core.o(.text.CoreView_GetRoot) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from application.o(.rodata.__vmt_ApplicationApplication)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from application.o(.rodata.__vmt_ApplicationCalibration)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from application.o(.rodata.__vmt_ApplicationDebug)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from application.o(.rodata.__vmt_ApplicationDetectorScreen)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from application.o(.rodata.__vmt_ApplicationMenu)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from application.o(.rodata.__vmt_ApplicationSettings)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from application.o(.rodata.__vmt_ApplicationWelcomeScreen)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from core.o(.rodata.__vmt_CoreGroup)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from core.o(.rodata.__vmt_CoreOutline)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from core.o(.rodata.__vmt_CoreQuadView)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from core.o(.rodata.__vmt_CoreRectView)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from core.o(.rodata.__vmt_CoreRoot)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[153]">CoreView_HandleEvent</a> from core.o(.text.CoreView_HandleEvent) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[1de]">CoreView_MoveView</a> from core.o(.text.CoreView_MoveView) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[1db]">CoreView__Done</a> from core.o(.text.CoreView__Done) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[1d9]">CoreView__Init</a> from core.o(.text.CoreView__Init) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[1da]">CoreView__ReInit</a> from core.o(.text.CoreView__ReInit) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[1dc]">CoreView_initLayoutContext</a> from core.o(.text.CoreView_initLayoutContext) referenced from core.o(.rodata.__vmt_CoreView)
 <LI><a href="#[58]">DCMI_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[63]">DMA2D_IRQHandler</a> from ew_bsp_graphics.o(.text.DMA2D_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f4xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[47]">ETH_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[48]">ETH_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from stm32f4xx_it.o(.text.EXTI0_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1e7]">EffectsEffectTimerClass_Trigger</a> from effects.o(.text.EffectsEffectTimerClass_Trigger) referenced from effects.o(.rodata.__vmt_EffectsEffectTimerClass)
 <LI><a href="#[1e6]">EffectsEffectTimerClass__Done</a> from effects.o(.text.EffectsEffectTimerClass__Done) referenced from effects.o(.rodata.__vmt_EffectsEffectTimerClass)
 <LI><a href="#[1e4]">EffectsEffectTimerClass__Init</a> from effects.o(.text.EffectsEffectTimerClass__Init) referenced from effects.o(.rodata.__vmt_EffectsEffectTimerClass)
 <LI><a href="#[1e5]">EffectsEffectTimerClass__ReInit</a> from effects.o(.text.EffectsEffectTimerClass__ReInit) referenced from effects.o(.rodata.__vmt_EffectsEffectTimerClass)
 <LI><a href="#[147]">EffectsEffectTimer__Init</a> from effects.o(.text.EffectsEffectTimer__Init) referenced from effects.o(.rodata._EffectsEffectTimer)
 <LI><a href="#[1e3]">EffectsEffect_Animate</a> from effects.o(.text.EffectsEffect_Animate) referenced from effects.o(.rodata.__vmt_EffectsEffect)
 <LI><a href="#[1e2]">EffectsEffect__Done</a> from effects.o(.text.EffectsEffect__Done) referenced from effects.o(.rodata.__vmt_EffectsEffect)
 <LI><a href="#[1e0]">EffectsEffect__Init</a> from effects.o(.text.EffectsEffect__Init) referenced from effects.o(.rodata.__vmt_EffectsEffect)
 <LI><a href="#[1e1]">EffectsEffect__ReInit</a> from effects.o(.text.EffectsEffect__ReInit) referenced from effects.o(.rodata.__vmt_EffectsEffect)
 <LI><a href="#[84]">EffectsEffect_timerSlot</a> from effects.o(.text.EffectsEffect_timerSlot) referenced 4 times from effects.o(.text.EffectsEffect_OnSetEnabled)
 <LI><a href="#[84]">EffectsEffect_timerSlot</a> from effects.o(.text.EffectsEffect_timerSlot) referenced 2 times from effects.o(.text.EffectsEffect_timerSlot)
 <LI><a href="#[1f4]">EffectsFaderTask_Complete</a> from effects.o(.text.EffectsFaderTask_Complete) referenced from effects.o(.rodata.__vmt_EffectsFaderTask)
 <LI><a href="#[1f2]">EffectsFaderTask_OnCancel</a> from effects.o(.text.EffectsFaderTask_OnCancel) referenced from effects.o(.rodata.__vmt_EffectsFaderTask)
 <LI><a href="#[1f1]">EffectsFaderTask_OnComplete</a> from effects.o(.text.EffectsFaderTask_OnComplete) referenced from effects.o(.rodata.__vmt_EffectsFaderTask)
 <LI><a href="#[1f3]">EffectsFaderTask_OnStart</a> from effects.o(.text.EffectsFaderTask_OnStart) referenced from effects.o(.rodata.__vmt_EffectsFaderTask)
 <LI><a href="#[1f0]">EffectsFaderTask__Done</a> from effects.o(.text.EffectsFaderTask__Done) referenced from effects.o(.rodata.__vmt_EffectsFaderTask)
 <LI><a href="#[1ee]">EffectsFaderTask__Init</a> from effects.o(.text.EffectsFaderTask__Init) referenced from effects.o(.rodata.__vmt_EffectsFaderTask)
 <LI><a href="#[1ef]">EffectsFaderTask__ReInit</a> from effects.o(.text.EffectsFaderTask__ReInit) referenced from effects.o(.rodata.__vmt_EffectsFaderTask)
 <LI><a href="#[1eb]">EffectsFader_IsFinished</a> from effects.o(.text.EffectsFader_IsFinished) referenced from effects.o(.rodata.__vmt_EffectsFader)
 <LI><a href="#[1ec]">EffectsFader_OnEnd</a> from effects.o(.text.EffectsFader_OnEnd) referenced from effects.o(.rodata.__vmt_EffectsFader)
 <LI><a href="#[1ed]">EffectsFader_OnStart</a> from effects.o(.text.EffectsFader_OnStart) referenced from effects.o(.rodata.__vmt_EffectsFader)
 <LI><a href="#[1ea]">EffectsFader__Done</a> from effects.o(.text.EffectsFader__Done) referenced from effects.o(.rodata.__vmt_EffectsFader)
 <LI><a href="#[1e8]">EffectsFader__Init</a> from effects.o(.text.EffectsFader__Init) referenced from effects.o(.rodata.__vmt_EffectsFader)
 <LI><a href="#[1e9]">EffectsFader__ReInit</a> from effects.o(.text.EffectsFader__ReInit) referenced from effects.o(.rodata.__vmt_EffectsFader)
 <LI><a href="#[1f8]">EffectsFloatEffect_Animate</a> from effects.o(.text.EffectsFloatEffect_Animate) referenced from effects.o(.rodata.__vmt_EffectsFloatEffect)
 <LI><a href="#[1f7]">EffectsFloatEffect__Done</a> from effects.o(.text.EffectsFloatEffect__Done) referenced from effects.o(.rodata.__vmt_EffectsFloatEffect)
 <LI><a href="#[1f5]">EffectsFloatEffect__Init</a> from effects.o(.text.EffectsFloatEffect__Init) referenced from effects.o(.rodata.__vmt_EffectsFloatEffect)
 <LI><a href="#[1f6]">EffectsFloatEffect__ReInit</a> from effects.o(.text.EffectsFloatEffect__ReInit) referenced from effects.o(.rodata.__vmt_EffectsFloatEffect)
 <LI><a href="#[148]">EffectsShowHideCentered__Init</a> from effects.o(.text.EffectsShowHideCentered__Init) referenced from effects.o(.rodata._EffectsShowHideCentered)
 <LI><a href="#[1fd]">EffectsShowHideTransition_CreateDismissFader</a> from effects.o(.text.EffectsShowHideTransition_CreateDismissFader) referenced from effects.o(.rodata.__vmt_EffectsShowHideTransition)
 <LI><a href="#[1ff]">EffectsShowHideTransition_CreateOverlayFader</a> from effects.o(.text.EffectsShowHideTransition_CreateOverlayFader) referenced from effects.o(.rodata.__vmt_EffectsShowHideTransition)
 <LI><a href="#[1fc]">EffectsShowHideTransition_CreatePresentFader</a> from effects.o(.text.EffectsShowHideTransition_CreatePresentFader) referenced from effects.o(.rodata.__vmt_EffectsShowHideTransition)
 <LI><a href="#[1fe]">EffectsShowHideTransition_CreateRestoreFader</a> from effects.o(.text.EffectsShowHideTransition_CreateRestoreFader) referenced from effects.o(.rodata.__vmt_EffectsShowHideTransition)
 <LI><a href="#[1fb]">EffectsShowHideTransition__Done</a> from effects.o(.text.EffectsShowHideTransition__Done) referenced from effects.o(.rodata.__vmt_EffectsShowHideTransition)
 <LI><a href="#[1f9]">EffectsShowHideTransition__Init</a> from effects.o(.text.EffectsShowHideTransition__Init) referenced from effects.o(.rodata.__vmt_EffectsShowHideTransition)
 <LI><a href="#[1fa]">EffectsShowHideTransition__ReInit</a> from effects.o(.text.EffectsShowHideTransition__ReInit) referenced from effects.o(.rodata.__vmt_EffectsShowHideTransition)
 <LI><a href="#[85]">EffectsShowHideTransition_onInitializeIn</a> from effects.o(.text.EffectsShowHideTransition_onInitializeIn) referenced 2 times from effects.o(.text.EffectsShowHideTransition_CreatePresentFader)
 <LI><a href="#[202]">EffectsTimingList__Done</a> from effects.o(.text.EffectsTimingList__Done) referenced from effects.o(.rodata.__vmt_EffectsTimingList)
 <LI><a href="#[200]">EffectsTimingList__Init</a> from effects.o(.text.EffectsTimingList__Init) referenced from effects.o(.rodata.__vmt_EffectsTimingList)
 <LI><a href="#[201]">EffectsTimingList__ReInit</a> from effects.o(.text.EffectsTimingList__ReInit) referenced from effects.o(.rodata.__vmt_EffectsTimingList)
 <LI><a href="#[207]">EffectsTransition_CreateDismissFader</a> from effects.o(.text.EffectsTransition_CreateDismissFader) referenced from effects.o(.rodata.__vmt_EffectsTransition)
 <LI><a href="#[209]">EffectsTransition_CreateOverlayFader</a> from effects.o(.text.EffectsTransition_CreateOverlayFader) referenced from effects.o(.rodata.__vmt_EffectsTransition)
 <LI><a href="#[206]">EffectsTransition_CreatePresentFader</a> from effects.o(.text.EffectsTransition_CreatePresentFader) referenced from effects.o(.rodata.__vmt_EffectsTransition)
 <LI><a href="#[208]">EffectsTransition_CreateRestoreFader</a> from effects.o(.text.EffectsTransition_CreateRestoreFader) referenced from effects.o(.rodata.__vmt_EffectsTransition)
 <LI><a href="#[205]">EffectsTransition__Done</a> from effects.o(.text.EffectsTransition__Done) referenced from effects.o(.rodata.__vmt_EffectsTransition)
 <LI><a href="#[203]">EffectsTransition__Init</a> from effects.o(.text.EffectsTransition__Init) referenced from effects.o(.rodata.__vmt_EffectsTransition)
 <LI><a href="#[204]">EffectsTransition__ReInit</a> from effects.o(.text.EffectsTransition__ReInit) referenced from effects.o(.rodata.__vmt_EffectsTransition)
 <LI><a href="#[20d]">EffectsVisibilityFader_IsFinished</a> from effects.o(.text.EffectsVisibilityFader_IsFinished) referenced from effects.o(.rodata.__vmt_EffectsVisibilityFader)
 <LI><a href="#[20e]">EffectsVisibilityFader_OnEnd</a> from effects.o(.text.EffectsVisibilityFader_OnEnd) referenced from effects.o(.rodata.__vmt_EffectsVisibilityFader)
 <LI><a href="#[20f]">EffectsVisibilityFader_OnStart</a> from effects.o(.text.EffectsVisibilityFader_OnStart) referenced from effects.o(.rodata.__vmt_EffectsVisibilityFader)
 <LI><a href="#[20c]">EffectsVisibilityFader__Done</a> from effects.o(.text.EffectsVisibilityFader__Done) referenced from effects.o(.rodata.__vmt_EffectsVisibilityFader)
 <LI><a href="#[20a]">EffectsVisibilityFader__Init</a> from effects.o(.text.EffectsVisibilityFader__Init) referenced from effects.o(.rodata.__vmt_EffectsVisibilityFader)
 <LI><a href="#[20b]">EffectsVisibilityFader__ReInit</a> from effects.o(.text.EffectsVisibilityFader__ReInit) referenced from effects.o(.rodata.__vmt_EffectsVisibilityFader)
 <LI><a href="#[e0]">EwCopyAlpha8RowGradient</a> from ewextpxl_RGB565.o(.text.EwCopyAlpha8RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[e1]">EwCopyAlpha8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwCopyAlpha8RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[9b]">EwCopyAlpha8RowSolid</a> from ewextpxl_RGB565.o(.text.EwCopyAlpha8RowSolid) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[9b]">EwCopyAlpha8RowSolid</a> from ewextpxl_RGB565.o(.text.EwCopyAlpha8RowSolid) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[8f]">EwCopyAlpha8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwCopyAlpha8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[8f]">EwCopyAlpha8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwCopyAlpha8RowSolidBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[9a]">EwCopyIndex8Row</a> from ewextpxl_RGB565.o(.text.EwCopyIndex8Row) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[8e]">EwCopyIndex8RowBlend</a> from ewextpxl_RGB565.o(.text.EwCopyIndex8RowBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[de]">EwCopyIndex8RowGradient</a> from ewextpxl_RGB565.o(.text.EwCopyIndex8RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[df]">EwCopyIndex8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwCopyIndex8RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[99]">EwCopyIndex8RowSolid</a> from ewextpxl_RGB565.o(.text.EwCopyIndex8RowSolid) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[99]">EwCopyIndex8RowSolid</a> from ewextpxl_RGB565.o(.text.EwCopyIndex8RowSolid) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[8d]">EwCopyIndex8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwCopyIndex8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[8d]">EwCopyIndex8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwCopyIndex8RowSolidBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[98]">EwCopyNativeRow</a> from ewextpxl_RGB565.o(.text.EwCopyNativeRow) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[8c]">EwCopyNativeRowBlend</a> from ewextpxl_RGB565.o(.text.EwCopyNativeRowBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[dc]">EwCopyNativeRowGradient</a> from ewextpxl_RGB565.o(.text.EwCopyNativeRowGradient) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[dd]">EwCopyNativeRowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwCopyNativeRowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[97]">EwCopyNativeRowSolid</a> from ewextpxl_RGB565.o(.text.EwCopyNativeRowSolid) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[97]">EwCopyNativeRowSolid</a> from ewextpxl_RGB565.o(.text.EwCopyNativeRowSolid) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[8b]">EwCopyNativeRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwCopyNativeRowSolidBlend) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[8b]">EwCopyNativeRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwCopyNativeRowSolidBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[9e]">EwCopyRGB565Row</a> from ewextpxl_RGB565.o(.text.EwCopyRGB565Row) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[e2]">EwCopyRGB565RowGradient</a> from ewextpxl_RGB565.o(.text.EwCopyRGB565RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[e3]">EwCopyRGB565RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwCopyRGB565RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[9d]">EwCopyRGB565RowSolid</a> from ewextpxl_RGB565.o(.text.EwCopyRGB565RowSolid) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[9d]">EwCopyRGB565RowSolid</a> from ewextpxl_RGB565.o(.text.EwCopyRGB565RowSolid) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[91]">EwCopyRGB565RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwCopyRGB565RowSolidBlend) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[91]">EwCopyRGB565RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwCopyRGB565RowSolidBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[ed]">EwFillRowGradient</a> from ewextpxl_RGB565.o(.text.EwFillRowGradient) referenced 2 times from ewgfxtasks.o(.rodata.FillWorkers)
 <LI><a href="#[ee]">EwFillRowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwFillRowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.FillWorkers)
 <LI><a href="#[a7]">EwFillRowSolid</a> from ewextpxl_RGB565.o(.text.EwFillRowSolid) referenced from ewgfxtasks.o(.rodata.FillWorkers)
 <LI><a href="#[a7]">EwFillRowSolid</a> from ewextpxl_RGB565.o(.text.EwFillRowSolid) referenced 2 times from ewextgfx.o(.text.GfxFillDriver)
 <LI><a href="#[a8]">EwFillRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwFillRowSolidBlend) referenced from ewgfxtasks.o(.rodata.FillWorkers)
 <LI><a href="#[a8]">EwFillRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwFillRowSolidBlend) referenced 2 times from ewextgfx.o(.text.GfxFillDriver)
 <LI><a href="#[e8]">EwScreenCopyAlpha8RowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenCopyAlpha8RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[e9]">EwScreenCopyAlpha8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyAlpha8RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[9c]">EwScreenCopyAlpha8RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenCopyAlpha8RowSolid) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[9c]">EwScreenCopyAlpha8RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenCopyAlpha8RowSolid) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[90]">EwScreenCopyAlpha8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyAlpha8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[90]">EwScreenCopyAlpha8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyAlpha8RowSolidBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[a2]">EwScreenCopyIndex8Row</a> from ewextpxl_RGB565.o(.text.EwScreenCopyIndex8Row) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[96]">EwScreenCopyIndex8RowBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[e6]">EwScreenCopyIndex8RowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[e7]">EwScreenCopyIndex8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[a1]">EwScreenCopyIndex8RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowSolid) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[a1]">EwScreenCopyIndex8RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowSolid) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[95]">EwScreenCopyIndex8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[95]">EwScreenCopyIndex8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowSolidBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[a0]">EwScreenCopyNativeRow</a> from ewextpxl_RGB565.o(.text.EwScreenCopyNativeRow) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[94]">EwScreenCopyNativeRowBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[e4]">EwScreenCopyNativeRowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowGradient) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[e5]">EwScreenCopyNativeRowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[9f]">EwScreenCopyNativeRowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowSolid) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[9f]">EwScreenCopyNativeRowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowSolid) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[93]">EwScreenCopyNativeRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowSolidBlend) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[93]">EwScreenCopyNativeRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowSolidBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[a4]">EwScreenCopyRGB565Row</a> from ewextpxl_RGB565.o(.text.EwScreenCopyRGB565Row) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[ea]">EwScreenCopyRGB565RowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenCopyRGB565RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[eb]">EwScreenCopyRGB565RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyRGB565RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[a3]">EwScreenCopyRGB565RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenCopyRGB565RowSolid) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[a3]">EwScreenCopyRGB565RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenCopyRGB565RowSolid) referenced 2 times from ewextgfx.o(.text.GfxCopyDriver)
 <LI><a href="#[92]">EwScreenCopyRGB565RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyRGB565RowSolidBlend) referenced from ewgfxtasks.o(.rodata.CopyWorkers)
 <LI><a href="#[92]">EwScreenCopyRGB565RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenCopyRGB565RowSolidBlend) referenced 2 times from ewextgfx.o(.text.GfxBlendDriver)
 <LI><a href="#[ef]">EwScreenFillRowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenFillRowGradient) referenced 2 times from ewgfxtasks.o(.rodata.FillWorkers)
 <LI><a href="#[f0]">EwScreenFillRowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenFillRowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.FillWorkers)
 <LI><a href="#[a5]">EwScreenFillRowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenFillRowSolid) referenced from ewgfxtasks.o(.rodata.FillWorkers)
 <LI><a href="#[a5]">EwScreenFillRowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenFillRowSolid) referenced 2 times from ewextgfx.o(.text.GfxFillDriver)
 <LI><a href="#[a6]">EwScreenFillRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenFillRowSolidBlend) referenced from ewgfxtasks.o(.rodata.FillWorkers)
 <LI><a href="#[a6]">EwScreenFillRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenFillRowSolidBlend) referenced 2 times from ewextgfx.o(.text.GfxFillDriver)
 <LI><a href="#[88]">EwScreenSetPixelSolid</a> from ewextpxl_RGB565.o(.text.EwScreenSetPixelSolid) referenced 2 times from ewgfxtasks.o(.text.EwExecuteTasks)
 <LI><a href="#[89]">EwScreenSetPixelSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenSetPixelSolidBlend) referenced 2 times from ewgfxtasks.o(.text.EwExecuteTasks)
 <LI><a href="#[139]">EwScreenWarpAlpha8RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[139]">EwScreenWarpAlpha8RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[13a]">EwScreenWarpAlpha8RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[13a]">EwScreenWarpAlpha8RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[137]">EwScreenWarpAlpha8RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[137]">EwScreenWarpAlpha8RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[138]">EwScreenWarpAlpha8RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[138]">EwScreenWarpAlpha8RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[135]">EwScreenWarpAlpha8RowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[135]">EwScreenWarpAlpha8RowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[136]">EwScreenWarpAlpha8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[136]">EwScreenWarpAlpha8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[133]">EwScreenWarpAlpha8RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[133]">EwScreenWarpAlpha8RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[134]">EwScreenWarpAlpha8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[134]">EwScreenWarpAlpha8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[127]">EwScreenWarpIndex8Row</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8Row) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[127]">EwScreenWarpIndex8Row</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8Row) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[128]">EwScreenWarpIndex8RowBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[128]">EwScreenWarpIndex8RowBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[12d]">EwScreenWarpIndex8RowFilter</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilter) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[12d]">EwScreenWarpIndex8RowFilter</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilter) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[12e]">EwScreenWarpIndex8RowFilterBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[12e]">EwScreenWarpIndex8RowFilterBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[131]">EwScreenWarpIndex8RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[131]">EwScreenWarpIndex8RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[132]">EwScreenWarpIndex8RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[132]">EwScreenWarpIndex8RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[12f]">EwScreenWarpIndex8RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[12f]">EwScreenWarpIndex8RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[130]">EwScreenWarpIndex8RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[130]">EwScreenWarpIndex8RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[12b]">EwScreenWarpIndex8RowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[12b]">EwScreenWarpIndex8RowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[12c]">EwScreenWarpIndex8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[12c]">EwScreenWarpIndex8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[129]">EwScreenWarpIndex8RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[129]">EwScreenWarpIndex8RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[12a]">EwScreenWarpIndex8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[12a]">EwScreenWarpIndex8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[11b]">EwScreenWarpNativeRow</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRow) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[11b]">EwScreenWarpNativeRow</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRow) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[11c]">EwScreenWarpNativeRowBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[11c]">EwScreenWarpNativeRowBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[121]">EwScreenWarpNativeRowFilter</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilter) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[121]">EwScreenWarpNativeRowFilter</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilter) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[122]">EwScreenWarpNativeRowFilterBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[122]">EwScreenWarpNativeRowFilterBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[125]">EwScreenWarpNativeRowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[125]">EwScreenWarpNativeRowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[126]">EwScreenWarpNativeRowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[126]">EwScreenWarpNativeRowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[123]">EwScreenWarpNativeRowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[123]">EwScreenWarpNativeRowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[124]">EwScreenWarpNativeRowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[124]">EwScreenWarpNativeRowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[11f]">EwScreenWarpNativeRowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[11f]">EwScreenWarpNativeRowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[120]">EwScreenWarpNativeRowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[120]">EwScreenWarpNativeRowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[11d]">EwScreenWarpNativeRowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[11d]">EwScreenWarpNativeRowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[11e]">EwScreenWarpNativeRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[11e]">EwScreenWarpNativeRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[13b]">EwScreenWarpRGB565Row</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565Row) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[13b]">EwScreenWarpRGB565Row</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565Row) referenced 2 times from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[140]">EwScreenWarpRGB565RowFilter</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilter) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[140]">EwScreenWarpRGB565RowFilter</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilter) referenced 2 times from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[143]">EwScreenWarpRGB565RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[143]">EwScreenWarpRGB565RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[144]">EwScreenWarpRGB565RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[144]">EwScreenWarpRGB565RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[141]">EwScreenWarpRGB565RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[141]">EwScreenWarpRGB565RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[142]">EwScreenWarpRGB565RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[142]">EwScreenWarpRGB565RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[13e]">EwScreenWarpRGB565RowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[13e]">EwScreenWarpRGB565RowGradient</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[13f]">EwScreenWarpRGB565RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[13f]">EwScreenWarpRGB565RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[13c]">EwScreenWarpRGB565RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[13c]">EwScreenWarpRGB565RowSolid</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[13d]">EwScreenWarpRGB565RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[13d]">EwScreenWarpRGB565RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[86]">EwSetPixelSolid</a> from ewextpxl_RGB565.o(.text.EwSetPixelSolid) referenced 2 times from ewgfxtasks.o(.text.EwExecuteTasks)
 <LI><a href="#[87]">EwSetPixelSolidBlend</a> from ewextpxl_RGB565.o(.text.EwSetPixelSolidBlend) referenced 2 times from ewgfxtasks.o(.text.EwExecuteTasks)
 <LI><a href="#[10f]">EwWarpAlpha8RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[10f]">EwWarpAlpha8RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[110]">EwWarpAlpha8RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[110]">EwWarpAlpha8RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[10d]">EwWarpAlpha8RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[10d]">EwWarpAlpha8RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[10e]">EwWarpAlpha8RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[10e]">EwWarpAlpha8RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[10b]">EwWarpAlpha8RowGradient</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[10b]">EwWarpAlpha8RowGradient</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[10c]">EwWarpAlpha8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[10c]">EwWarpAlpha8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[109]">EwWarpAlpha8RowSolid</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[109]">EwWarpAlpha8RowSolid</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[10a]">EwWarpAlpha8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[10a]">EwWarpAlpha8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpAlpha8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[fd]">EwWarpIndex8Row</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8Row) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[fd]">EwWarpIndex8Row</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8Row) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[fe]">EwWarpIndex8RowBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[fe]">EwWarpIndex8RowBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[103]">EwWarpIndex8RowFilter</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilter) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[103]">EwWarpIndex8RowFilter</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilter) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[104]">EwWarpIndex8RowFilterBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[104]">EwWarpIndex8RowFilterBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[107]">EwWarpIndex8RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[107]">EwWarpIndex8RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[108]">EwWarpIndex8RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[108]">EwWarpIndex8RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[105]">EwWarpIndex8RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[105]">EwWarpIndex8RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[106]">EwWarpIndex8RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[106]">EwWarpIndex8RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[101]">EwWarpIndex8RowGradient</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[101]">EwWarpIndex8RowGradient</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[102]">EwWarpIndex8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[102]">EwWarpIndex8RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[ff]">EwWarpIndex8RowSolid</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[ff]">EwWarpIndex8RowSolid</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[100]">EwWarpIndex8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[100]">EwWarpIndex8RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpIndex8RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[f1]">EwWarpNativeRow</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRow) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[f1]">EwWarpNativeRow</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRow) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[f2]">EwWarpNativeRowBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[f2]">EwWarpNativeRowBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[f7]">EwWarpNativeRowFilter</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilter) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[f7]">EwWarpNativeRowFilter</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilter) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[f8]">EwWarpNativeRowFilterBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[f8]">EwWarpNativeRowFilterBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[fb]">EwWarpNativeRowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[fb]">EwWarpNativeRowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[fc]">EwWarpNativeRowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[fc]">EwWarpNativeRowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[f9]">EwWarpNativeRowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[f9]">EwWarpNativeRowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[fa]">EwWarpNativeRowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[fa]">EwWarpNativeRowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[f5]">EwWarpNativeRowGradient</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[f5]">EwWarpNativeRowGradient</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[f6]">EwWarpNativeRowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[f6]">EwWarpNativeRowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[f3]">EwWarpNativeRowSolid</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[f3]">EwWarpNativeRowSolid</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[f4]">EwWarpNativeRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[f4]">EwWarpNativeRowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpNativeRowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[111]">EwWarpRGB565Row</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565Row) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[111]">EwWarpRGB565Row</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565Row) referenced 2 times from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[116]">EwWarpRGB565RowFilter</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilter) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[116]">EwWarpRGB565RowFilter</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilter) referenced 2 times from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[119]">EwWarpRGB565RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[119]">EwWarpRGB565RowFilterGradient</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[11a]">EwWarpRGB565RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[11a]">EwWarpRGB565RowFilterGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[117]">EwWarpRGB565RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[117]">EwWarpRGB565RowFilterSolid</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[118]">EwWarpRGB565RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[118]">EwWarpRGB565RowFilterSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[114]">EwWarpRGB565RowGradient</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowGradient) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[114]">EwWarpRGB565RowGradient</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowGradient) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[115]">EwWarpRGB565RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowGradientBlend) referenced 2 times from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[115]">EwWarpRGB565RowGradientBlend</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowGradientBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[112]">EwWarpRGB565RowSolid</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowSolid) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[112]">EwWarpRGB565RowSolid</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowSolid) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[113]">EwWarpRGB565RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpAffineWorkers)
 <LI><a href="#[113]">EwWarpRGB565RowSolidBlend</a> from ewextpxl_RGB565.o(.text.EwWarpRGB565RowSolidBlend) referenced from ewgfxtasks.o(.rodata.WarpPerspWorkers)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3a]">FMC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5a]">FPU_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[db]">GfxBlendDriver</a> from ewextgfx.o(.text.GfxBlendDriver) referenced 12 times from ewgfxtasks.o(.rodata.CopyDrivers)
 <LI><a href="#[da]">GfxCopyDriver</a> from ewextgfx.o(.text.GfxCopyDriver) referenced 16 times from ewgfxtasks.o(.rodata.CopyDrivers)
 <LI><a href="#[ec]">GfxFillDriver</a> from ewextgfx.o(.text.GfxFillDriver) referenced 4 times from ewgfxtasks.o(.rodata.FillDrivers)
 <LI><a href="#[212]">GraphicsArcPath__Done</a> from graphics.o(.text.GraphicsArcPath__Done) referenced from graphics.o(.rodata.__vmt_GraphicsArcPath)
 <LI><a href="#[210]">GraphicsArcPath__Init</a> from graphics.o(.text.GraphicsArcPath__Init) referenced from graphics.o(.rodata.__vmt_GraphicsArcPath)
 <LI><a href="#[211]">GraphicsArcPath__ReInit</a> from graphics.o(.text.GraphicsArcPath__ReInit) referenced from graphics.o(.rodata.__vmt_GraphicsArcPath)
 <LI><a href="#[a9]">GraphicsArcPath_updatePath</a> from graphics.o(.text.GraphicsArcPath_updatePath) referenced 2 times from graphics.o(.text.GraphicsArcPath_OnSetEndAngle)
 <LI><a href="#[a9]">GraphicsArcPath_updatePath</a> from graphics.o(.text.GraphicsArcPath_updatePath) referenced 2 times from graphics.o(.text.GraphicsArcPath_OnSetInnerRadius)
 <LI><a href="#[a9]">GraphicsArcPath_updatePath</a> from graphics.o(.text.GraphicsArcPath_updatePath) referenced 2 times from graphics.o(.text.GraphicsArcPath_OnSetRadius)
 <LI><a href="#[a9]">GraphicsArcPath_updatePath</a> from graphics.o(.text.GraphicsArcPath_updatePath) referenced 2 times from graphics.o(.text.GraphicsArcPath_OnSetStartAngle)
 <LI><a href="#[a9]">GraphicsArcPath_updatePath</a> from graphics.o(.text.GraphicsArcPath_updatePath) referenced 2 times from graphics.o(.text.GraphicsArcPath_OnSetStyle)
 <LI><a href="#[216]">GraphicsCanvas_OnSetFrameSize</a> from graphics.o(.text.GraphicsCanvas_OnSetFrameSize) referenced from graphics.o(.rodata.__vmt_GraphicsCanvas)
 <LI><a href="#[217]">GraphicsCanvas_Update</a> from graphics.o(.text.GraphicsCanvas_Update) referenced from graphics.o(.rodata.__vmt_GraphicsCanvas)
 <LI><a href="#[215]">GraphicsCanvas__Done</a> from graphics.o(.text.GraphicsCanvas__Done) referenced from graphics.o(.rodata.__vmt_GraphicsCanvas)
 <LI><a href="#[213]">GraphicsCanvas__Init</a> from graphics.o(.text.GraphicsCanvas__Init) referenced from graphics.o(.rodata.__vmt_GraphicsCanvas)
 <LI><a href="#[214]">GraphicsCanvas__ReInit</a> from graphics.o(.text.GraphicsCanvas__ReInit) referenced from graphics.o(.rodata.__vmt_GraphicsCanvas)
 <LI><a href="#[21a]">GraphicsPath__Done</a> from graphics.o(.text.GraphicsPath__Done) referenced from graphics.o(.rodata.__vmt_GraphicsPath)
 <LI><a href="#[218]">GraphicsPath__Init</a> from graphics.o(.text.GraphicsPath__Init) referenced from graphics.o(.rodata.__vmt_GraphicsPath)
 <LI><a href="#[219]">GraphicsPath__ReInit</a> from graphics.o(.text.GraphicsPath__ReInit) referenced from graphics.o(.rodata.__vmt_GraphicsPath)
 <LI><a href="#[aa]">GraphicsPath_onUpdate</a> from graphics.o(.text.GraphicsPath_onUpdate) referenced 52 times from graphics.o(.text.GraphicsArcPath_updatePath)
 <LI><a href="#[aa]">GraphicsPath_onUpdate</a> from graphics.o(.text.GraphicsPath_onUpdate) referenced 2 times from graphics.o(.text.GraphicsPath_SetMaxNoOfSubPaths)
 <LI><a href="#[21d]">GraphicsWarpMatrix__Done</a> from graphics.o(.text.GraphicsWarpMatrix__Done) referenced from graphics.o(.rodata.__vmt_GraphicsWarpMatrix)
 <LI><a href="#[21b]">GraphicsWarpMatrix__Init</a> from graphics.o(.text.GraphicsWarpMatrix__Init) referenced from graphics.o(.rodata.__vmt_GraphicsWarpMatrix)
 <LI><a href="#[21c]">GraphicsWarpMatrix__ReInit</a> from graphics.o(.text.GraphicsWarpMatrix__ReInit) referenced from graphics.o(.rodata.__vmt_GraphicsWarpMatrix)
 <LI><a href="#[d9]">GuiThread</a> from main.o(.text.GuiThread) referenced from main.o(.rodata..L__const.main.os_thread_def_EwThreadHandle)
 <LI><a href="#[59]">HASH_RNG_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[83]">HardButtonIsrCallback</a> from devicedriver.o(.text.HardButtonIsrCallback) referenced 2 times from devicedriver.o(.text.DeviceDriver_Initialize)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f4xx_it.o(.text.HardFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[62]">LTDC_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[61]">LTDC_IRQHandler</a> from ew_bsp_display.o(.text.LTDC_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f4xx_it.o(.text.MemManage_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f4xx_it.o(.text.NMI_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4d]">OTG_FS_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from port.o(.text.PendSV_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[221]">ResourcesBitmap_OnSetFrameSize</a> from resources.o(.text.ResourcesBitmap_OnSetFrameSize) referenced from resources.o(.rodata.__vmt_ResourcesBitmap)
 <LI><a href="#[222]">ResourcesBitmap_Update</a> from resources.o(.text.ResourcesBitmap_Update) referenced from resources.o(.rodata.__vmt_ResourcesBitmap)
 <LI><a href="#[220]">ResourcesBitmap__Done</a> from resources.o(.text.ResourcesBitmap__Done) referenced from resources.o(.rodata.__vmt_ResourcesBitmap)
 <LI><a href="#[21e]">ResourcesBitmap__Init</a> from resources.o(.text.ResourcesBitmap__Init) referenced from resources.o(.rodata.__vmt_ResourcesBitmap)
 <LI><a href="#[21f]">ResourcesBitmap__ReInit</a> from resources.o(.text.ResourcesBitmap__ReInit) referenced from resources.o(.rodata.__vmt_ResourcesBitmap)
 <LI><a href="#[225]">ResourcesFont__Done</a> from resources.o(.text.ResourcesFont__Done) referenced from resources.o(.rodata.__vmt_ResourcesFont)
 <LI><a href="#[223]">ResourcesFont__Init</a> from resources.o(.text.ResourcesFont__Init) referenced from resources.o(.rodata.__vmt_ResourcesFont)
 <LI><a href="#[224]">ResourcesFont__ReInit</a> from resources.o(.text.ResourcesFont__ReInit) referenced from resources.o(.rodata.__vmt_ResourcesFont)
 <LI><a href="#[60]">SAI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5d]">SPI4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5e]">SPI5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5f]">SPI6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from port.o(.text.SVC_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f4xx_it.o(.text.SysTick_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[65]">SystemInit</a> from system_stm32f4xx.o(.text.SystemInit) referenced from startup_stm32f429xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[228]">TemplatesDeviceClass__Done</a> from templates.o(.text.TemplatesDeviceClass__Done) referenced from templates.o(.rodata.__vmt_TemplatesDeviceClass)
 <LI><a href="#[226]">TemplatesDeviceClass__Init</a> from templates.o(.text.TemplatesDeviceClass__Init) referenced from templates.o(.rodata.__vmt_TemplatesDeviceClass)
 <LI><a href="#[227]">TemplatesDeviceClass__ReInit</a> from templates.o(.text.TemplatesDeviceClass__ReInit) referenced from templates.o(.rodata.__vmt_TemplatesDeviceClass)
 <LI><a href="#[7e]">TimerProc</a> from core.o(.text.TimerProc) referenced 2 times from core.o(.text.CoreRoot_DriveMultiTouchHitting)
 <LI><a href="#[7e]">TimerProc</a> from core.o(.text.TimerProc) referenced 2 times from core.o(.text.CoreRoot__Init)
 <LI><a href="#[7e]">TimerProc</a> from core.o(.text.TimerProc) referenced 2 times from core.o(.text.CoreTimer_OnSetBegin)
 <LI><a href="#[7e]">TimerProc</a> from core.o(.text.TimerProc) referenced 2 times from core.o(.text.CoreTimer_OnSetEnabled)
 <LI><a href="#[7e]">TimerProc</a> from core.o(.text.TimerProc) referenced 2 times from core.o(.text.CoreTimer_OnSetPeriod)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5b]">UART7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5c]">UART8_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[51]">USART6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[8a]">UpdateWatermark1</a> from ewgfx.o(.text.UpdateWatermark1) referenced from ewgfx.o(.data.UpdateWatermarkProc)
 <LI><a href="#[8a]">UpdateWatermark1</a> from ewgfx.o(.text.UpdateWatermark1) referenced 2 times from ewgfx.o(.text.EwGetOverlayArea)
 <LI><a href="#[8a]">UpdateWatermark1</a> from ewgfx.o(.text.UpdateWatermark1) referenced 2 times from ewgfx.o(.text.EwInitGraphicsEngine)
 <LI><a href="#[ab]">UpdateWatermark2</a> from ewgfx.o(.text.UpdateWatermark2) referenced 2 times from ewgfx.o(.text.UpdateWatermark1)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f4xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[22c]">ViewsFillPath_Draw</a> from views.o(.text.ViewsFillPath_Draw) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[22b]">ViewsFillPath__Done</a> from views.o(.text.ViewsFillPath__Done) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[229]">ViewsFillPath__Init</a> from views.o(.text.ViewsFillPath__Init) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[22a]">ViewsFillPath__ReInit</a> from views.o(.text.ViewsFillPath__ReInit) referenced from views.o(.rodata.__vmt_ViewsFillPath)
 <LI><a href="#[ac]">ViewsFillPath_updatePath</a> from views.o(.text.ViewsFillPath_updatePath) referenced 4 times from views.o(.text.ViewsFillPath_OnSetPath)
 <LI><a href="#[230]">ViewsFrame_Draw</a> from views.o(.text.ViewsFrame_Draw) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[22f]">ViewsFrame__Done</a> from views.o(.text.ViewsFrame__Done) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[22d]">ViewsFrame__Init</a> from views.o(.text.ViewsFrame__Init) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[22e]">ViewsFrame__ReInit</a> from views.o(.text.ViewsFrame__ReInit) referenced from views.o(.rodata.__vmt_ViewsFrame)
 <LI><a href="#[ae]">ViewsFrame_observerSlot</a> from views.o(.text.ViewsFrame_observerSlot) referenced 4 times from views.o(.text.ViewsFrame_OnSetBitmap)
 <LI><a href="#[ad]">ViewsFrame_timerSlot</a> from views.o(.text.ViewsFrame_timerSlot) referenced 4 times from views.o(.text.ViewsFrame_OnSetAnimated)
 <LI><a href="#[ad]">ViewsFrame_timerSlot</a> from views.o(.text.ViewsFrame_timerSlot) referenced 2 times from views.o(.text.ViewsFrame_timerSlot)
 <LI><a href="#[234]">ViewsImage_Draw</a> from views.o(.text.ViewsImage_Draw) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[233]">ViewsImage__Done</a> from views.o(.text.ViewsImage__Done) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[231]">ViewsImage__Init</a> from views.o(.text.ViewsImage__Init) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[232]">ViewsImage__ReInit</a> from views.o(.text.ViewsImage__ReInit) referenced from views.o(.rodata.__vmt_ViewsImage)
 <LI><a href="#[b0]">ViewsImage_observerSlot</a> from views.o(.text.ViewsImage_observerSlot) referenced 4 times from views.o(.text.ViewsImage_OnSetBitmap)
 <LI><a href="#[af]">ViewsImage_timerSlot</a> from views.o(.text.ViewsImage_timerSlot) referenced 4 times from views.o(.text.ViewsImage_OnSetAnimated)
 <LI><a href="#[af]">ViewsImage_timerSlot</a> from views.o(.text.ViewsImage_timerSlot) referenced 2 times from views.o(.text.ViewsImage_timerSlot)
 <LI><a href="#[238]">ViewsRectangle_Draw</a> from views.o(.text.ViewsRectangle_Draw) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[237]">ViewsRectangle__Done</a> from views.o(.text.ViewsRectangle__Done) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[235]">ViewsRectangle__Init</a> from views.o(.text.ViewsRectangle__Init) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[236]">ViewsRectangle__ReInit</a> from views.o(.text.ViewsRectangle__ReInit) referenced from views.o(.rodata.__vmt_ViewsRectangle)
 <LI><a href="#[23c]">ViewsText_Draw</a> from views.o(.text.ViewsText_Draw) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[23d]">ViewsText_OnSetBounds</a> from views.o(.text.ViewsText_OnSetBounds) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[23b]">ViewsText__Done</a> from views.o(.text.ViewsText__Done) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[239]">ViewsText__Init</a> from views.o(.text.ViewsText__Init) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[23a]">ViewsText__ReInit</a> from views.o(.text.ViewsText__ReInit) referenced from views.o(.rodata.__vmt_ViewsText)
 <LI><a href="#[b3]">ViewsText_preOnUpdateSlot</a> from views.o(.text.ViewsText_preOnUpdateSlot) referenced 2 times from views.o(.text.ViewsText_OnSetAlignment)
 <LI><a href="#[b3]">ViewsText_preOnUpdateSlot</a> from views.o(.text.ViewsText_preOnUpdateSlot) referenced 2 times from views.o(.text.ViewsText_OnSetBounds)
 <LI><a href="#[b3]">ViewsText_preOnUpdateSlot</a> from views.o(.text.ViewsText_preOnUpdateSlot) referenced 2 times from views.o(.text.ViewsText_reparseSlot)
 <LI><a href="#[b2]">ViewsText_preReparseSlot</a> from views.o(.text.ViewsText_preReparseSlot) referenced 2 times from views.o(.text.ViewsText_OnSetAlignment)
 <LI><a href="#[b2]">ViewsText_preReparseSlot</a> from views.o(.text.ViewsText_preReparseSlot) referenced 4 times from views.o(.text.ViewsText_OnSetBounds)
 <LI><a href="#[b2]">ViewsText_preReparseSlot</a> from views.o(.text.ViewsText_preReparseSlot) referenced 2 times from views.o(.text.ViewsText_OnSetEllipsis)
 <LI><a href="#[b2]">ViewsText_preReparseSlot</a> from views.o(.text.ViewsText_preReparseSlot) referenced 2 times from views.o(.text.ViewsText_OnSetEnableBidiText)
 <LI><a href="#[b2]">ViewsText_preReparseSlot</a> from views.o(.text.ViewsText_preReparseSlot) referenced 2 times from views.o(.text.ViewsText_OnSetFont)
 <LI><a href="#[b2]">ViewsText_preReparseSlot</a> from views.o(.text.ViewsText_preReparseSlot) referenced 2 times from views.o(.text.ViewsText_OnSetString)
 <LI><a href="#[b2]">ViewsText_preReparseSlot</a> from views.o(.text.ViewsText_preReparseSlot) referenced 2 times from views.o(.text.ViewsText_OnSetWrapText)
 <LI><a href="#[b1]">ViewsText_reparseSlot</a> from views.o(.text.ViewsText_reparseSlot) referenced 2 times from views.o(.text.ViewsText_Draw)
 <LI><a href="#[b1]">ViewsText_reparseSlot</a> from views.o(.text.ViewsText_reparseSlot) referenced 4 times from views.o(.text.ViewsText_GetContentArea)
 <LI><a href="#[b1]">ViewsText_reparseSlot</a> from views.o(.text.ViewsText_reparseSlot) referenced 2 times from views.o(.text.ViewsText_preReparseSlot)
 <LI><a href="#[b1]">ViewsText_reparseSlot</a> from views.o(.text.ViewsText_reparseSlot) referenced 4 times from views.o(.text.ViewsText_reparseSlot)
 <LI><a href="#[241]">ViewsWarpImage_Draw</a> from views.o(.text.ViewsWarpImage_Draw) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[240]">ViewsWarpImage__Done</a> from views.o(.text.ViewsWarpImage__Done) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[23e]">ViewsWarpImage__Init</a> from views.o(.text.ViewsWarpImage__Init) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[23f]">ViewsWarpImage__ReInit</a> from views.o(.text.ViewsWarpImage__ReInit) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[b5]">ViewsWarpImage_observerSlot</a> from views.o(.text.ViewsWarpImage_observerSlot) referenced 6 times from views.o(.text.ViewsWarpImage_OnSetBitmap)
 <LI><a href="#[b4]">ViewsWarpImage_timerSlot</a> from views.o(.text.ViewsWarpImage_timerSlot) referenced 4 times from views.o(.text.ViewsWarpImage_OnSetAnimated)
 <LI><a href="#[b4]">ViewsWarpImage_timerSlot</a> from views.o(.text.ViewsWarpImage_timerSlot) referenced 2 times from views.o(.text.ViewsWarpImage_timerSlot)
 <LI><a href="#[245]">ViewsWarpView_OnSetPoint1</a> from views.o(.text.ViewsWarpView_OnSetPoint1) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[245]">ViewsWarpView_OnSetPoint1</a> from views.o(.text.ViewsWarpView_OnSetPoint1) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[244]">ViewsWarpView_OnSetPoint2</a> from views.o(.text.ViewsWarpView_OnSetPoint2) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[244]">ViewsWarpView_OnSetPoint2</a> from views.o(.text.ViewsWarpView_OnSetPoint2) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[243]">ViewsWarpView_OnSetPoint3</a> from views.o(.text.ViewsWarpView_OnSetPoint3) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[243]">ViewsWarpView_OnSetPoint3</a> from views.o(.text.ViewsWarpView_OnSetPoint3) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[242]">ViewsWarpView_OnSetPoint4</a> from views.o(.text.ViewsWarpView_OnSetPoint4) referenced from views.o(.rodata.__vmt_ViewsWarpImage)
 <LI><a href="#[242]">ViewsWarpView_OnSetPoint4</a> from views.o(.text.ViewsWarpView_OnSetPoint4) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[248]">ViewsWarpView__Done</a> from views.o(.text.ViewsWarpView__Done) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[246]">ViewsWarpView__Init</a> from views.o(.text.ViewsWarpView__Init) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[247]">ViewsWarpView__ReInit</a> from views.o(.text.ViewsWarpView__ReInit) referenced from views.o(.rodata.__vmt_ViewsWarpView)
 <LI><a href="#[b6]">ViewsWarpView_update</a> from views.o(.text.ViewsWarpView_update) referenced 2 times from views.o(.text.ViewsWarpImage_observerSlot)
 <LI><a href="#[b6]">ViewsWarpView_update</a> from views.o(.text.ViewsWarpView_update) referenced 2 times from views.o(.text.ViewsWarpView_OnSetPoint1)
 <LI><a href="#[b6]">ViewsWarpView_update</a> from views.o(.text.ViewsWarpView_update) referenced 2 times from views.o(.text.ViewsWarpView_OnSetPoint2)
 <LI><a href="#[b6]">ViewsWarpView_update</a> from views.o(.text.ViewsWarpView_update) referenced 2 times from views.o(.text.ViewsWarpView_OnSetPoint3)
 <LI><a href="#[b6]">ViewsWarpView_update</a> from views.o(.text.ViewsWarpView_update) referenced 2 times from views.o(.text.ViewsWarpView_OnSetPoint4)
 <LI><a href="#[b6]">ViewsWarpView_update</a> from views.o(.text.ViewsWarpView_update) referenced 2 times from views.o(.text.ViewsWarpView_OnSetSourceAnchor)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[250]">WidgetSetGaugeConfig__Done</a> from widgetset.o(.text.WidgetSetGaugeConfig__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetGaugeConfig)
 <LI><a href="#[24e]">WidgetSetGaugeConfig__Init</a> from widgetset.o(.text.WidgetSetGaugeConfig__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetGaugeConfig)
 <LI><a href="#[24f]">WidgetSetGaugeConfig__ReInit</a> from widgetset.o(.text.WidgetSetGaugeConfig__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetGaugeConfig)
 <LI><a href="#[24c]">WidgetSetGauge_OnSetBounds</a> from widgetset.o(.text.WidgetSetGauge_OnSetBounds) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[24d]">WidgetSetGauge_UpdateViewState</a> from widgetset.o(.text.WidgetSetGauge_UpdateViewState) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[24b]">WidgetSetGauge__Done</a> from widgetset.o(.text.WidgetSetGauge__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[249]">WidgetSetGauge__Init</a> from widgetset.o(.text.WidgetSetGauge__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[24a]">WidgetSetGauge__ReInit</a> from widgetset.o(.text.WidgetSetGauge__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetGauge)
 <LI><a href="#[b8]">WidgetSetGauge_onConfigChanged</a> from widgetset.o(.text.WidgetSetGauge_onConfigChanged) referenced 6 times from widgetset.o(.text.WidgetSetGauge_OnSetAppearance)
 <LI><a href="#[bb]">WidgetSetGauge_onEndFloatEffect</a> from widgetset.o(.text.WidgetSetGauge_onEndFloatEffect) referenced 2 times from widgetset.o(.text.WidgetSetGauge__Init)
 <LI><a href="#[bc]">WidgetSetGauge_onFloatEffect</a> from widgetset.o(.text.WidgetSetGauge_onFloatEffect) referenced 2 times from widgetset.o(.text.WidgetSetGauge__Init)
 <LI><a href="#[ba]">WidgetSetGauge_onOutlet</a> from widgetset.o(.text.WidgetSetGauge_onOutlet) referenced 4 times from widgetset.o(.text.WidgetSetGauge_OnSetOutlet)
 <LI><a href="#[b9]">WidgetSetGauge_onUpdateAngle</a> from widgetset.o(.text.WidgetSetGauge_onUpdateAngle) referenced 2 times from widgetset.o(.text.WidgetSetGauge_OnSetCurrentValue)
 <LI><a href="#[b9]">WidgetSetGauge_onUpdateAngle</a> from widgetset.o(.text.WidgetSetGauge_onUpdateAngle) referenced 2 times from widgetset.o(.text.WidgetSetGauge_OnSetMaxValue)
 <LI><a href="#[b9]">WidgetSetGauge_onUpdateAngle</a> from widgetset.o(.text.WidgetSetGauge_onUpdateAngle) referenced 2 times from widgetset.o(.text.WidgetSetGauge_onConfigChanged)
 <LI><a href="#[b9]">WidgetSetGauge_onUpdateAngle</a> from widgetset.o(.text.WidgetSetGauge_onUpdateAngle) referenced 2 times from widgetset.o(.text.WidgetSetGauge_onOutlet)
 <LI><a href="#[258]">WidgetSetHorizontalValueBarConfig__Done</a> from widgetset.o(.text.WidgetSetHorizontalValueBarConfig__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBarConfig)
 <LI><a href="#[256]">WidgetSetHorizontalValueBarConfig__Init</a> from widgetset.o(.text.WidgetSetHorizontalValueBarConfig__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBarConfig)
 <LI><a href="#[257]">WidgetSetHorizontalValueBarConfig__ReInit</a> from widgetset.o(.text.WidgetSetHorizontalValueBarConfig__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBarConfig)
 <LI><a href="#[149]">WidgetSetHorizontalValueBar_Medium__Init</a> from widgetset.o(.text.WidgetSetHorizontalValueBar_Medium__Init) referenced from widgetset.o(.rodata._WidgetSetHorizontalValueBar_Medium)
 <LI><a href="#[254]">WidgetSetHorizontalValueBar_OnSetBounds</a> from widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetBounds) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[255]">WidgetSetHorizontalValueBar_UpdateViewState</a> from widgetset.o(.text.WidgetSetHorizontalValueBar_UpdateViewState) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[253]">WidgetSetHorizontalValueBar__Done</a> from widgetset.o(.text.WidgetSetHorizontalValueBar__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[251]">WidgetSetHorizontalValueBar__Init</a> from widgetset.o(.text.WidgetSetHorizontalValueBar__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[252]">WidgetSetHorizontalValueBar__ReInit</a> from widgetset.o(.text.WidgetSetHorizontalValueBar__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
 <LI><a href="#[bd]">WidgetSetHorizontalValueBar_onConfigChanged</a> from widgetset.o(.text.WidgetSetHorizontalValueBar_onConfigChanged) referenced 6 times from widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetAppearance)
 <LI><a href="#[c0]">WidgetSetHorizontalValueBar_onEndFloatEffect</a> from widgetset.o(.text.WidgetSetHorizontalValueBar_onEndFloatEffect) referenced 2 times from widgetset.o(.text.WidgetSetHorizontalValueBar__Init)
 <LI><a href="#[c1]">WidgetSetHorizontalValueBar_onFloatEffect</a> from widgetset.o(.text.WidgetSetHorizontalValueBar_onFloatEffect) referenced 2 times from widgetset.o(.text.WidgetSetHorizontalValueBar__Init)
 <LI><a href="#[bf]">WidgetSetHorizontalValueBar_onOutlet</a> from widgetset.o(.text.WidgetSetHorizontalValueBar_onOutlet) referenced 4 times from widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetOutlet)
 <LI><a href="#[be]">WidgetSetHorizontalValueBar_onUpdatePos</a> from widgetset.o(.text.WidgetSetHorizontalValueBar_onUpdatePos) referenced 2 times from widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetMaxValue)
 <LI><a href="#[be]">WidgetSetHorizontalValueBar_onUpdatePos</a> from widgetset.o(.text.WidgetSetHorizontalValueBar_onUpdatePos) referenced 2 times from widgetset.o(.text.WidgetSetHorizontalValueBar_onConfigChanged)
 <LI><a href="#[be]">WidgetSetHorizontalValueBar_onUpdatePos</a> from widgetset.o(.text.WidgetSetHorizontalValueBar_onUpdatePos) referenced 2 times from widgetset.o(.text.WidgetSetHorizontalValueBar_onOutlet)
 <LI><a href="#[260]">WidgetSetPushButtonConfig__Done</a> from widgetset.o(.text.WidgetSetPushButtonConfig__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButtonConfig)
 <LI><a href="#[25e]">WidgetSetPushButtonConfig__Init</a> from widgetset.o(.text.WidgetSetPushButtonConfig__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButtonConfig)
 <LI><a href="#[25f]">WidgetSetPushButtonConfig__ReInit</a> from widgetset.o(.text.WidgetSetPushButtonConfig__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButtonConfig)
 <LI><a href="#[14a]">WidgetSetPushButton_Medium__Init</a> from widgetset.o(.text.WidgetSetPushButton_Medium__Init) referenced from widgetset.o(.rodata._WidgetSetPushButton_Medium)
 <LI><a href="#[25c]">WidgetSetPushButton_OnSetBounds</a> from widgetset.o(.text.WidgetSetPushButton_OnSetBounds) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[25d]">WidgetSetPushButton_UpdateViewState</a> from widgetset.o(.text.WidgetSetPushButton_UpdateViewState) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[25b]">WidgetSetPushButton__Done</a> from widgetset.o(.text.WidgetSetPushButton__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[259]">WidgetSetPushButton__Init</a> from widgetset.o(.text.WidgetSetPushButton__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[25a]">WidgetSetPushButton__ReInit</a> from widgetset.o(.text.WidgetSetPushButton__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetPushButton)
 <LI><a href="#[c2]">WidgetSetPushButton_onConfigChanged</a> from widgetset.o(.text.WidgetSetPushButton_onConfigChanged) referenced 6 times from widgetset.o(.text.WidgetSetPushButton_OnSetAppearance)
 <LI><a href="#[c7]">WidgetSetPushButton_onEnterTouch</a> from widgetset.o(.text.WidgetSetPushButton_onEnterTouch) referenced 2 times from widgetset.o(.text.WidgetSetPushButton__Init)
 <LI><a href="#[c3]">WidgetSetPushButton_onFlashTimer</a> from widgetset.o(.text.WidgetSetPushButton_onFlashTimer) referenced 2 times from widgetset.o(.text.WidgetSetPushButton__Init)
 <LI><a href="#[c6]">WidgetSetPushButton_onLeaveTouch</a> from widgetset.o(.text.WidgetSetPushButton_onLeaveTouch) referenced 2 times from widgetset.o(.text.WidgetSetPushButton__Init)
 <LI><a href="#[c5]">WidgetSetPushButton_onPressKey</a> from widgetset.o(.text.WidgetSetPushButton_onPressKey) referenced 2 times from widgetset.o(.text.WidgetSetPushButton__Init)
 <LI><a href="#[c9]">WidgetSetPushButton_onPressTouch</a> from widgetset.o(.text.WidgetSetPushButton_onPressTouch) referenced 2 times from widgetset.o(.text.WidgetSetPushButton__Init)
 <LI><a href="#[c4]">WidgetSetPushButton_onReleaseKey</a> from widgetset.o(.text.WidgetSetPushButton_onReleaseKey) referenced 2 times from widgetset.o(.text.WidgetSetPushButton__Init)
 <LI><a href="#[c8]">WidgetSetPushButton_onReleaseTouch</a> from widgetset.o(.text.WidgetSetPushButton_onReleaseTouch) referenced 2 times from widgetset.o(.text.WidgetSetPushButton__Init)
 <LI><a href="#[14b]">WidgetSetSwitch_Medium__Init</a> from widgetset.o(.text.WidgetSetSwitch_Medium__Init) referenced from widgetset.o(.rodata._WidgetSetSwitch_Medium)
 <LI><a href="#[268]">WidgetSetToggleButtonConfig__Done</a> from widgetset.o(.text.WidgetSetToggleButtonConfig__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButtonConfig)
 <LI><a href="#[266]">WidgetSetToggleButtonConfig__Init</a> from widgetset.o(.text.WidgetSetToggleButtonConfig__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButtonConfig)
 <LI><a href="#[267]">WidgetSetToggleButtonConfig__ReInit</a> from widgetset.o(.text.WidgetSetToggleButtonConfig__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButtonConfig)
 <LI><a href="#[264]">WidgetSetToggleButton_OnSetBounds</a> from widgetset.o(.text.WidgetSetToggleButton_OnSetBounds) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[265]">WidgetSetToggleButton_UpdateViewState</a> from widgetset.o(.text.WidgetSetToggleButton_UpdateViewState) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[263]">WidgetSetToggleButton__Done</a> from widgetset.o(.text.WidgetSetToggleButton__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[261]">WidgetSetToggleButton__Init</a> from widgetset.o(.text.WidgetSetToggleButton__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[262]">WidgetSetToggleButton__ReInit</a> from widgetset.o(.text.WidgetSetToggleButton__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
 <LI><a href="#[ca]">WidgetSetToggleButton_onConfigChanged</a> from widgetset.o(.text.WidgetSetToggleButton_onConfigChanged) referenced 6 times from widgetset.o(.text.WidgetSetToggleButton_OnSetAppearance)
 <LI><a href="#[d0]">WidgetSetToggleButton_onEnterTouch</a> from widgetset.o(.text.WidgetSetToggleButton_onEnterTouch) referenced 2 times from widgetset.o(.text.WidgetSetToggleButton__Init)
 <LI><a href="#[cc]">WidgetSetToggleButton_onFlashTimer</a> from widgetset.o(.text.WidgetSetToggleButton_onFlashTimer) referenced 2 times from widgetset.o(.text.WidgetSetToggleButton__Init)
 <LI><a href="#[cf]">WidgetSetToggleButton_onLeaveTouch</a> from widgetset.o(.text.WidgetSetToggleButton_onLeaveTouch) referenced 2 times from widgetset.o(.text.WidgetSetToggleButton__Init)
 <LI><a href="#[cb]">WidgetSetToggleButton_onOutlet</a> from widgetset.o(.text.WidgetSetToggleButton_onOutlet) referenced 4 times from widgetset.o(.text.WidgetSetToggleButton_OnSetOutlet)
 <LI><a href="#[ce]">WidgetSetToggleButton_onPressKey</a> from widgetset.o(.text.WidgetSetToggleButton_onPressKey) referenced 2 times from widgetset.o(.text.WidgetSetToggleButton__Init)
 <LI><a href="#[d2]">WidgetSetToggleButton_onPressTouch</a> from widgetset.o(.text.WidgetSetToggleButton_onPressTouch) referenced 2 times from widgetset.o(.text.WidgetSetToggleButton__Init)
 <LI><a href="#[cd]">WidgetSetToggleButton_onReleaseKey</a> from widgetset.o(.text.WidgetSetToggleButton_onReleaseKey) referenced 2 times from widgetset.o(.text.WidgetSetToggleButton__Init)
 <LI><a href="#[d1]">WidgetSetToggleButton_onReleaseTouch</a> from widgetset.o(.text.WidgetSetToggleButton_onReleaseTouch) referenced 2 times from widgetset.o(.text.WidgetSetToggleButton__Init)
 <LI><a href="#[270]">WidgetSetValueDisplayConfig__Done</a> from widgetset.o(.text.WidgetSetValueDisplayConfig__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplayConfig)
 <LI><a href="#[26e]">WidgetSetValueDisplayConfig__Init</a> from widgetset.o(.text.WidgetSetValueDisplayConfig__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplayConfig)
 <LI><a href="#[26f]">WidgetSetValueDisplayConfig__ReInit</a> from widgetset.o(.text.WidgetSetValueDisplayConfig__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplayConfig)
 <LI><a href="#[14c]">WidgetSetValueDisplay_Medium__Init</a> from widgetset.o(.text.WidgetSetValueDisplay_Medium__Init) referenced from widgetset.o(.rodata._WidgetSetValueDisplay_Medium)
 <LI><a href="#[26c]">WidgetSetValueDisplay_OnSetBounds</a> from widgetset.o(.text.WidgetSetValueDisplay_OnSetBounds) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[26d]">WidgetSetValueDisplay_UpdateViewState</a> from widgetset.o(.text.WidgetSetValueDisplay_UpdateViewState) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[26b]">WidgetSetValueDisplay__Done</a> from widgetset.o(.text.WidgetSetValueDisplay__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[269]">WidgetSetValueDisplay__Init</a> from widgetset.o(.text.WidgetSetValueDisplay__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[26a]">WidgetSetValueDisplay__ReInit</a> from widgetset.o(.text.WidgetSetValueDisplay__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
 <LI><a href="#[d3]">WidgetSetValueDisplay_onConfigChanged</a> from widgetset.o(.text.WidgetSetValueDisplay_onConfigChanged) referenced 6 times from widgetset.o(.text.WidgetSetValueDisplay_OnSetAppearance)
 <LI><a href="#[d5]">WidgetSetValueDisplay_onFormatValue</a> from widgetset.o(.text.WidgetSetValueDisplay_onFormatValue) referenced 2 times from widgetset.o(.text.WidgetSetValueDisplay_OnSetPrecision)
 <LI><a href="#[d5]">WidgetSetValueDisplay_onFormatValue</a> from widgetset.o(.text.WidgetSetValueDisplay_onFormatValue) referenced 2 times from widgetset.o(.text.WidgetSetValueDisplay_onConfigChanged)
 <LI><a href="#[d5]">WidgetSetValueDisplay_onFormatValue</a> from widgetset.o(.text.WidgetSetValueDisplay_onFormatValue) referenced 2 times from widgetset.o(.text.WidgetSetValueDisplay_onOutlet)
 <LI><a href="#[d6]">WidgetSetValueDisplay_onLayoutViews</a> from widgetset.o(.text.WidgetSetValueDisplay_onLayoutViews) referenced 4 times from widgetset.o(.text.WidgetSetValueDisplay_UpdateViewState)
 <LI><a href="#[d4]">WidgetSetValueDisplay_onOutlet</a> from widgetset.o(.text.WidgetSetValueDisplay_onOutlet) referenced 4 times from widgetset.o(.text.WidgetSetValueDisplay_OnSetOutlet)
 <LI><a href="#[273]">WidgetSetWidgetConfig__Done</a> from widgetset.o(.text.WidgetSetWidgetConfig__Done) referenced from widgetset.o(.rodata.__vmt_WidgetSetWidgetConfig)
 <LI><a href="#[271]">WidgetSetWidgetConfig__Init</a> from widgetset.o(.text.WidgetSetWidgetConfig__Init) referenced from widgetset.o(.rodata.__vmt_WidgetSetWidgetConfig)
 <LI><a href="#[272]">WidgetSetWidgetConfig__ReInit</a> from widgetset.o(.text.WidgetSetWidgetConfig__ReInit) referenced from widgetset.o(.rodata.__vmt_WidgetSetWidgetConfig)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetCenterOffset)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedle)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedleMaxAngle)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedleMinAngle)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedlePivot)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetScale)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetSwingDuration)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetSwingElastic)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftColor)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftRadius)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftRoundedStart)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftThickness)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 2 times from widgetset.o(.text.WidgetSetGaugeConfig_OnSetWidgetMinSize)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 10 times from widgetset.o(.text.WidgetSetHorizontalValueBar_Medium__Init)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 48 times from widgetset.o(.text.WidgetSetPushButton_Medium__Init)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 80 times from widgetset.o(.text.WidgetSetSwitch_Medium__Init)
 <LI><a href="#[b7]">WidgetSetWidgetConfig_onInvalidate</a> from widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate) referenced 24 times from widgetset.o(.text.WidgetSetValueDisplay_Medium__Init)
 <LI><a href="#[276]">XObject__Done</a> from ewobject.o(.text.XObject__Done) referenced from ewobject.o(.rodata.__vmt_XObject)
 <LI><a href="#[274]">XObject__Init</a> from ewobject.o(.text.XObject__Init) referenced from ewobject.o(.rodata.__vmt_XObject)
 <LI><a href="#[275]">XObject__ReInit</a> from ewobject.o(.text.XObject__ReInit) referenced from ewobject.o(.rodata.__vmt_XObject)
 <LI><a href="#[66]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429xx.o(.text)
 <LI><a href="#[64]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[d8]">prvIdleTask</a> from tasks.o(.text.prvIdleTask) referenced 2 times from tasks.o(.text.vTaskStartScheduler)
 <LI><a href="#[d7]">prvTaskExitError</a> from port.o(.text.prvTaskExitError) referenced 2 times from port.o(.text.pxPortInitialiseStack)
 <LI><a href="#[277]">stmpe811_Init</a> from stmpe811.o(.text.stmpe811_Init) referenced from stmpe811.o(.data.stmpe811_ts_drv)
 <LI><a href="#[278]">stmpe811_ReadID</a> from stmpe811.o(.text.stmpe811_ReadID) referenced from stmpe811.o(.data.stmpe811_ts_drv)
 <LI><a href="#[279]">stmpe811_Reset</a> from stmpe811.o(.text.stmpe811_Reset) referenced from stmpe811.o(.data.stmpe811_ts_drv)
 <LI><a href="#[27e]">stmpe811_TS_ClearIT</a> from stmpe811.o(.text.stmpe811_TS_ClearIT) referenced from stmpe811.o(.data.stmpe811_ts_drv)
 <LI><a href="#[27b]">stmpe811_TS_DetectTouch</a> from stmpe811.o(.text.stmpe811_TS_DetectTouch) referenced from stmpe811.o(.data.stmpe811_ts_drv)
 <LI><a href="#[280]">stmpe811_TS_DisableIT</a> from stmpe811.o(.text.stmpe811_TS_DisableIT) referenced from stmpe811.o(.data.stmpe811_ts_drv)
 <LI><a href="#[27d]">stmpe811_TS_EnableIT</a> from stmpe811.o(.text.stmpe811_TS_EnableIT) referenced from stmpe811.o(.data.stmpe811_ts_drv)
 <LI><a href="#[27c]">stmpe811_TS_GetXY</a> from stmpe811.o(.text.stmpe811_TS_GetXY) referenced from stmpe811.o(.data.stmpe811_ts_drv)
 <LI><a href="#[27f]">stmpe811_TS_ITStatus</a> from stmpe811.o(.text.stmpe811_TS_ITStatus) referenced from stmpe811.o(.data.stmpe811_ts_drv)
 <LI><a href="#[27a]">stmpe811_TS_Start</a> from stmpe811.o(.text.stmpe811_TS_Start) referenced from stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[66]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(.text)
</UL>
<P><STRONG><a name="[50f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[281]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[28b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[510]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[511]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[512]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[513]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[514]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[283]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatUInt64ToAnsiString
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatInt64ToAnsiString
</UL>

<P><STRONG><a name="[424]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathRandInt32
</UL>

<P><STRONG><a name="[423]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathRandInt32
</UL>

<P><STRONG><a name="[515]"></a>___aeabi_memcpy4$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[516]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[3a4]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopy
</UL>

<P><STRONG><a name="[427]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMove
</UL>

<P><STRONG><a name="[517]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[518]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[287]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFill
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatUIntToAnsiString
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatUInt64ToAnsiString
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatIntToAnsiString
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatInt64ToAnsiString
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatFloatToAnsiString
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[502]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[519]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[286]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
</UL>

<P><STRONG><a name="[390]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsInit
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatFloatToAnsiString
</UL>

<P><STRONG><a name="[320]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayInit
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_CursorHitTest
</UL>

<P><STRONG><a name="[288]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[443]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTrace
</UL>

<P><STRONG><a name="[289]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTrace
</UL>

<P><STRONG><a name="[285]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[51a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[284]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[51b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[51c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[28a]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[51d]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[51e]"></a>__fp_status</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fpstat.o(.text), UNUSED)

<P><STRONG><a name="[509]"></a>__ieee_status</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fpstat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>

<P><STRONG><a name="[282]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[51f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>ApplicationApplication__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, application.o(.text.ApplicationApplication__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = ApplicationApplication__Done &rArr; CoreRoot__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
</UL>
<P><STRONG><a name="[14d]"></a>ApplicationApplication__Init</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, application.o(.text.ApplicationApplication__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ApplicationApplication__Init &rArr; CoreGroup_PresentDialog &rArr; CoreGroup_SwitchToDialog &rArr;  CoreGroup_PresentDialog (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
</UL>
<P><STRONG><a name="[14e]"></a>ApplicationApplication__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text.ApplicationApplication__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ApplicationApplication__ReInit &rArr; CoreRoot__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
</UL>
<P><STRONG><a name="[145]"></a>ApplicationBlueGauge__Init</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, application.o(.text.ApplicationBlueGauge__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ApplicationBlueGauge__Init &rArr; EwLoadResource &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetWidgetMinSize
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftThickness
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftRoundedStart
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftRadius
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftColor
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetSwingElastic
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetSwingDuration
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetScale
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedlePivot
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedleMinAngle
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedleMaxAngle
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedle
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetCenterOffset
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ApplicationBlueGauge)
</UL>
<P><STRONG><a name="[67]"></a>ApplicationCalibration_UpdateViewMenu</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, application.o(.text.ApplicationCalibration_UpdateViewMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = ApplicationCalibration_UpdateViewMenu &rArr; CoreGroup_DismissDialog &rArr; CoreGroup_FadeGroup &rArr; EffectsFaderTask_RemoveFader &rArr; CoreTask_Cancel &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationCalibration__Init)
</UL>
<P><STRONG><a name="[164]"></a>ApplicationCalibration__Done</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, application.o(.text.ApplicationCalibration__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ApplicationCalibration__Done &rArr; WidgetSetPushButton__Done &rArr; CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Done
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationCalibration)
</UL>
<P><STRONG><a name="[162]"></a>ApplicationCalibration__Init</STRONG> (Thumb, 362 bytes, Stack size 40 bytes, application.o(.text.ApplicationCalibration__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = ApplicationCalibration__Init &rArr; WidgetSetPushButton__Init &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetLabel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetIcon
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_OnSetColor
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationCalibration)
</UL>
<P><STRONG><a name="[163]"></a>ApplicationCalibration__ReInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, application.o(.text.ApplicationCalibration__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ApplicationCalibration__ReInit &rArr; WidgetSetPushButton__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__ReInit
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationCalibration)
</UL>
<P><STRONG><a name="[6a]"></a>ApplicationCurrentMeasurement_UpdateViewMenu</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, application.o(.text.ApplicationCurrentMeasurement_UpdateViewMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = ApplicationCurrentMeasurement_UpdateViewMenu &rArr; CoreGroup_DismissDialog &rArr; CoreGroup_FadeGroup &rArr; EffectsFaderTask_RemoveFader &rArr; CoreTask_Cancel &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationCurrentMeasurement__Init)
</UL>
<P><STRONG><a name="[171]"></a>ApplicationCurrentMeasurement__Done</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, application.o(.text.ApplicationCurrentMeasurement__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ApplicationCurrentMeasurement__Done &rArr; WidgetSetPushButton__Done &rArr; CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay__Done
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Done
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Done
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
</UL>
<P><STRONG><a name="[16f]"></a>ApplicationCurrentMeasurement__Init</STRONG> (Thumb, 626 bytes, Stack size 80 bytes, application.o(.text.ApplicationCurrentMeasurement__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = ApplicationCurrentMeasurement__Init &rArr; WidgetSetPushButton__Init &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay__Init
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetUnit
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetPrecision
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetOutlet
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetAppearance
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetLabel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetIcon
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Init
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetOutlet
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetMaxValue
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetCurrentValue
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetAppearance
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_OnSetColor
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRef
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_OnSetLayout
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetEnabled
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
</UL>
<P><STRONG><a name="[170]"></a>ApplicationCurrentMeasurement__ReInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, application.o(.text.ApplicationCurrentMeasurement__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ApplicationCurrentMeasurement__ReInit &rArr; WidgetSetPushButton__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay__ReInit
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__ReInit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__ReInit
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
</UL>
<P><STRONG><a name="[6b]"></a>ApplicationDebug_UpdateViewMenu</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, application.o(.text.ApplicationDebug_UpdateViewMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = ApplicationDebug_UpdateViewMenu &rArr; CoreGroup_DismissDialog &rArr; CoreGroup_FadeGroup &rArr; EffectsFaderTask_RemoveFader &rArr; CoreTask_Cancel &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationDebug__Init)
</UL>
<P><STRONG><a name="[174]"></a>ApplicationDebug__Done</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, application.o(.text.ApplicationDebug__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ApplicationDebug__Done &rArr; WidgetSetPushButton__Done &rArr; CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Done
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDebug)
</UL>
<P><STRONG><a name="[172]"></a>ApplicationDebug__Init</STRONG> (Thumb, 362 bytes, Stack size 40 bytes, application.o(.text.ApplicationDebug__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = ApplicationDebug__Init &rArr; WidgetSetPushButton__Init &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetLabel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetIcon
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_OnSetColor
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDebug)
</UL>
<P><STRONG><a name="[173]"></a>ApplicationDebug__ReInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, application.o(.text.ApplicationDebug__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ApplicationDebug__ReInit &rArr; WidgetSetPushButton__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__ReInit
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDebug)
</UL>
<P><STRONG><a name="[6c]"></a>ApplicationDetectorScreen_UpdateViewMenu</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, application.o(.text.ApplicationDetectorScreen_UpdateViewMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = ApplicationDetectorScreen_UpdateViewMenu &rArr; CoreGroup_DismissDialog &rArr; CoreGroup_FadeGroup &rArr; EffectsFaderTask_RemoveFader &rArr; CoreTask_Cancel &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationDetectorScreen__Init)
</UL>
<P><STRONG><a name="[177]"></a>ApplicationDetectorScreen__Done</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, application.o(.text.ApplicationDetectorScreen__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ApplicationDetectorScreen__Done &rArr; WidgetSetPushButton__Done &rArr; CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Done
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Done
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
</UL>
<P><STRONG><a name="[175]"></a>ApplicationDetectorScreen__Init</STRONG> (Thumb, 502 bytes, Stack size 56 bytes, application.o(.text.ApplicationDetectorScreen__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = ApplicationDetectorScreen__Init &rArr; WidgetSetPushButton__Init &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetLabel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetIcon
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_OnSetColor
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage__Init
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_OnSetLayout
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
</UL>
<P><STRONG><a name="[176]"></a>ApplicationDetectorScreen__ReInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, application.o(.text.ApplicationDetectorScreen__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ApplicationDetectorScreen__ReInit &rArr; WidgetSetPushButton__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__ReInit
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__ReInit
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
</UL>
<P><STRONG><a name="[6f]"></a>ApplicationDeviceClass_OnGetAngle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text.ApplicationDeviceClass_OnGetAngle))
<BR>[Address Reference Count : 2]<UL><LI> application.o(.text.ApplicationDistanceMeasurement__Init)
<LI> application.o(.text.ApplicationDeviceClass__UpdateAngle)
</UL>
<P><STRONG><a name="[68]"></a>ApplicationDeviceClass_OnGetCurrent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text.ApplicationDeviceClass_OnGetCurrent))
<BR>[Address Reference Count : 2]<UL><LI> application.o(.text.ApplicationCurrentMeasurement__Init)
<LI> application.o(.text.ApplicationDeviceClass__UpdateCurrent)
</UL>
<P><STRONG><a name="[71]"></a>ApplicationDeviceClass_OnGetDistance</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text.ApplicationDeviceClass_OnGetDistance))
<BR>[Address Reference Count : 2]<UL><LI> application.o(.text.ApplicationDistanceMeasurement__Init)
<LI> application.o(.text.ApplicationDeviceClass__UpdateDistance)
</UL>
<P><STRONG><a name="[6d]"></a>ApplicationDeviceClass_OnGetLamptest</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text.ApplicationDeviceClass_OnGetLamptest))
<BR>[Address Reference Count : 2]<UL><LI> application.o(.text.ApplicationSettings__Init)
<LI> application.o(.text.ApplicationDeviceClass_OnSetLamptest)
</UL>
<P><STRONG><a name="[70]"></a>ApplicationDeviceClass_OnSetAngle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text.ApplicationDeviceClass_OnSetAngle))
<BR>[Address Reference Count : 2]<UL><LI> application.o(.text.ApplicationDistanceMeasurement__Init)
<LI> application.o(.text.ApplicationDeviceClass__UpdateAngle)
</UL>
<P><STRONG><a name="[69]"></a>ApplicationDeviceClass_OnSetCurrent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text.ApplicationDeviceClass_OnSetCurrent))
<BR>[Address Reference Count : 2]<UL><LI> application.o(.text.ApplicationCurrentMeasurement__Init)
<LI> application.o(.text.ApplicationDeviceClass__UpdateCurrent)
</UL>
<P><STRONG><a name="[72]"></a>ApplicationDeviceClass_OnSetDistance</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text.ApplicationDeviceClass_OnSetDistance))
<BR>[Address Reference Count : 2]<UL><LI> application.o(.text.ApplicationDistanceMeasurement__Init)
<LI> application.o(.text.ApplicationDeviceClass__UpdateDistance)
</UL>
<P><STRONG><a name="[6e]"></a>ApplicationDeviceClass_OnSetLamptest</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, application.o(.text.ApplicationDeviceClass_OnSetLamptest))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = ApplicationDeviceClass_OnSetLamptest &rArr; EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_SetLampTest
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_DisableLampTest
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRef
</UL>
<BR>[Address Reference Count : 2]<UL><LI> application.o(.text.ApplicationSettings__Init)
<LI> application.o(.text.ApplicationDeviceClass_OnSetLamptest)
</UL>
<P><STRONG><a name="[17a]"></a>ApplicationDeviceClass__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, application.o(.text.ApplicationDeviceClass__Done))
<BR><BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemplatesDeviceClass__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDeviceClass)
</UL>
<P><STRONG><a name="[178]"></a>ApplicationDeviceClass__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, application.o(.text.ApplicationDeviceClass__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ApplicationDeviceClass__Init &rArr; TemplatesDeviceClass__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemplatesDeviceClass__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDeviceClass)
</UL>
<P><STRONG><a name="[179]"></a>ApplicationDeviceClass__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text.ApplicationDeviceClass__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemplatesDeviceClass__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDeviceClass)
</UL>
<P><STRONG><a name="[2bf]"></a>ApplicationDeviceClass__UpdateAngle</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, application.o(.text.ApplicationDeviceClass__UpdateAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = ApplicationDeviceClass__UpdateAngle &rArr; EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRef
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_ProcessData
</UL>

<P><STRONG><a name="[2c0]"></a>ApplicationDeviceClass__UpdateCurrent</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, application.o(.text.ApplicationDeviceClass__UpdateCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = ApplicationDeviceClass__UpdateCurrent &rArr; EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRef
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_ProcessData
</UL>

<P><STRONG><a name="[2c1]"></a>ApplicationDeviceClass__UpdateDistance</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, application.o(.text.ApplicationDeviceClass__UpdateDistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = ApplicationDeviceClass__UpdateDistance &rArr; EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRef
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_ProcessData
</UL>

<P><STRONG><a name="[146]"></a>ApplicationDevice__Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text.ApplicationDevice__Init))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ApplicationDevice)
</UL>
<P><STRONG><a name="[73]"></a>ApplicationDistanceMeasurement_UpdateViewMenu</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, application.o(.text.ApplicationDistanceMeasurement_UpdateViewMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = ApplicationDistanceMeasurement_UpdateViewMenu &rArr; CoreGroup_DismissDialog &rArr; CoreGroup_FadeGroup &rArr; EffectsFaderTask_RemoveFader &rArr; CoreTask_Cancel &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationDistanceMeasurement__Init)
</UL>
<P><STRONG><a name="[17d]"></a>ApplicationDistanceMeasurement__Done</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, application.o(.text.ApplicationDistanceMeasurement__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ApplicationDistanceMeasurement__Done &rArr; WidgetSetPushButton__Done &rArr; CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay__Done
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__Done
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Done
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
</UL>
<P><STRONG><a name="[17b]"></a>ApplicationDistanceMeasurement__Init</STRONG> (Thumb, 860 bytes, Stack size 120 bytes, application.o(.text.ApplicationDistanceMeasurement__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = ApplicationDistanceMeasurement__Init &rArr; WidgetSetPushButton__Init &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay__Init
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetUnit
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetPrecision
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetOutlet
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetAppearance
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetLabel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetIcon
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__Init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetOutlet
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetMaxValue
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetAppearance
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_OnSetColor
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRef
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
</UL>
<P><STRONG><a name="[17c]"></a>ApplicationDistanceMeasurement__ReInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, application.o(.text.ApplicationDistanceMeasurement__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ApplicationDistanceMeasurement__ReInit &rArr; WidgetSetPushButton__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay__ReInit
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__ReInit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__ReInit
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
</UL>
<P><STRONG><a name="[74]"></a>ApplicationMenu_UpdateViewCurrent</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, application.o(.text.ApplicationMenu_UpdateViewCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ApplicationMenu_UpdateViewCurrent &rArr; CoreGroup_PresentDialog &rArr; CoreGroup_SwitchToDialog &rArr;  CoreGroup_PresentDialog (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetRoot
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationMenu__Init)
</UL>
<P><STRONG><a name="[76]"></a>ApplicationMenu_UpdateViewDetector</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, application.o(.text.ApplicationMenu_UpdateViewDetector))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ApplicationMenu_UpdateViewDetector &rArr; CoreGroup_PresentDialog &rArr; CoreGroup_SwitchToDialog &rArr;  CoreGroup_PresentDialog (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetRoot
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationMenu__Init)
</UL>
<P><STRONG><a name="[75]"></a>ApplicationMenu_UpdateViewDistance</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, application.o(.text.ApplicationMenu_UpdateViewDistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ApplicationMenu_UpdateViewDistance &rArr; CoreGroup_PresentDialog &rArr; CoreGroup_SwitchToDialog &rArr;  CoreGroup_PresentDialog (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetRoot
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationMenu__Init)
</UL>
<P><STRONG><a name="[77]"></a>ApplicationMenu_UpdateViewSettings</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, application.o(.text.ApplicationMenu_UpdateViewSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ApplicationMenu_UpdateViewSettings &rArr; CoreGroup_PresentDialog &rArr; CoreGroup_SwitchToDialog &rArr;  CoreGroup_PresentDialog (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetRoot
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationMenu__Init)
</UL>
<P><STRONG><a name="[180]"></a>ApplicationMenu__Done</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, application.o(.text.ApplicationMenu__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ApplicationMenu__Done &rArr; WidgetSetPushButton__Done &rArr; CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Done
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationMenu)
</UL>
<P><STRONG><a name="[17e]"></a>ApplicationMenu__Init</STRONG> (Thumb, 640 bytes, Stack size 56 bytes, application.o(.text.ApplicationMenu__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = ApplicationMenu__Init &rArr; WidgetSetPushButton__Init &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetLabel
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_OnSetColor
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationMenu)
</UL>
<P><STRONG><a name="[17f]"></a>ApplicationMenu__ReInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, application.o(.text.ApplicationMenu__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ApplicationMenu__ReInit &rArr; WidgetSetPushButton__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__ReInit
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationMenu)
</UL>
<P><STRONG><a name="[79]"></a>ApplicationSettings_UpdateViewCalibration</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, application.o(.text.ApplicationSettings_UpdateViewCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ApplicationSettings_UpdateViewCalibration &rArr; CoreGroup_PresentDialog &rArr; CoreGroup_SwitchToDialog &rArr;  CoreGroup_PresentDialog (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetRoot
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationSettings__Init)
</UL>
<P><STRONG><a name="[7a]"></a>ApplicationSettings_UpdateViewDebug</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, application.o(.text.ApplicationSettings_UpdateViewDebug))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = ApplicationSettings_UpdateViewDebug &rArr; CoreGroup_PresentDialog &rArr; CoreGroup_SwitchToDialog &rArr;  CoreGroup_PresentDialog (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetRoot
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationSettings__Init)
</UL>
<P><STRONG><a name="[78]"></a>ApplicationSettings_UpdateViewMenu</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, application.o(.text.ApplicationSettings_UpdateViewMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = ApplicationSettings_UpdateViewMenu &rArr; CoreGroup_DismissDialog &rArr; CoreGroup_FadeGroup &rArr; EffectsFaderTask_RemoveFader &rArr; CoreTask_Cancel &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsActiveDialog
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationSettings__Init)
</UL>
<P><STRONG><a name="[183]"></a>ApplicationSettings__Done</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, application.o(.text.ApplicationSettings__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ApplicationSettings__Done &rArr; WidgetSetToggleButton__Done &rArr; CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Done
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Done
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationSettings)
</UL>
<P><STRONG><a name="[181]"></a>ApplicationSettings__Init</STRONG> (Thumb, 814 bytes, Stack size 80 bytes, application.o(.text.ApplicationSettings__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = ApplicationSettings__Init &rArr; WidgetSetToggleButton__Init &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetOutlet
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetLabel
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetChecked
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetAppearance
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetLabel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetIcon
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_OnSetColor
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRef
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationSettings)
</UL>
<P><STRONG><a name="[182]"></a>ApplicationSettings__ReInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, application.o(.text.ApplicationSettings__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ApplicationSettings__ReInit &rArr; WidgetSetToggleButton__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__ReInit
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__ReInit
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationSettings)
</UL>
<P><STRONG><a name="[7b]"></a>ApplicationWelcomeScreen_UpdateViewMenu</STRONG> (Thumb, 80 bytes, Stack size 64 bytes, application.o(.text.ApplicationWelcomeScreen_UpdateViewMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = ApplicationWelcomeScreen_UpdateViewMenu &rArr; CoreGroup_SwitchToDialog &rArr;  CoreGroup_PresentDialog (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__IsCurrentDialog
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.text.ApplicationWelcomeScreen__Init)
</UL>
<P><STRONG><a name="[186]"></a>ApplicationWelcomeScreen__Done</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, application.o(.text.ApplicationWelcomeScreen__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ApplicationWelcomeScreen__Done
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Done
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage__Done
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
</UL>
<P><STRONG><a name="[184]"></a>ApplicationWelcomeScreen__Init</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, application.o(.text.ApplicationWelcomeScreen__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = ApplicationWelcomeScreen__Init &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Init
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage__Init
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetEmbedded
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAutoSize
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_OnSetLayout
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__Init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint4
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint3
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint2
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint1
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
</UL>
<P><STRONG><a name="[185]"></a>ApplicationWelcomeScreen__ReInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, application.o(.text.ApplicationWelcomeScreen__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ApplicationWelcomeScreen__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__ReInit
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage__ReInit
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
</UL>
<P><STRONG><a name="[2d2]"></a>BSP_LED_Init</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, stm32f429i_discovery.o(.text.BSP_LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspInOutInitLed
</UL>

<P><STRONG><a name="[2d5]"></a>BSP_SDRAM_Init</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, stm32f429i_discovery_sdram.o(.text.BSP_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = BSP_SDRAM_Init &rArr; BSP_SDRAM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspSystemInit
</UL>

<P><STRONG><a name="[2d6]"></a>BSP_SDRAM_MspInit</STRONG> (Thumb, 396 bytes, Stack size 40 bytes, stm32f429i_discovery_sdram.o(.text.BSP_SDRAM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = BSP_SDRAM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[39c]"></a>BSP_TS_GetState</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, stm32f429i_discovery_ts.o(.text.BSP_TS_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BSP_TS_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspTouchGetEvents
</UL>

<P><STRONG><a name="[39e]"></a>BSP_TS_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f429i_discovery_ts.o(.text.BSP_TS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_TS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspTouchInit
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.BusFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = BusFault_Handler &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[189]"></a>CoreCursorEvent__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreCursorEvent__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreCursorEvent)
</UL>
<P><STRONG><a name="[187]"></a>CoreCursorEvent__Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, core.o(.text.CoreCursorEvent__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreCursorEvent__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreCursorEvent)
</UL>
<P><STRONG><a name="[188]"></a>CoreCursorEvent__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreCursorEvent__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreCursorEvent)
</UL>
<P><STRONG><a name="[18c]"></a>CoreCursorGrabEvent__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreCursorGrabEvent__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreCursorGrabEvent)
</UL>
<P><STRONG><a name="[18a]"></a>CoreCursorGrabEvent__Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, core.o(.text.CoreCursorGrabEvent__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreCursorGrabEvent__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreCursorGrabEvent)
</UL>
<P><STRONG><a name="[18b]"></a>CoreCursorGrabEvent__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreCursorGrabEvent__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreCursorGrabEvent)
</UL>
<P><STRONG><a name="[18f]"></a>CoreCursorHit__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreCursorHit__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreCursorHit)
</UL>
<P><STRONG><a name="[18d]"></a>CoreCursorHit__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, core.o(.text.CoreCursorHit__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreCursorHit__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreCursorHit)
</UL>
<P><STRONG><a name="[18e]"></a>CoreCursorHit__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreCursorHit__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreCursorHit)
</UL>
<P><STRONG><a name="[192]"></a>CoreDialogContext__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreDialogContext__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreDialogContext)
</UL>
<P><STRONG><a name="[190]"></a>CoreDialogContext__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, core.o(.text.CoreDialogContext__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreDialogContext__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreDialogContext)
</UL>
<P><STRONG><a name="[191]"></a>CoreDialogContext__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreDialogContext__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreDialogContext)
</UL>
<P><STRONG><a name="[195]"></a>CoreDragEvent__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreDragEvent__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreDragEvent)
</UL>
<P><STRONG><a name="[193]"></a>CoreDragEvent__Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, core.o(.text.CoreDragEvent__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreDragEvent__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreDragEvent)
</UL>
<P><STRONG><a name="[194]"></a>CoreDragEvent__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreDragEvent__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreDragEvent)
</UL>
<P><STRONG><a name="[198]"></a>CoreEvent__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreEvent__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreEvent)
</UL>
<P><STRONG><a name="[196]"></a>CoreEvent__Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, core.o(.text.CoreEvent__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreEvent__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreEvent)
</UL>
<P><STRONG><a name="[197]"></a>CoreEvent__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreEvent__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreEvent)
</UL>
<P><STRONG><a name="[2aa]"></a>CoreGroup_Add</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, core.o(.text.CoreGroup_Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnStart
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[16d]"></a>CoreGroup_BroadcastEvent</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, core.o(.text.CoreGroup_BroadcastEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CoreGroup_BroadcastEvent &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetContains
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler_HandleEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_BroadcastEvent
</UL>
<BR>[Address Reference Count : 14]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[167]"></a>CoreGroup_ChangeViewState</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, core.o(.text.CoreGroup_ChangeViewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = CoreGroup_ChangeViewState &rArr; CoreView_ChangeViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_ChangeViewState
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_ChangeViewState
</UL>
<BR>[Address Reference Count : 14]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[154]"></a>CoreGroup_CursorHitTest</STRONG> (Thumb, 628 bytes, Stack size 176 bytes, core.o(.text.CoreGroup_CursorHitTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = CoreGroup_CursorHitTest &rArr; EwIntersectRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectNeg
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIntersectRect
</UL>
<BR>[Address Reference Count : 16]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreRoot)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[2a4]"></a>CoreGroup_DismissDialog</STRONG> (Thumb, 472 bytes, Stack size 80 bytes, core.o(.text.CoreGroup_DismissDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = CoreGroup_DismissDialog &rArr; CoreGroup_FadeGroup &rArr; EffectsFaderTask_RemoveFader &rArr; CoreTask_Cancel &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__CreateRestoreFader
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__CreateOverlayFader
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__CreateDismissFader
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings_UpdateViewMenu
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement_UpdateViewMenu
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen_UpdateViewMenu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug_UpdateViewMenu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement_UpdateViewMenu
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration_UpdateViewMenu
</UL>

<P><STRONG><a name="[16c]"></a>CoreGroup_DispatchEvent</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, core.o(.text.CoreGroup_DispatchEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = CoreGroup_DispatchEvent &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler_HandleEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DispatchEvent
</UL>
<BR>[Address Reference Count : 14]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[166]"></a>CoreGroup_Draw</STRONG> (Thumb, 102 bytes, Stack size 72 bytes, core.o(.text.CoreGroup_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = CoreGroup_Draw &rArr; CoreGroup_drawContent &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointPos
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_drawContent
</UL>
<BR>[Address Reference Count : 14]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[2ee]"></a>CoreGroup_FadeGroup</STRONG> (Thumb, 306 bytes, Stack size 48 bytes, core.o(.text.CoreGroup_FadeGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = CoreGroup_FadeGroup &rArr; EffectsFaderTask_RemoveFader &rArr; CoreTask_Cancel &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_RemoveFader
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_AddFader
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
</UL>

<P><STRONG><a name="[2f4]"></a>CoreGroup_FindSiblingView</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, core.o(.text.CoreGroup_FindSiblingView))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CoreGroup_FindSiblingView
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetContains
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_ChangeViewState
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
</UL>

<P><STRONG><a name="[16e]"></a>CoreGroup_InvalidateArea</STRONG> (Thumb, 154 bytes, Stack size 88 bytes, core.o(.text.CoreGroup_InvalidateArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = CoreGroup_InvalidateArea &rArr; EwIntersectRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
</UL>
<BR>[Address Reference Count : 14]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[2f6]"></a>CoreGroup_InvalidateViewState</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, core.o(.text.CoreGroup_InvalidateViewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetUnit
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetLabel
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetChecked
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetLabel
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetIcon
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onLayoutViews
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onFormatValue
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onConfigChanged
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseTouch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseKey
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onPressTouch
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onPressKey
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onOutlet
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onLeaveTouch
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onFlashTimer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onEnterTouch
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onConfigChanged
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onReleaseKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onPressKey
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onLeaveTouch
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onFlashTimer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onEnterTouch
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onConfigChanged
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onUpdatePos
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onFloatEffect
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onConfigChanged
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onUpdateAngle
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onFloatEffect
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onConfigChanged
</UL>

<P><STRONG><a name="[16b]"></a>CoreGroup_IsActiveDialog</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, core.o(.text.CoreGroup_IsActiveDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreGroup_IsActiveDialog
</UL>
<BR>[Address Reference Count : 14]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[16a]"></a>CoreGroup_IsCurrentDialog</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, core.o(.text.CoreGroup_IsCurrentDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreGroup_IsCurrentDialog
</UL>
<BR>[Address Reference Count : 14]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[159]"></a>CoreGroup_OnSetBounds</STRONG> (Thumb, 248 bytes, Stack size 80 bytes, core.o(.text.CoreGroup_OnSetBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = CoreGroup_OnSetBounds &rArr; CoreRectView_OnSetBounds &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect2Point
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompRect
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_OnSetBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetBounds
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetBounds
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetBounds
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetBounds
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetBounds
</UL>
<BR>[Address Reference Count : 11]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreRoot)
<LI> core.o(.rodata.__vmt_CoreGroup)
</UL>
<P><STRONG><a name="[2b0]"></a>CoreGroup_OnSetEnabled</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, core.o(.text.CoreGroup_OnSetEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnStart
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnEnd
</UL>

<P><STRONG><a name="[168]"></a>CoreGroup_OnSetFocus</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, core.o(.text.CoreGroup_OnSetFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = CoreGroup_OnSetFocus &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_OnSetFocus
</UL>
<BR>[Address Reference Count : 14]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[169]"></a>CoreGroup_OnSetOpacity</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, core.o(.text.CoreGroup_OnSetOpacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CoreGroup_OnSetOpacity
</UL>
<BR>[Address Reference Count : 14]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[34f]"></a>CoreGroup_OnSetVisible</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, core.o(.text.CoreGroup_OnSetVisible))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnStart
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnEnd
</UL>

<P><STRONG><a name="[294]"></a>CoreGroup_PresentDialog</STRONG> (Thumb, 472 bytes, Stack size 112 bytes, core.o(.text.CoreGroup_PresentDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = CoreGroup_PresentDialog &rArr; CoreGroup_SwitchToDialog &rArr;  CoreGroup_PresentDialog (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__CreatePresentFader
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__CreateOverlayFader
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings_UpdateViewDebug
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings_UpdateViewCalibration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewSettings
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewDistance
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewDetector
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewCurrent
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationApplication__Init
</UL>

<P><STRONG><a name="[2fc]"></a>CoreGroup_Remove</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, core.o(.text.CoreGroup_Remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = CoreGroup_Remove &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FindSiblingView
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnEnd
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[2fd]"></a>CoreGroup_RestackTop</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, core.o(.text.CoreGroup_RestackTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = CoreGroup_RestackTop &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnStart
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[2cb]"></a>CoreGroup_SwitchToDialog</STRONG> (Thumb, 646 bytes, Stack size 128 bytes, core.o(.text.CoreGroup_SwitchToDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + In Cycle
<LI>Call Chain = CoreGroup_SwitchToDialog &rArr;  CoreGroup_PresentDialog (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__CreateRestoreFader
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__CreatePresentFader
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__CreateOverlayFader
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__CreateDismissFader
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen_UpdateViewMenu
</UL>

<P><STRONG><a name="[160]"></a>CoreGroup_UpdateViewState</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, core.o(.text.CoreGroup_UpdateViewState))
<BR><BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>
<BR>[Address Reference Count : 11]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> core.o(.rodata.__vmt_CoreRoot)
<LI> core.o(.rodata.__vmt_CoreGroup)
</UL>
<P><STRONG><a name="[19b]"></a>CoreGroup__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreGroup__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay__Done
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Done
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__Done
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Done
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Done
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Done
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Done
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Done
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Done
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Done
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Done
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreGroup)
</UL>
<P><STRONG><a name="[199]"></a>CoreGroup__Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, core.o(.text.CoreGroup__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CoreGroup__Init &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay__Init
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__Init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreGroup)
</UL>
<P><STRONG><a name="[49c]"></a>CoreGroup__InvalidateArea</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, core.o(.text.CoreGroup__InvalidateArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_OnSetColor
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_update
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_Warp3D
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_timerSlot
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_observerSlot
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetFrameNumber
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetAnimated
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetAlignment
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_timerSlot
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_observerSlot
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetFrameNumber
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetColor
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAnimated
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAlignment
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_timerSlot
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_observerSlot
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetNoEdgesLimit
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetFrameNumber
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetEdges
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetColor
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetBitmap
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetAnimated
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_updatePath
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetPath
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetOffset
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetFillRule
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetColor
</UL>

<P><STRONG><a name="[2a3]"></a>CoreGroup__IsActiveDialog</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreGroup__IsActiveDialog))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings_UpdateViewMenu
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings_UpdateViewDebug
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings_UpdateViewCalibration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewSettings
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewDistance
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewDetector
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewCurrent
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement_UpdateViewMenu
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen_UpdateViewMenu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug_UpdateViewMenu
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement_UpdateViewMenu
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration_UpdateViewMenu
</UL>

<P><STRONG><a name="[2ca]"></a>CoreGroup__IsCurrentDialog</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreGroup__IsCurrentDialog))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen_UpdateViewMenu
</UL>

<P><STRONG><a name="[350]"></a>CoreGroup__OnSetFocus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreGroup__OnSetFocus))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnStart
</UL>

<P><STRONG><a name="[352]"></a>CoreGroup__OnSetOpacity</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreGroup__OnSetOpacity))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnStart
</UL>

<P><STRONG><a name="[19a]"></a>CoreGroup__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreGroup__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay__ReInit
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__ReInit
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__ReInit
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__ReInit
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__ReInit
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__ReInit
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__ReInit
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__ReInit
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__ReInit
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__ReInit
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__ReInit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreGroup)
</UL>
<P><STRONG><a name="[2f1]"></a>CoreGroup_drawContent</STRONG> (Thumb, 350 bytes, Stack size 176 bytes, core.o(.text.CoreGroup_drawContent))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = CoreGroup_drawContent &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIntersectRect
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_Draw
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Draw
</UL>

<P><STRONG><a name="[2fe]"></a>CoreGroup_recalculateLayout</STRONG> (Thumb, 434 bytes, Stack size 96 bytes, core.o(.text.CoreGroup_recalculateLayout))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = CoreGroup_recalculateLayout &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_updateComponent
</UL>

<P><STRONG><a name="[7c]"></a>CoreGroup_updateComponent</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, core.o(.text.CoreGroup_updateComponent))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = CoreGroup_updateComponent &rArr; CoreGroup_recalculateLayout &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_recalculateLayout
</UL>
<BR>[Address Reference Count : 16]<UL><LI> core.o(.text.CoreGroup_RestackTop)
<LI> core.o(.text.CoreGroup_Remove)
<LI> core.o(.text.CoreGroup_Add)
<LI> core.o(.text.CoreRoot__Init)
<LI> core.o(.text.CoreView_ChangeViewState)
<LI> core.o(.text.CoreQuadView_OnSetPoint4)
<LI> core.o(.text.CoreQuadView_OnSetPoint3)
<LI> core.o(.text.CoreQuadView_OnSetPoint2)
<LI> core.o(.text.CoreQuadView_OnSetPoint1)
<LI> core.o(.text.CoreRectView_OnSetBounds)
<LI> core.o(.text.CoreGroup__Init)
<LI> core.o(.text.CoreGroup_InvalidateViewState)
<LI> core.o(.text.CoreGroup_ChangeViewState)
<LI> core.o(.text.CoreGroup_OnSetBounds)
<LI> core.o(.text.CoreView_OnSetLayout)
<LI> core.o(.text.CoreOutline_OnSetBounds)
</UL>
<P><STRONG><a name="[300]"></a>CoreKeyEvent_IsCode</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, core.o(.text.CoreKeyEvent_IsCode))
<BR><BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler_HandleEvent
</UL>

<P><STRONG><a name="[19e]"></a>CoreKeyEvent__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreKeyEvent__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreKeyEvent)
</UL>
<P><STRONG><a name="[19c]"></a>CoreKeyEvent__Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, core.o(.text.CoreKeyEvent__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreKeyEvent__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreKeyEvent)
</UL>
<P><STRONG><a name="[19d]"></a>CoreKeyEvent__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreKeyEvent__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreKeyEvent)
</UL>
<P><STRONG><a name="[2e8]"></a>CoreKeyPressHandler_HandleEvent</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, core.o(.text.CoreKeyPressHandler_HandleEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CoreKeyPressHandler_HandleEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSignal
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyEvent_IsCode
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DispatchEvent
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_BroadcastEvent
</UL>

<P><STRONG><a name="[1a1]"></a>CoreKeyPressHandler__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreKeyPressHandler__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Done
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreKeyPressHandler)
</UL>
<P><STRONG><a name="[19f]"></a>CoreKeyPressHandler__Init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, core.o(.text.CoreKeyPressHandler__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = CoreKeyPressHandler__Init &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreKeyPressHandler)
</UL>
<P><STRONG><a name="[1a0]"></a>CoreKeyPressHandler__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreKeyPressHandler__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__ReInit
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreKeyPressHandler)
</UL>
<P><STRONG><a name="[1a4]"></a>CoreLayoutContext__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreLayoutContext__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreLayoutContext)
</UL>
<P><STRONG><a name="[1a2]"></a>CoreLayoutContext__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, core.o(.text.CoreLayoutContext__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreLayoutContext__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreLayoutContext)
</UL>
<P><STRONG><a name="[1a3]"></a>CoreLayoutContext__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreLayoutContext__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreLayoutContext)
</UL>
<P><STRONG><a name="[1a7]"></a>CoreLayoutQuadContext__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreLayoutQuadContext__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreLayoutQuadContext)
</UL>
<P><STRONG><a name="[1a5]"></a>CoreLayoutQuadContext__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, core.o(.text.CoreLayoutQuadContext__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreLayoutQuadContext__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreLayoutQuadContext)
</UL>
<P><STRONG><a name="[1a6]"></a>CoreLayoutQuadContext__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreLayoutQuadContext__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreLayoutQuadContext)
</UL>
<P><STRONG><a name="[1ab]"></a>CoreOutline_Draw</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, core.o(.text.CoreOutline_Draw))
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreOutline)
</UL>
<P><STRONG><a name="[1ae]"></a>CoreOutline_OnSetBounds</STRONG> (Thumb, 366 bytes, Stack size 88 bytes, core.o(.text.CoreOutline_OnSetBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = CoreOutline_OnSetBounds &rArr; CoreRectView_OnSetBounds &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompRect
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_OnSetBounds
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreOutline)
</UL>
<P><STRONG><a name="[1aa]"></a>CoreOutline__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreOutline__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreOutline)
</UL>
<P><STRONG><a name="[1a8]"></a>CoreOutline__Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, core.o(.text.CoreOutline__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreOutline__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreOutline)
</UL>
<P><STRONG><a name="[1a9]"></a>CoreOutline__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreOutline__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreOutline)
</UL>
<P><STRONG><a name="[1b4]"></a>CoreQuadView_ArrangeView</STRONG> (Thumb, 1302 bytes, Stack size 136 bytes, core.o(.text.CoreQuadView_ArrangeView))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = CoreQuadView_ArrangeView &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewPoint
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectW
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectH
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
</UL>
<BR>[Address Reference Count : 4]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
<LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1b6]"></a>CoreQuadView_GetExtent</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, core.o(.text.CoreQuadView_GetExtent))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CoreQuadView_GetExtent
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
</UL>
<BR>[Address Reference Count : 4]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
<LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[322]"></a>CoreQuadView_IsPointInside</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, core.o(.text.CoreQuadView_IsPointInside))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CoreQuadView_IsPointInside
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_HandleEvent
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_CursorHitTest
</UL>

<P><STRONG><a name="[1b5]"></a>CoreQuadView_MoveView</STRONG> (Thumb, 212 bytes, Stack size 64 bytes, core.o(.text.CoreQuadView_MoveView))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CoreQuadView_MoveView
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointPos
</UL>
<BR>[Address Reference Count : 4]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
<LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1ba]"></a>CoreQuadView_OnSetPoint1</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, core.o(.text.CoreQuadView_OnSetPoint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = CoreQuadView_OnSetPoint1 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint1
</UL>
<BR>[Address Reference Count : 2]<UL><LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1b9]"></a>CoreQuadView_OnSetPoint2</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, core.o(.text.CoreQuadView_OnSetPoint2))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = CoreQuadView_OnSetPoint2 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1b8]"></a>CoreQuadView_OnSetPoint3</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, core.o(.text.CoreQuadView_OnSetPoint3))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = CoreQuadView_OnSetPoint3 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint3
</UL>
<BR>[Address Reference Count : 2]<UL><LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1b7]"></a>CoreQuadView_OnSetPoint4</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, core.o(.text.CoreQuadView_OnSetPoint4))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = CoreQuadView_OnSetPoint4 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint4
</UL>
<BR>[Address Reference Count : 2]<UL><LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1b1]"></a>CoreQuadView__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreQuadView__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView__Done
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreQuadView)
</UL>
<P><STRONG><a name="[1af]"></a>CoreQuadView__Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, core.o(.text.CoreQuadView__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreQuadView__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView__Init
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreQuadView)
</UL>
<P><STRONG><a name="[2d1]"></a>CoreQuadView__OnSetPoint1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreQuadView__OnSetPoint1))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
</UL>

<P><STRONG><a name="[2d0]"></a>CoreQuadView__OnSetPoint2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreQuadView__OnSetPoint2))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
</UL>

<P><STRONG><a name="[2cf]"></a>CoreQuadView__OnSetPoint3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreQuadView__OnSetPoint3))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
</UL>

<P><STRONG><a name="[2ce]"></a>CoreQuadView__OnSetPoint4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreQuadView__OnSetPoint4))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
</UL>

<P><STRONG><a name="[1b0]"></a>CoreQuadView__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreQuadView__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView__ReInit
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreQuadView)
</UL>
<P><STRONG><a name="[1b2]"></a>CoreQuadView_initLayoutContext</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, core.o(.text.CoreQuadView_initLayoutContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = CoreQuadView_initLayoutContext &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
</UL>
<BR>[Address Reference Count : 4]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
<LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[155]"></a>CoreRectView_ArrangeView</STRONG> (Thumb, 866 bytes, Stack size 112 bytes, core.o(.text.CoreRectView_ArrangeView))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CoreRectView_ArrangeView
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewPoint
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectW
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectH
</UL>
<BR>[Address Reference Count : 23]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> views.o(.rodata.__vmt_ViewsRectangle)
<LI> views.o(.rodata.__vmt_ViewsFrame)
<LI> views.o(.rodata.__vmt_ViewsImage)
<LI> views.o(.rodata.__vmt_ViewsText)
<LI> views.o(.rodata.__vmt_ViewsFillPath)
<LI> core.o(.rodata.__vmt_CoreRoot)
<LI> core.o(.rodata.__vmt_CoreRectView)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> core.o(.rodata.__vmt_CoreOutline)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[157]"></a>CoreRectView_GetExtent</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, core.o(.text.CoreRectView_GetExtent))
<BR>[Address Reference Count : 23]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> views.o(.rodata.__vmt_ViewsRectangle)
<LI> views.o(.rodata.__vmt_ViewsFrame)
<LI> views.o(.rodata.__vmt_ViewsImage)
<LI> views.o(.rodata.__vmt_ViewsText)
<LI> views.o(.rodata.__vmt_ViewsFillPath)
<LI> core.o(.rodata.__vmt_CoreRoot)
<LI> core.o(.rodata.__vmt_CoreRectView)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> core.o(.rodata.__vmt_CoreOutline)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[156]"></a>CoreRectView_MoveView</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, core.o(.text.CoreRectView_MoveView))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CoreRectView_MoveView &rArr; EwMoveRectPos
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
</UL>
<BR>[Address Reference Count : 23]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> views.o(.rodata.__vmt_ViewsRectangle)
<LI> views.o(.rodata.__vmt_ViewsFrame)
<LI> views.o(.rodata.__vmt_ViewsImage)
<LI> views.o(.rodata.__vmt_ViewsText)
<LI> views.o(.rodata.__vmt_ViewsFillPath)
<LI> core.o(.rodata.__vmt_CoreRoot)
<LI> core.o(.rodata.__vmt_CoreRectView)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> core.o(.rodata.__vmt_CoreOutline)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[1be]"></a>CoreRectView_OnSetBounds</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, core.o(.text.CoreRectView_OnSetBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = CoreRectView_OnSetBounds &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompRect
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetBounds
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreOutline_OnSetBounds
</UL>
<BR>[Address Reference Count : 5]<UL><LI> views.o(.rodata.__vmt_ViewsRectangle)
<LI> views.o(.rodata.__vmt_ViewsFrame)
<LI> views.o(.rodata.__vmt_ViewsImage)
<LI> views.o(.rodata.__vmt_ViewsFillPath)
<LI> core.o(.rodata.__vmt_CoreRectView)
</UL>
<P><STRONG><a name="[1bd]"></a>CoreRectView__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreRectView__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Done
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Done
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage__Done
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame__Done
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreRectView)
</UL>
<P><STRONG><a name="[1bb]"></a>CoreRectView__Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, core.o(.text.CoreRectView__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreRectView__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__Init
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage__Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame__Init
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreRectView)
</UL>
<P><STRONG><a name="[292]"></a>CoreRectView__OnSetBounds</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, core.o(.text.CoreRectView__OnSetBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CoreRectView__OnSetBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay__Init
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__Init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Init
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAutoSize
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationApplication__Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_observerSlot
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnStart
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onConfigChanged
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onConfigChanged
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onConfigChanged
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onConfigChanged
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onConfigChanged
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[1bc]"></a>CoreRectView__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreRectView__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__ReInit
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle__ReInit
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage__ReInit
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame__ReInit
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreRectView)
</UL>
<P><STRONG><a name="[150]"></a>CoreRectView_initLayoutContext</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, core.o(.text.CoreRectView_initLayoutContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = CoreRectView_initLayoutContext &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
</UL>
<BR>[Address Reference Count : 23]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> views.o(.rodata.__vmt_ViewsRectangle)
<LI> views.o(.rodata.__vmt_ViewsFrame)
<LI> views.o(.rodata.__vmt_ViewsImage)
<LI> views.o(.rodata.__vmt_ViewsText)
<LI> views.o(.rodata.__vmt_ViewsFillPath)
<LI> core.o(.rodata.__vmt_CoreRoot)
<LI> core.o(.rodata.__vmt_CoreRectView)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> core.o(.rodata.__vmt_CoreOutline)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[1c1]"></a>CoreResource__Done</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, core.o(.text.CoreResource__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = CoreResource__Done &rArr; EwDeregisterResource &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDeregisterResource
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont__Done
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreResource)
</UL>
<P><STRONG><a name="[1bf]"></a>CoreResource__Init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, core.o(.text.CoreResource__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = CoreResource__Init &rArr; EwRegisterResource &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwRegisterResource
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont__Init
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreResource)
</UL>
<P><STRONG><a name="[1c0]"></a>CoreResource__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreResource__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont__ReInit
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreResource)
</UL>
<P><STRONG><a name="[309]"></a>CoreRoot_BeginUpdate</STRONG> (Thumb, 1476 bytes, Stack size 176 bytes, core.o(.text.CoreRoot_BeginUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = CoreRoot_BeginUpdate &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnionRect
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectArea
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetOverlayArea
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__UpdateGE20
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__BeginUpdate
</UL>

<P><STRONG><a name="[15f]"></a>CoreRoot_BroadcastEvent</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, core.o(.text.CoreRoot_BroadcastEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CoreRoot_BroadcastEvent &rArr; CoreGroup_BroadcastEvent &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_BroadcastEvent
</UL>
<BR>[Address Reference Count : 2]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[158]"></a>CoreRoot_ChangeViewState</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, core.o(.text.CoreRoot_ChangeViewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = CoreRoot_ChangeViewState &rArr; CoreGroup_ChangeViewState &rArr; CoreView_ChangeViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_ChangeViewState
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
</UL>
<BR>[Address Reference Count : 2]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[30d]"></a>CoreRoot_DeflectCursor</STRONG> (Thumb, 2210 bytes, Stack size 88 bytes, core.o(.text.CoreRoot_DeflectCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = CoreRoot_DeflectCursor &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointPos
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_RetargetCursorWithReason
</UL>

<P><STRONG><a name="[15e]"></a>CoreRoot_DispatchEvent</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, core.o(.text.CoreRoot_DispatchEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CoreRoot_DispatchEvent &rArr; CoreGroup_DispatchEvent &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DispatchEvent
</UL>
<BR>[Address Reference Count : 2]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[152]"></a>CoreRoot_Draw</STRONG> (Thumb, 204 bytes, Stack size 120 bytes, core.o(.text.CoreRoot_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1900<LI>Call Chain = CoreRoot_Draw &rArr; GraphicsCanvas_FillRectangle &rArr; EwFillRectangle &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_FillRectangle
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointPos
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_drawContent
</UL>
<BR>[Address Reference Count : 2]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[30f]"></a>CoreRoot_DriveMultiTouchHitting</STRONG> (Thumb, 1076 bytes, Stack size 128 bytes, core.o(.text.CoreRoot_DriveMultiTouchHitting))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = CoreRoot_DriveMultiTouchHitting &rArr; CoreRoot_DriveMultiTouchMovement &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStartTimer
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwResetTimer
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointPos
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsPointInRect
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateTimer
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchMovement
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__DriveMultiTouchHitting
</UL>

<P><STRONG><a name="[310]"></a>CoreRoot_DriveMultiTouchMovement</STRONG> (Thumb, 670 bytes, Stack size 96 bytes, core.o(.text.CoreRoot_DriveMultiTouchMovement))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = CoreRoot_DriveMultiTouchMovement &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointPos
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__DriveMultiTouchMovement
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
</UL>

<P><STRONG><a name="[151]"></a>CoreRoot_GetRoot</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, core.o(.text.CoreRoot_GetRoot))
<BR>[Address Reference Count : 2]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[161]"></a>CoreRoot_InvalidateArea</STRONG> (Thumb, 1698 bytes, Stack size 168 bytes, core.o(.text.CoreRoot_InvalidateArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = CoreRoot_InvalidateArea &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateArea
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnionRect
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIntersectRect
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectArea
</UL>
<BR>[Address Reference Count : 2]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[15d]"></a>CoreRoot_IsActiveDialog</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreRoot_IsActiveDialog))
<BR>[Address Reference Count : 2]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[15c]"></a>CoreRoot_IsCurrentDialog</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, core.o(.text.CoreRoot_IsCurrentDialog))
<BR>[Address Reference Count : 2]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[15a]"></a>CoreRoot_OnSetFocus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreRoot_OnSetFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = CoreRoot_OnSetFocus &rArr; CoreGroup_OnSetFocus &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetFocus
</UL>
<BR>[Address Reference Count : 2]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[15b]"></a>CoreRoot_OnSetOpacity</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, core.o(.text.CoreRoot_OnSetOpacity))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CoreRoot_OnSetOpacity
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
</UL>
<BR>[Address Reference Count : 2]<UL><LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[315]"></a>CoreRoot_RetargetCursorWithReason</STRONG> (Thumb, 318 bytes, Stack size 64 bytes, core.o(.text.CoreRoot_RetargetCursorWithReason))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = CoreRoot_RetargetCursorWithReason &rArr; CoreRoot_DeflectCursor &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DeflectCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_HandleEvent
</UL>

<P><STRONG><a name="[316]"></a>CoreRoot_UpdateCanvas</STRONG> (Thumb, 372 bytes, Stack size 176 bytes, core.o(.text.CoreRoot_UpdateCanvas))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = CoreRoot_UpdateCanvas &rArr; EwUnionRect
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnionRect
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect2Point
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNegPoint
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectNeg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointPos
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__UpdateGE20
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__UpdateCanvas
</UL>

<P><STRONG><a name="[318]"></a>CoreRoot__BeginUpdate</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreRoot__BeginUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = CoreRoot__BeginUpdate &rArr; CoreRoot_BeginUpdate &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_BeginUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[319]"></a>CoreRoot__DoesNeedUpdate</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, core.o(.text.CoreRoot__DoesNeedUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CoreRoot__DoesNeedUpdate &rArr; EwGetOverlayArea
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetOverlayArea
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[1c4]"></a>CoreRoot__Done</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, core.o(.text.CoreRoot__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = CoreRoot__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDestroyTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationApplication__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[31b]"></a>CoreRoot__DriveMultiTouchHitting</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, core.o(.text.CoreRoot__DriveMultiTouchHitting))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = CoreRoot__DriveMultiTouchHitting &rArr; CoreRoot_DriveMultiTouchHitting &rArr; CoreRoot_DriveMultiTouchMovement &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[31c]"></a>CoreRoot__DriveMultiTouchMovement</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreRoot__DriveMultiTouchMovement))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = CoreRoot__DriveMultiTouchMovement &rArr; CoreRoot_DriveMultiTouchMovement &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchMovement
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[438]"></a>CoreRoot__EndUpdate</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, core.o(.text.CoreRoot__EndUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[434]"></a>CoreRoot__GetUpdateRegion</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, core.o(.text.CoreRoot__GetUpdateRegion))
<BR><BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[1c2]"></a>CoreRoot__Init</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, core.o(.text.CoreRoot__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = CoreRoot__Init &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStartTimer
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwResetTimer
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationApplication__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[31d]"></a>CoreRoot__Initialize</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, core.o(.text.CoreRoot__Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CoreRoot__Initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect2Point
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[1c3]"></a>CoreRoot__ReInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, core.o(.text.CoreRoot__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreRoot__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationApplication__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreRoot)
</UL>
<P><STRONG><a name="[31e]"></a>CoreRoot__UpdateCanvas</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, core.o(.text.CoreRoot__UpdateCanvas))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CoreRoot__UpdateCanvas &rArr; CoreRoot_UpdateCanvas &rArr; EwUnionRect
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_UpdateCanvas
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[31f]"></a>CoreRoot__UpdateGE20</STRONG> (Thumb, 94 bytes, Stack size 56 bytes, core.o(.text.CoreRoot__UpdateGE20))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = CoreRoot__UpdateGE20 &rArr; CoreRoot_BeginUpdate &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_UpdateCanvas
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_BeginUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[7f]"></a>CoreRoot_cursorHoldTimerProc</STRONG> (Thumb, 718 bytes, Stack size 96 bytes, core.o(.text.CoreRoot_cursorHoldTimerProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = CoreRoot_cursorHoldTimerProc &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStartTimer
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwResetTimer
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointPos
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.text.CoreRoot__Init)
</UL>
<P><STRONG><a name="[1ca]"></a>CoreSimpleTouchHandler_CursorHitTest</STRONG> (Thumb, 644 bytes, Stack size 160 bytes, core.o(.text.CoreSimpleTouchHandler_CursorHitTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = CoreSimpleTouchHandler_CursorHitTest &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewPoint
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIntersectRect
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectCenter
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_IsPointInside
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1c8]"></a>CoreSimpleTouchHandler_Draw</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, core.o(.text.CoreSimpleTouchHandler_Draw))
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1c9]"></a>CoreSimpleTouchHandler_HandleEvent</STRONG> (Thumb, 816 bytes, Stack size 48 bytes, core.o(.text.CoreSimpleTouchHandler_HandleEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = CoreSimpleTouchHandler_HandleEvent &rArr; CoreRoot_RetargetCursorWithReason &rArr; CoreRoot_DeflectCursor &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSignal
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_RetargetCursorWithReason
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_IsPointInside
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[4d1]"></a>CoreSimpleTouchHandler_OnSetEnabled</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, core.o(.text.CoreSimpleTouchHandler_OnSetEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseKey
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onPressKey
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onReleaseKey
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onPressKey
</UL>

<P><STRONG><a name="[4d0]"></a>CoreSimpleTouchHandler_OnSetMaxStrikeCount</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, core.o(.text.CoreSimpleTouchHandler_OnSetMaxStrikeCount))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
</UL>

<P><STRONG><a name="[4cf]"></a>CoreSimpleTouchHandler_OnSetRetargetOffset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, core.o(.text.CoreSimpleTouchHandler_OnSetRetargetOffset))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
</UL>

<P><STRONG><a name="[1c7]"></a>CoreSimpleTouchHandler__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreSimpleTouchHandler__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Done
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1c5]"></a>CoreSimpleTouchHandler__Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, core.o(.text.CoreSimpleTouchHandler__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreSimpleTouchHandler__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1c6]"></a>CoreSimpleTouchHandler__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreSimpleTouchHandler__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__ReInit
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[323]"></a>CoreTaskQueue_CancelTask</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, core.o(.text.CoreTaskQueue_CancelTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask_OnStart
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask_Cancel
</UL>

<P><STRONG><a name="[1d4]"></a>CoreTaskQueue__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreTaskQueue__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTaskQueue)
</UL>
<P><STRONG><a name="[1d2]"></a>CoreTaskQueue__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, core.o(.text.CoreTaskQueue__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreTaskQueue__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTaskQueue)
</UL>
<P><STRONG><a name="[1d3]"></a>CoreTaskQueue__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreTaskQueue__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTaskQueue)
</UL>
<P><STRONG><a name="[82]"></a>CoreTaskQueue_onDispatchNext</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, core.o(.text.CoreTaskQueue_onDispatchNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CoreTaskQueue_onDispatchNext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.text.CoreTaskQueue_onPreDispatchNext3)
</UL>
<P><STRONG><a name="[7d]"></a>CoreTaskQueue_onPreDispatchNext1</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, core.o(.text.CoreTaskQueue_onPreDispatchNext1))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CoreTaskQueue_onPreDispatchNext1 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Address Reference Count : 3]<UL><LI> core.o(.text.CoreGroup_FadeGroup)
<LI> core.o(.text.CoreTaskQueue_CancelTask)
<LI> core.o(.text.CoreTask_Complete)
</UL>
<P><STRONG><a name="[80]"></a>CoreTaskQueue_onPreDispatchNext2</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, core.o(.text.CoreTaskQueue_onPreDispatchNext2))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CoreTaskQueue_onPreDispatchNext2 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.text.CoreTaskQueue_onPreDispatchNext1)
</UL>
<P><STRONG><a name="[81]"></a>CoreTaskQueue_onPreDispatchNext3</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, core.o(.text.CoreTaskQueue_onPreDispatchNext3))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CoreTaskQueue_onPreDispatchNext3 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.text.CoreTaskQueue_onPreDispatchNext2)
</UL>
<P><STRONG><a name="[324]"></a>CoreTask_Cancel</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreTask_Cancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = CoreTask_Cancel &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_CancelTask
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_RemoveFader
</UL>

<P><STRONG><a name="[1d1]"></a>CoreTask_Complete</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, core.o(.text.CoreTask_Complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = CoreTask_Complete &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_Complete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTask)
</UL>
<P><STRONG><a name="[34d]"></a>CoreTask_IsCurrent</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, core.o(.text.CoreTask_IsCurrent))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_RemoveFader
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_AddFader
</UL>

<P><STRONG><a name="[1cf]"></a>CoreTask_OnCancel</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, core.o(.text.CoreTask_OnCancel))
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTask)
</UL>
<P><STRONG><a name="[1ce]"></a>CoreTask_OnComplete</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, core.o(.text.CoreTask_OnComplete))
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTask)
</UL>
<P><STRONG><a name="[1d0]"></a>CoreTask_OnStart</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreTask_OnStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = CoreTask_OnStart &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_CancelTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTask)
</UL>
<P><STRONG><a name="[34e]"></a>CoreTask__Complete</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreTask__Complete))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnStart
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFader_OnStart
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_OnStart
</UL>

<P><STRONG><a name="[1cd]"></a>CoreTask__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreTask__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTask)
</UL>
<P><STRONG><a name="[1cb]"></a>CoreTask__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, core.o(.text.CoreTask__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreTask__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTask)
</UL>
<P><STRONG><a name="[1cc]"></a>CoreTask__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreTask__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTask)
</UL>
<P><STRONG><a name="[325]"></a>CoreTimer_OnSetBegin</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, core.o(.text.CoreTimer_OnSetBegin))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CoreTimer_OnSetBegin &rArr; EwCreateTimer &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStartTimer
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwResetTimer
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseTouch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseKey
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onReleaseTouch
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onReleaseKey
</UL>

<P><STRONG><a name="[326]"></a>CoreTimer_OnSetEnabled</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, core.o(.text.CoreTimer_OnSetEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CoreTimer_OnSetEnabled &rArr; EwCreateTimer &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStartTimer
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwResetTimer
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffectTimer__Init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseTouch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseKey
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onPressTouch
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onPressKey
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onReleaseTouch
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onReleaseKey
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onPressTouch
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onPressKey
</UL>

<P><STRONG><a name="[327]"></a>CoreTimer_OnSetPeriod</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, core.o(.text.CoreTimer_OnSetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CoreTimer_OnSetPeriod &rArr; EwCreateTimer &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStartTimer
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwResetTimer
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffectTimer__Init
</UL>

<P><STRONG><a name="[1d8]"></a>CoreTimer_Trigger</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, core.o(.text.CoreTimer_Trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CoreTimer_Trigger &rArr; EwStartTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStartTimer
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSignal
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwResetTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffectTimerClass_Trigger
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTimer)
</UL>
<P><STRONG><a name="[1d7]"></a>CoreTimer__Done</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, core.o(.text.CoreTimer__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDestroyTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Done
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Done
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffectTimerClass__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTimer)
</UL>
<P><STRONG><a name="[1d5]"></a>CoreTimer__Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, core.o(.text.CoreTimer__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreTimer__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffectTimerClass__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTimer)
</UL>
<P><STRONG><a name="[1d6]"></a>CoreTimer__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreTimer__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__ReInit
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__ReInit
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffectTimerClass__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreTimer)
</UL>
<P><STRONG><a name="[1dd]"></a>CoreView_ArrangeView</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, core.o(.text.CoreView_ArrangeView))
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreView)
</UL>
<P><STRONG><a name="[1ad]"></a>CoreView_ChangeViewState</STRONG> (Thumb, 258 bytes, Stack size 64 bytes, core.o(.text.CoreView_ChangeViewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = CoreView_ChangeViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FindSiblingView
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_ChangeViewState
</UL>
<BR>[Address Reference Count : 12]<UL><LI> views.o(.rodata.__vmt_ViewsRectangle)
<LI> views.o(.rodata.__vmt_ViewsFrame)
<LI> views.o(.rodata.__vmt_ViewsImage)
<LI> views.o(.rodata.__vmt_ViewsText)
<LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
<LI> views.o(.rodata.__vmt_ViewsFillPath)
<LI> core.o(.rodata.__vmt_CoreView)
<LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreRectView)
<LI> core.o(.rodata.__vmt_CoreOutline)
<LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
</UL>
<P><STRONG><a name="[1ac]"></a>CoreView_CursorHitTest</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreView_CursorHitTest))
<BR>[Address Reference Count : 11]<UL><LI> views.o(.rodata.__vmt_ViewsRectangle)
<LI> views.o(.rodata.__vmt_ViewsFrame)
<LI> views.o(.rodata.__vmt_ViewsImage)
<LI> views.o(.rodata.__vmt_ViewsText)
<LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
<LI> views.o(.rodata.__vmt_ViewsFillPath)
<LI> core.o(.rodata.__vmt_CoreView)
<LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreRectView)
<LI> core.o(.rodata.__vmt_CoreOutline)
</UL>
<P><STRONG><a name="[1b3]"></a>CoreView_Draw</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, core.o(.text.CoreView_Draw))
<BR>[Address Reference Count : 4]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> core.o(.rodata.__vmt_CoreView)
<LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreRectView)
</UL>
<P><STRONG><a name="[1df]"></a>CoreView_GetExtent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, core.o(.text.CoreView_GetExtent))
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreView)
</UL>
<P><STRONG><a name="[165]"></a>CoreView_GetRoot</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, core.o(.text.CoreView_GetRoot))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = CoreView_GetRoot &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
</UL>
<BR>[Address Reference Count : 26]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> views.o(.rodata.__vmt_ViewsRectangle)
<LI> views.o(.rodata.__vmt_ViewsFrame)
<LI> views.o(.rodata.__vmt_ViewsImage)
<LI> views.o(.rodata.__vmt_ViewsText)
<LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
<LI> views.o(.rodata.__vmt_ViewsFillPath)
<LI> core.o(.rodata.__vmt_CoreView)
<LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreRectView)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> core.o(.rodata.__vmt_CoreOutline)
<LI> core.o(.rodata.__vmt_CoreSimpleTouchHandler)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[153]"></a>CoreView_HandleEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreView_HandleEvent))
<BR>[Address Reference Count : 27]<UL><LI> application.o(.rodata.__vmt_ApplicationWelcomeScreen)
<LI> application.o(.rodata.__vmt_ApplicationApplication)
<LI> application.o(.rodata.__vmt_ApplicationMenu)
<LI> application.o(.rodata.__vmt_ApplicationDetectorScreen)
<LI> application.o(.rodata.__vmt_ApplicationCurrentMeasurement)
<LI> application.o(.rodata.__vmt_ApplicationCalibration)
<LI> application.o(.rodata.__vmt_ApplicationDebug)
<LI> application.o(.rodata.__vmt_ApplicationSettings)
<LI> application.o(.rodata.__vmt_ApplicationDistanceMeasurement)
<LI> views.o(.rodata.__vmt_ViewsRectangle)
<LI> views.o(.rodata.__vmt_ViewsFrame)
<LI> views.o(.rodata.__vmt_ViewsImage)
<LI> views.o(.rodata.__vmt_ViewsText)
<LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
<LI> views.o(.rodata.__vmt_ViewsFillPath)
<LI> core.o(.rodata.__vmt_CoreView)
<LI> core.o(.rodata.__vmt_CoreRoot)
<LI> core.o(.rodata.__vmt_CoreQuadView)
<LI> core.o(.rodata.__vmt_CoreRectView)
<LI> core.o(.rodata.__vmt_CoreGroup)
<LI> core.o(.rodata.__vmt_CoreOutline)
<LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
<LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
<LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
<LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
<LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[1de]"></a>CoreView_MoveView</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, core.o(.text.CoreView_MoveView))
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreView)
</UL>
<P><STRONG><a name="[2b3]"></a>CoreView_OnSetLayout</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, core.o(.text.CoreView_OnSetLayout))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = CoreView_OnSetLayout &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>

<P><STRONG><a name="[4a7]"></a>CoreView__ChangeViewState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreView__ChangeViewState))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetEmbedded
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetVisible
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onConfigChanged
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onConfigChanged
</UL>

<P><STRONG><a name="[1db]"></a>CoreView__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, core.o(.text.CoreView__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreView)
</UL>
<P><STRONG><a name="[4be]"></a>CoreView__GetExtent</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, core.o(.text.CoreView__GetExtent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreView__GetExtent
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_update
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_Warp3D
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_timerSlot
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_observerSlot
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetFrameNumber
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetColor
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetAnimated
</UL>

<P><STRONG><a name="[2c5]"></a>CoreView__GetRoot</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.CoreView__GetRoot))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings_UpdateViewDebug
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings_UpdateViewCalibration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewSettings
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewDistance
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewDetector
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewCurrent
</UL>

<P><STRONG><a name="[1d9]"></a>CoreView__Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, core.o(.text.CoreView__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CoreView__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreView)
</UL>
<P><STRONG><a name="[1da]"></a>CoreView__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, core.o(.text.CoreView__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreView)
</UL>
<P><STRONG><a name="[1dc]"></a>CoreView_initLayoutContext</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, core.o(.text.CoreView_initLayoutContext))
<BR>[Address Reference Count : 1]<UL><LI> core.o(.rodata.__vmt_CoreView)
</UL>
<P><STRONG><a name="[63]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ew_bsp_graphics.o(.text.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DMA2D_IRQHandler &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[32a]"></a>DeviceDriver_Deinitialize</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, devicedriver.o(.text.DeviceDriver_Deinitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = DeviceDriver_Deinitialize &rArr; EwUnlockObject &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockObject
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDone
</UL>

<P><STRONG><a name="[2bd]"></a>DeviceDriver_DisableLampTest</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, devicedriver.o(.text.DeviceDriver_DisableLampTest))
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmDisableLampTest
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass_OnSetLamptest
</UL>

<P><STRONG><a name="[32d]"></a>DeviceDriver_Initialize</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, devicedriver.o(.text.DeviceDriver_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = DeviceDriver_Initialize &rArr; EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmInitAll
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockObject
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspInOutInitLed
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspInOutInitButton
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[332]"></a>DeviceDriver_ProcessData</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, devicedriver.o(.text.DeviceDriver_ProcessData))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = DeviceDriver_ProcessData &rArr; ApplicationDeviceClass__UpdateDistance &rArr; EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmGetDistance
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmGetCurrent
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmGetAngle
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__UpdateDistance
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__UpdateCurrent
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__UpdateAngle
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[2bc]"></a>DeviceDriver_SetLampTest</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, devicedriver.o(.text.DeviceDriver_SetLampTest))
<BR><BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmSetLampTest
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass_OnSetLamptest
</UL>

<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI0_IRQHandler &rArr; EwBspInOutEventHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspInOutEventHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1e7]"></a>EffectsEffectTimerClass_Trigger</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, effects.o(.text.EffectsEffectTimerClass_Trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = EffectsEffectTimerClass_Trigger &rArr; EwNotifyObjObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyObjObservers
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_Trigger
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsEffectTimerClass)
</UL>
<P><STRONG><a name="[1e6]"></a>EffectsEffectTimerClass__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, effects.o(.text.EffectsEffectTimerClass__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = EffectsEffectTimerClass__Done &rArr; CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsEffectTimerClass)
</UL>
<P><STRONG><a name="[1e4]"></a>EffectsEffectTimerClass__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, effects.o(.text.EffectsEffectTimerClass__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EffectsEffectTimerClass__Init &rArr; CoreTimer__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsEffectTimerClass)
</UL>
<P><STRONG><a name="[1e5]"></a>EffectsEffectTimerClass__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsEffectTimerClass__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsEffectTimerClass)
</UL>
<P><STRONG><a name="[147]"></a>EffectsEffectTimer__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, effects.o(.text.EffectsEffectTimer__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EffectsEffectTimer__Init &rArr; CoreTimer_OnSetPeriod &rArr; EwCreateTimer &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetPeriod
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata._EffectsEffectTimer)
</UL>
<P><STRONG><a name="[1e3]"></a>EffectsEffect_Animate</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, effects.o(.text.EffectsEffect_Animate))
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsEffect)
</UL>
<P><STRONG><a name="[4cd]"></a>EffectsEffect_OnSetCycleDuration</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, effects.o(.text.EffectsEffect_OnSetCycleDuration))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onUpdatePos
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onUpdateAngle
</UL>

<P><STRONG><a name="[341]"></a>EffectsEffect_OnSetEnabled</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, effects.o(.text.EffectsEffect_OnSetEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = EffectsEffect_OnSetEnabled &rArr; EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onUpdatePos
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onUpdateAngle
</UL>

<P><STRONG><a name="[4cb]"></a>EffectsEffect_OnSetNoOfCycles</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, effects.o(.text.EffectsEffect_OnSetNoOfCycles))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__Init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Init
</UL>

<P><STRONG><a name="[4ca]"></a>EffectsEffect_OnSetTiming</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, effects.o(.text.EffectsEffect_OnSetTiming))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__Init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onUpdatePos
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onUpdateAngle
</UL>

<P><STRONG><a name="[1e2]"></a>EffectsEffect__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, effects.o(.text.EffectsEffect__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsEffect)
</UL>
<P><STRONG><a name="[1e0]"></a>EffectsEffect__Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, effects.o(.text.EffectsEffect__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EffectsEffect__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsEffect)
</UL>
<P><STRONG><a name="[1e1]"></a>EffectsEffect__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsEffect__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsEffect)
</UL>
<P><STRONG><a name="[344]"></a>EffectsEffect_run</STRONG> (Thumb, 1980 bytes, Stack size 80 bytes, effects.o(.text.EffectsEffect_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = EffectsEffect_run &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathSqrt
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathSin
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathPow
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathCos
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSignal
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_runRevRev
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_runRevFwd
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_runFwdRev
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_runFwdFwd
</UL>

<P><STRONG><a name="[349]"></a>EffectsEffect_runFwdFwd</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, effects.o(.text.EffectsEffect_runFwdFwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = EffectsEffect_runFwdFwd &rArr; EffectsEffect_run &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_timerSlot
</UL>

<P><STRONG><a name="[34a]"></a>EffectsEffect_runFwdRev</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, effects.o(.text.EffectsEffect_runFwdRev))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = EffectsEffect_runFwdRev &rArr; EffectsEffect_run &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_timerSlot
</UL>

<P><STRONG><a name="[34b]"></a>EffectsEffect_runRevFwd</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, effects.o(.text.EffectsEffect_runRevFwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = EffectsEffect_runRevFwd &rArr; EffectsEffect_run &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_timerSlot
</UL>

<P><STRONG><a name="[34c]"></a>EffectsEffect_runRevRev</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, effects.o(.text.EffectsEffect_runRevRev))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = EffectsEffect_runRevRev &rArr; EffectsEffect_run &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_timerSlot
</UL>

<P><STRONG><a name="[84]"></a>EffectsEffect_timerSlot</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, effects.o(.text.EffectsEffect_timerSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = EffectsEffect_timerSlot &rArr; EffectsEffect_runRevRev &rArr; EffectsEffect_run &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_runRevRev
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_runRevFwd
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_runFwdRev
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_runFwdFwd
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSignal
</UL>
<BR>[Address Reference Count : 2]<UL><LI> effects.o(.text.EffectsEffect_OnSetEnabled)
<LI> effects.o(.text.EffectsEffect_timerSlot)
</UL>
<P><STRONG><a name="[2f3]"></a>EffectsFaderTask_AddFader</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, effects.o(.text.EffectsFaderTask_AddFader))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = EffectsFaderTask_AddFader &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask_IsCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
</UL>

<P><STRONG><a name="[1f4]"></a>EffectsFaderTask_Complete</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, effects.o(.text.EffectsFaderTask_Complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = EffectsFaderTask_Complete &rArr; CoreTask_Complete &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask_Complete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFaderTask)
</UL>
<P><STRONG><a name="[1f2]"></a>EffectsFaderTask_OnCancel</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, effects.o(.text.EffectsFaderTask_OnCancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EffectsFaderTask_OnCancel &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFaderTask)
</UL>
<P><STRONG><a name="[1f1]"></a>EffectsFaderTask_OnComplete</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, effects.o(.text.EffectsFaderTask_OnComplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EffectsFaderTask_OnComplete &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFaderTask)
</UL>
<P><STRONG><a name="[1f3]"></a>EffectsFaderTask_OnStart</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, effects.o(.text.EffectsFaderTask_OnStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EffectsFaderTask_OnStart
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSignal
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask__Complete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFaderTask)
</UL>
<P><STRONG><a name="[2f2]"></a>EffectsFaderTask_RemoveFader</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, effects.o(.text.EffectsFaderTask_RemoveFader))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = EffectsFaderTask_RemoveFader &rArr; CoreTask_Cancel &rArr; CoreTaskQueue_CancelTask &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask_IsCurrent
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask_Cancel
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
</UL>

<P><STRONG><a name="[1f0]"></a>EffectsFaderTask__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, effects.o(.text.EffectsFaderTask__Done))
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFaderTask)
</UL>
<P><STRONG><a name="[1ee]"></a>EffectsFaderTask__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, effects.o(.text.EffectsFaderTask__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EffectsFaderTask__Init &rArr; CoreTask__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFaderTask)
</UL>
<P><STRONG><a name="[1ef]"></a>EffectsFaderTask__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsFaderTask__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFaderTask)
</UL>
<P><STRONG><a name="[1eb]"></a>EffectsFader_IsFinished</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsFader_IsFinished))
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFader)
</UL>
<P><STRONG><a name="[1ec]"></a>EffectsFader_OnEnd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, effects.o(.text.EffectsFader_OnEnd))
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFader)
</UL>
<P><STRONG><a name="[1ed]"></a>EffectsFader_OnStart</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, effects.o(.text.EffectsFader_OnStart))
<BR><BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask__Complete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFader)
</UL>
<P><STRONG><a name="[1ea]"></a>EffectsFader__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, effects.o(.text.EffectsFader__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFader)
</UL>
<P><STRONG><a name="[1e8]"></a>EffectsFader__Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, effects.o(.text.EffectsFader__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EffectsFader__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFader)
</UL>
<P><STRONG><a name="[1e9]"></a>EffectsFader__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsFader__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFader)
</UL>
<P><STRONG><a name="[1f8]"></a>EffectsFloatEffect_Animate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, effects.o(.text.EffectsFloatEffect_Animate))
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFloatEffect)
</UL>
<P><STRONG><a name="[1f7]"></a>EffectsFloatEffect__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, effects.o(.text.EffectsFloatEffect__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__Done
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFloatEffect)
</UL>
<P><STRONG><a name="[1f5]"></a>EffectsFloatEffect__Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, effects.o(.text.EffectsFloatEffect__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EffectsFloatEffect__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__Init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFloatEffect)
</UL>
<P><STRONG><a name="[1f6]"></a>EffectsFloatEffect__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsFloatEffect__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__ReInit
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsFloatEffect)
</UL>
<P><STRONG><a name="[148]"></a>EffectsShowHideCentered__Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, effects.o(.text.EffectsShowHideCentered__Init))
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata._EffectsShowHideCentered)
</UL>
<P><STRONG><a name="[1fd]"></a>EffectsShowHideTransition_CreateDismissFader</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, effects.o(.text.EffectsShowHideTransition_CreateDismissFader))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = EffectsShowHideTransition_CreateDismissFader &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsShowHideTransition)
</UL>
<P><STRONG><a name="[1ff]"></a>EffectsShowHideTransition_CreateOverlayFader</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, effects.o(.text.EffectsShowHideTransition_CreateOverlayFader))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = EffectsShowHideTransition_CreateOverlayFader &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsShowHideTransition)
</UL>
<P><STRONG><a name="[1fc]"></a>EffectsShowHideTransition_CreatePresentFader</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, effects.o(.text.EffectsShowHideTransition_CreatePresentFader))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EffectsShowHideTransition_CreatePresentFader &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsShowHideTransition)
</UL>
<P><STRONG><a name="[1fe]"></a>EffectsShowHideTransition_CreateRestoreFader</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, effects.o(.text.EffectsShowHideTransition_CreateRestoreFader))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EffectsShowHideTransition_CreateRestoreFader
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsShowHideTransition)
</UL>
<P><STRONG><a name="[1fb]"></a>EffectsShowHideTransition__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, effects.o(.text.EffectsShowHideTransition__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsShowHideTransition)
</UL>
<P><STRONG><a name="[1f9]"></a>EffectsShowHideTransition__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, effects.o(.text.EffectsShowHideTransition__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EffectsShowHideTransition__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsShowHideTransition)
</UL>
<P><STRONG><a name="[1fa]"></a>EffectsShowHideTransition__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsShowHideTransition__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsShowHideTransition)
</UL>
<P><STRONG><a name="[85]"></a>EffectsShowHideTransition_onInitializeIn</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, effects.o(.text.EffectsShowHideTransition_onInitializeIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = EffectsShowHideTransition_onInitializeIn &rArr; EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectW
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectH
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.text.EffectsShowHideTransition_CreatePresentFader)
</UL>
<P><STRONG><a name="[202]"></a>EffectsTimingList__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, effects.o(.text.EffectsTimingList__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsTimingList)
</UL>
<P><STRONG><a name="[200]"></a>EffectsTimingList__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, effects.o(.text.EffectsTimingList__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EffectsTimingList__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsTimingList)
</UL>
<P><STRONG><a name="[201]"></a>EffectsTimingList__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsTimingList__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsTimingList)
</UL>
<P><STRONG><a name="[207]"></a>EffectsTransition_CreateDismissFader</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsTransition_CreateDismissFader))
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsTransition)
</UL>
<P><STRONG><a name="[209]"></a>EffectsTransition_CreateOverlayFader</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, effects.o(.text.EffectsTransition_CreateOverlayFader))
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsTransition)
</UL>
<P><STRONG><a name="[206]"></a>EffectsTransition_CreatePresentFader</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsTransition_CreatePresentFader))
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsTransition)
</UL>
<P><STRONG><a name="[208]"></a>EffectsTransition_CreateRestoreFader</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, effects.o(.text.EffectsTransition_CreateRestoreFader))
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsTransition)
</UL>
<P><STRONG><a name="[2ef]"></a>EffectsTransition__CreateDismissFader</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, effects.o(.text.EffectsTransition__CreateDismissFader))
<BR><BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
</UL>

<P><STRONG><a name="[2ec]"></a>EffectsTransition__CreateOverlayFader</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, effects.o(.text.EffectsTransition__CreateOverlayFader))
<BR><BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
</UL>

<P><STRONG><a name="[2fb]"></a>EffectsTransition__CreatePresentFader</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, effects.o(.text.EffectsTransition__CreatePresentFader))
<BR><BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
</UL>

<P><STRONG><a name="[2ed]"></a>EffectsTransition__CreateRestoreFader</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, effects.o(.text.EffectsTransition__CreateRestoreFader))
<BR><BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
</UL>

<P><STRONG><a name="[205]"></a>EffectsTransition__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, effects.o(.text.EffectsTransition__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsTransition)
</UL>
<P><STRONG><a name="[203]"></a>EffectsTransition__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, effects.o(.text.EffectsTransition__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EffectsTransition__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsTransition)
</UL>
<P><STRONG><a name="[204]"></a>EffectsTransition__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsTransition__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsTransition)
</UL>
<P><STRONG><a name="[20d]"></a>EffectsVisibilityFader_IsFinished</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, effects.o(.text.EffectsVisibilityFader_IsFinished))
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsVisibilityFader)
</UL>
<P><STRONG><a name="[20e]"></a>EffectsVisibilityFader_OnEnd</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, effects.o(.text.EffectsVisibilityFader_OnEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = EffectsVisibilityFader_OnEnd &rArr; CoreGroup_Remove &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetEnabled
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetVisible
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsVisibilityFader)
</UL>
<P><STRONG><a name="[20f]"></a>EffectsVisibilityFader_OnStart</STRONG> (Thumb, 222 bytes, Stack size 48 bytes, effects.o(.text.EffectsVisibilityFader_OnStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = EffectsVisibilityFader_OnStart &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetEnabled
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetRectOrigin
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask__Complete
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__OnSetOpacity
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__OnSetFocus
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_RestackTop
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetVisible
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsVisibilityFader)
</UL>
<P><STRONG><a name="[20c]"></a>EffectsVisibilityFader__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, effects.o(.text.EffectsVisibilityFader__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsVisibilityFader)
</UL>
<P><STRONG><a name="[20a]"></a>EffectsVisibilityFader__Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, effects.o(.text.EffectsVisibilityFader__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EffectsVisibilityFader__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsVisibilityFader)
</UL>
<P><STRONG><a name="[20b]"></a>EffectsVisibilityFader__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, effects.o(.text.EffectsVisibilityFader__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> effects.o(.rodata.__vmt_EffectsVisibilityFader)
</UL>
<P><STRONG><a name="[367]"></a>EwAdaptByteOrder2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewresource.o(.text.EwAdaptByteOrder2))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpLoadFrame
</UL>

<P><STRONG><a name="[368]"></a>EwAdaptByteOrder4</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewresource.o(.text.EwAdaptByteOrder4))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpLoadFrame
</UL>

<P><STRONG><a name="[353]"></a>EwAddHeapMemoryPool</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, ewheap.o(.text.EwAddHeapMemoryPool))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EwAddHeapMemoryPool &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[354]"></a>EwAddSubPathArc</STRONG> (Thumb, 510 bytes, Stack size 112 bytes, ewgfx.o(.text.EwAddSubPathArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = EwAddSubPathArc &rArr; EwMathSin &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathSin
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathCos
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_updatePath
</UL>

<P><STRONG><a name="[28d]"></a>EwAlloc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextrte.o(.text.EwAlloc))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitViewport
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockObject
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBidi
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadFont
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitSubPath
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreatePath
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwRegisterResource
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateTimer
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBitmap
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxInitViewport
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocVideo
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachRefObserver
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllocString
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSignal
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDecompress
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFillPolygon
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiProcess
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockBitmap
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGfxCore
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntLoadGlyph
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateGlyph
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateConstSurface
</UL>

<P><STRONG><a name="[355]"></a>EwAllocHeapBlock</STRONG> (Thumb, 802 bytes, Stack size 40 bytes, ewheap.o(.text.EwAllocHeapBlock), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>

<P><STRONG><a name="[3ab]"></a>EwAllocTask</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ewgfxcore.o(.text.EwAllocTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwAllocTask
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillRectangle
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopyBitmap
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTileBitmap
</UL>

<P><STRONG><a name="[3aa]"></a>EwAllocTaskData</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ewgfxcore.o(.text.EwAllocTaskData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwAllocTaskData
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillRectangle
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopyBitmap
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTileBitmap
</UL>

<P><STRONG><a name="[3d8]"></a>EwAllocTasks</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, ewgfxcore.o(.text.EwAllocTasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EwAllocTasks
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEliminateTasks
</UL>

<P><STRONG><a name="[356]"></a>EwAllocVideo</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ewgfxdriver.o(.text.EwAllocVideo))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EwAllocVideo &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxInitViewport
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCreateSurface
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCreateConstSurface
</UL>

<P><STRONG><a name="[342]"></a>EwAttachObjObserver</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, ewslot.o(.text.EwAttachObjObserver))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = EwAttachObjObserver &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetAppearance
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetAppearance
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetAppearance
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetAppearance
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetBitmap
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetAnimated
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAnimated
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetBitmap
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetAnimated
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetPath
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetEnabled
</UL>

<P><STRONG><a name="[357]"></a>EwAttachRefObserver</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, ewslot.o(.text.EwAttachRefObserver))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = EwAttachRefObserver &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetOutlet
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetOutlet
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetOutlet
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetOutlet
</UL>

<P><STRONG><a name="[453]"></a>EwBeginSubPath</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, ewgfx.o(.text.EwBeginSubPath))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_updatePath
</UL>

<P><STRONG><a name="[358]"></a>EwBeginUpdate</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, ewgfx.o(.text.EwBeginUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EwBeginUpdate &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBeginUpdate
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[35b]"></a>EwBeginUpdateArea</STRONG> (Thumb, 344 bytes, Stack size 88 bytes, ewgfx.o(.text.EwBeginUpdateArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = EwBeginUpdateArea &rArr; GfxBeginUpdateArea &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIntersectRect
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBeginUpdateArea
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[35d]"></a>EwBidiApplyShaping</STRONG> (Thumb, 1160 bytes, Stack size 72 bytes, ewgfxbidi.o(.text.EwBidiApplyShaping))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = EwBidiApplyShaping &rArr; EwIsGlyphAvailable &rArr; EwFindGlyph &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsGlyphAvailable
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
</UL>

<P><STRONG><a name="[42e]"></a>EwBidiCompleteRow</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, ewgfxbidi.o(.text.EwBidiCompleteRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwBidiCompleteRow
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
</UL>

<P><STRONG><a name="[42d]"></a>EwBidiGetCharLevel</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ewgfxbidi.o(.text.EwBidiGetCharLevel))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
</UL>

<P><STRONG><a name="[35f]"></a>EwBidiInit</STRONG> (Thumb, 1008 bytes, Stack size 56 bytes, ewgfxbidi.o(.text.EwBidiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = EwBidiInit &rArr; EwGetStringLength &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringLength
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
</UL>

<P><STRONG><a name="[4bb]"></a>EwBidiIsNeeded</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ewgfxbidi.o(.text.EwBidiIsNeeded))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
</UL>

<P><STRONG><a name="[4b3]"></a>EwBidiIsRTL</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ewgfxbidi.o(.text.EwBidiIsRTL))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
</UL>

<P><STRONG><a name="[42c]"></a>EwBidiMirrorGlyphs</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, ewgfxbidi.o(.text.EwBidiMirrorGlyphs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EwBidiMirrorGlyphs
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
</UL>

<P><STRONG><a name="[361]"></a>EwBidiProcess</STRONG> (Thumb, 4550 bytes, Stack size 768 bytes, ewgfxbidi.o(.text.EwBidiProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1060<LI>Call Chain = EwBidiProcess &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
</UL>

<P><STRONG><a name="[42f]"></a>EwBidiReorderChars</STRONG> (Thumb, 344 bytes, Stack size 552 bytes, ewgfxbidi.o(.text.EwBidiReorderChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = EwBidiReorderChars
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
</UL>

<P><STRONG><a name="[419]"></a>EwBmpClose</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewextbmp_RGB565.o(.text.EwBmpClose))
<BR><BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
</UL>

<P><STRONG><a name="[3cc]"></a>EwBmpDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewextbmp_RGB565.o(.text.EwBmpDone))
<BR><BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGraphicsEngine
</UL>

<P><STRONG><a name="[418]"></a>EwBmpGetFrameMemory</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, ewextbmp_RGB565.o(.text.EwBmpGetFrameMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwBmpGetFrameMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
</UL>

<P><STRONG><a name="[41b]"></a>EwBmpGetFrameMetrics</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ewextbmp_RGB565.o(.text.EwBmpGetFrameMetrics))
<BR><BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
</UL>

<P><STRONG><a name="[417]"></a>EwBmpGetMetrics</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, ewextbmp_RGB565.o(.text.EwBmpGetMetrics))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EwBmpGetMetrics
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
</UL>

<P><STRONG><a name="[362]"></a>EwBmpInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ewextbmp_RGB565.o(.text.EwBmpInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EwBmpInit &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
</UL>

<P><STRONG><a name="[363]"></a>EwBmpLoadClut</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, ewextbmp_RGB565.o(.text.EwBmpLoadClut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EwBmpLoadClut &rArr; EwCopy &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopy
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
</UL>

<P><STRONG><a name="[365]"></a>EwBmpLoadFrame</STRONG> (Thumb, 694 bytes, Stack size 40 bytes, ewextbmp_RGB565.o(.text.EwBmpLoadFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = EwBmpLoadFrame &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDecompress
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAdaptByteOrder4
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAdaptByteOrder2
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
</UL>

<P><STRONG><a name="[41a]"></a>EwBmpLoadMappingTable</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ewextbmp_RGB565.o(.text.EwBmpLoadMappingTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwBmpLoadMappingTable
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
</UL>

<P><STRONG><a name="[369]"></a>EwBmpOpen</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, ewextbmp_RGB565.o(.text.EwBmpOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EwBmpOpen &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorS
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
</UL>

<P><STRONG><a name="[381]"></a>EwBspClockCpuLoadSetActive</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, ew_bsp_clock.o(.text.EwBspClockCpuLoadSetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwBspClockCpuLoadSetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspTouchGetEvents
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspEventWait
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayWaitForCompletion
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsLoadClut
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFillBlend
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFill
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopyBlend
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopy
</UL>

<P><STRONG><a name="[380]"></a>EwBspClockCpuLoadSetIdle</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ew_bsp_clock.o(.text.EwBspClockCpuLoadSetIdle))
<BR><BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspTouchGetEvents
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspEventWait
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayWaitForCompletion
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsLoadClut
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFillBlend
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFill
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopyBlend
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopy
</UL>

<P><STRONG><a name="[406]"></a>EwBspClockGetTicks</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ew_bsp_clock.o(.text.EwBspClockGetTicks))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
</UL>

<P><STRONG><a name="[36b]"></a>EwBspClockGetTime</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, ew_bsp_clock.o(.text.EwBspClockGetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwBspClockGetTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathRandInt32
</UL>

<P><STRONG><a name="[36e]"></a>EwBspClockInit</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ew_bsp_clock.o(.text.EwBspClockInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EwBspClockInit &rArr; HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[371]"></a>EwBspClockSetTime</STRONG> (Thumb, 456 bytes, Stack size 48 bytes, ew_bsp_clock.o(.text.EwBspClockSetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EwBspClockSetTime &rArr; HAL_RTC_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[497]"></a>EwBspClockTickIncrement</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ew_bsp_clock.o(.text.EwBspClockTickIncrement))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4d9]"></a>EwBspConsoleDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ew_bsp_console.o(.text.EwBspConsoleDone))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[374]"></a>EwBspConsoleInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ew_bsp_console.o(.text.EwBspConsoleInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = EwBspConsoleInit &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[376]"></a>EwBspConsolePutCharacter</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ew_bsp_console.o(.text.EwBspConsolePutCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwBspConsolePutCharacter &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwConsoleOutput
</UL>

<P><STRONG><a name="[44b]"></a>EwBspDisplayCommitBuffer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ew_bsp_display.o(.text.EwBspDisplayCommitBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxEndUpdate
</UL>

<P><STRONG><a name="[3c9]"></a>EwBspDisplayDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ew_bsp_display.o(.text.EwBspDisplayDone))
<BR><BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDone
</UL>

<P><STRONG><a name="[437]"></a>EwBspDisplayGetUpdateArea</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ew_bsp_display.o(.text.EwBspDisplayGetUpdateArea))
<BR><BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[378]"></a>EwBspDisplayInit</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, ew_bsp_display.o(.text.EwBspDisplayInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = EwBspDisplayInit &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ili9341_Init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[37f]"></a>EwBspDisplayWaitForCompletion</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ew_bsp_display.o(.text.EwBspDisplayWaitForCompletion))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = EwBspDisplayWaitForCompletion &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetIdle
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBeginUpdateArea
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBeginUpdate
</UL>

<P><STRONG><a name="[382]"></a>EwBspEventWait</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, ew_bsp_event.o(.text.EwBspEventWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EwBspEventWait &rArr; osSignalWait &rArr; xTaskNotifyWait &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetIdle
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[385]"></a>EwBspGraphicsCopy</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, ew_bsp_graphics.o(.text.EwBspGraphicsCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = EwBspGraphicsCopy &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start_IT
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetIdle
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCopyDriver
</UL>

<P><STRONG><a name="[389]"></a>EwBspGraphicsCopyBlend</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, ew_bsp_graphics.o(.text.EwBspGraphicsCopyBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = EwBspGraphicsCopyBlend &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_BlendingStart_IT
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetIdle
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBlendDriver
</UL>

<P><STRONG><a name="[38b]"></a>EwBspGraphicsDone</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ew_bsp_graphics.o(.text.EwBspGraphicsDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EwBspGraphicsDone &rArr; HAL_DMA2D_DeInit &rArr; HAL_DMA2D_MspDeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxDoneViewport
</UL>

<P><STRONG><a name="[38d]"></a>EwBspGraphicsFill</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, ew_bsp_graphics.o(.text.EwBspGraphicsFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EwBspGraphicsFill &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start_IT
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetIdle
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxFillDriver
</UL>

<P><STRONG><a name="[38e]"></a>EwBspGraphicsFillBlend</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, ew_bsp_graphics.o(.text.EwBspGraphicsFillBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = EwBspGraphicsFillBlend &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_BlendingStart_IT
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetIdle
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxFillDriver
</UL>

<P><STRONG><a name="[38f]"></a>EwBspGraphicsInit</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, ew_bsp_graphics.o(.text.EwBspGraphicsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = EwBspGraphicsInit &rArr; osSemaphoreCreate &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxInitViewport
</UL>

<P><STRONG><a name="[391]"></a>EwBspGraphicsLoadClut</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, ew_bsp_graphics.o(.text.EwBspGraphicsLoadClut))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EwBspGraphicsLoadClut &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoad_IT
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetIdle
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCopyDriver
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBlendDriver
</UL>

<P><STRONG><a name="[393]"></a>EwBspGraphicsWaitForCompletion</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ew_bsp_graphics.o(.text.EwBspGraphicsWaitForCompletion))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EwBspGraphicsWaitForCompletion &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetIdle
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxLockSurface
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxFillDriver
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxEndUpdate
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxDoneViewport
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxDestroySurface
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCopyDriver
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBlendDriver
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBeginUpdateArea
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBeginUpdate
</UL>

<P><STRONG><a name="[33f]"></a>EwBspInOutEventHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ew_bsp_inout.o(.text.EwBspInOutEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwBspInOutEventHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[32f]"></a>EwBspInOutInitButton</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, ew_bsp_inout.o(.text.EwBspInOutInitButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EwBspInOutInitButton &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_Initialize
</UL>

<P><STRONG><a name="[32e]"></a>EwBspInOutInitLed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ew_bsp_inout.o(.text.EwBspInOutInitLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = EwBspInOutInitLed &rArr; BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_Initialize
</UL>

<P><STRONG><a name="[4da]"></a>EwBspSystemDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ew_bsp_system.o(.text.EwBspSystemDone))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[395]"></a>EwBspSystemInit</STRONG> (Thumb, 170 bytes, Stack size 136 bytes, ew_bsp_system.o(.text.EwBspSystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = EwBspSystemInit &rArr; BSP_SDRAM_Init &rArr; BSP_SDRAM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c8]"></a>EwBspTouchDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ew_bsp_touch.o(.text.EwBspTouchDone))
<BR><BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDone
</UL>

<P><STRONG><a name="[39b]"></a>EwBspTouchGetEvents</STRONG> (Thumb, 308 bytes, Stack size 24 bytes, ew_bsp_touch.o(.text.EwBspTouchGetEvents))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwBspTouchGetEvents &rArr; BSP_TS_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_GetState
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetIdle
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockCpuLoadSetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[39d]"></a>EwBspTouchInit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ew_bsp_touch.o(.text.EwBspTouchInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EwBspTouchInit &rArr; BSP_TS_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[2e2]"></a>EwCanDiscardSurface</STRONG> (Thumb, 526 bytes, Stack size 16 bytes, ewgfx.o(.text.EwCanDiscardSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwCanDiscardSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlushAndClean
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanSurfaceCache
</UL>

<P><STRONG><a name="[2e7]"></a>EwCastObject</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, ewobject.o(.text.EwCastObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EwCastObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_GetRoot
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DispatchEvent
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_BroadcastEvent
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition_onInitializeIn
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_HandleEvent
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_ArrangeView
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__Init
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_recalculateLayout
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_drawContent
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
</UL>

<P><STRONG><a name="[452]"></a>EwCloseSubPath</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, ewgfx.o(.text.EwCloseSubPath))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwCloseSubPath
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_updatePath
</UL>

<P><STRONG><a name="[49b]"></a>EwCompColor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ewcolor.o(.text.EwCompColor))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftColor
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_OnSetColor
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetColor
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetColor
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetColor
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetColor
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_Medium__Init
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetSwitch_Medium__Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_Medium__Init
</UL>

<P><STRONG><a name="[2f9]"></a>EwCompPoint</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ewpoint.o(.text.EwCompPoint))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetWidgetMinSize
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedlePivot
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetCenterOffset
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetSourceAnchor
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint4
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint3
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint2
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint1
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_observerSlot
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetBounds
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_Draw
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetNoEdgesLimit
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetOffset
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_OnSetFrameSize
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchMovement
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint4
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint3
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint2
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint1
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreOutline_OnSetBounds
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_Medium__Init
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetSwitch_Medium__Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_Medium__Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_Medium__Init
</UL>

<P><STRONG><a name="[2f7]"></a>EwCompRect</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ewrect.o(.text.EwCompRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwCompRect
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetBounds
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_OnSetBounds
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreOutline_OnSetBounds
</UL>

<P><STRONG><a name="[4c8]"></a>EwCompRef</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ewref.o(.text.EwCompRef))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetOutlet
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetOutlet
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetOutlet
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetOutlet
</UL>

<P><STRONG><a name="[4b9]"></a>EwCompSlot</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ewslot.o(.text.EwCompSlot))
<BR><BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetOnUpdate
</UL>

<P><STRONG><a name="[39f]"></a>EwCompString</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, ewstring.o(.text.EwCompString))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = EwCompString &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetUnit
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetLabel
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetLabel
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onFormatValue
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_Medium__Init
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
</UL>

<P><STRONG><a name="[491]"></a>EwCompleteTasks</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, ewgfxtasks.o(.text.EwCompleteTasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EwCompleteTasks
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
</UL>

<P><STRONG><a name="[3a1]"></a>EwConcatCharString</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, ewstring.o(.text.EwConcatCharString))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = EwConcatCharString &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllocString
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
</UL>

<P><STRONG><a name="[3a2]"></a>EwConcatString</STRONG> (Thumb, 398 bytes, Stack size 24 bytes, ewstring.o(.text.EwConcatString))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = EwConcatString &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllocString
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onFormatValue
</UL>

<P><STRONG><a name="[3a3]"></a>EwConsoleOutput</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ewextrte.o(.text.EwConsoleOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwConsoleOutput &rArr; EwBspConsolePutCharacter &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspConsolePutCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>

<P><STRONG><a name="[364]"></a>EwCopy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextrte.o(.text.EwCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwCopy &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpLoadClut
</UL>

<P><STRONG><a name="[e0]"></a>EwCopyAlpha8RowGradient</STRONG> (Thumb, 958 bytes, Stack size 120 bytes, ewextpxl_RGB565.o(.text.EwCopyAlpha8RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EwCopyAlpha8RowGradient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[e1]"></a>EwCopyAlpha8RowGradientBlend</STRONG> (Thumb, 304 bytes, Stack size 60 bytes, ewextpxl_RGB565.o(.text.EwCopyAlpha8RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwCopyAlpha8RowGradientBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[9b]"></a>EwCopyAlpha8RowSolid</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, ewextpxl_RGB565.o(.text.EwCopyAlpha8RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EwCopyAlpha8RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[8f]"></a>EwCopyAlpha8RowSolidBlend</STRONG> (Thumb, 616 bytes, Stack size 52 bytes, ewextpxl_RGB565.o(.text.EwCopyAlpha8RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EwCopyAlpha8RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[3a5]"></a>EwCopyBitmap</STRONG> (Thumb, 1102 bytes, Stack size 120 bytes, ewgfx.o(.text.EwCopyBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = EwCopyBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPackColor
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneIssue
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTaskData
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTask
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_CopyBitmap
</UL>

<P><STRONG><a name="[9a]"></a>EwCopyIndex8Row</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, ewextpxl_RGB565.o(.text.EwCopyIndex8Row))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwCopyIndex8Row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
</UL>
<P><STRONG><a name="[8e]"></a>EwCopyIndex8RowBlend</STRONG> (Thumb, 528 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwCopyIndex8RowBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwCopyIndex8RowBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
</UL>
<P><STRONG><a name="[de]"></a>EwCopyIndex8RowGradient</STRONG> (Thumb, 302 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwCopyIndex8RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwCopyIndex8RowGradient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[df]"></a>EwCopyIndex8RowGradientBlend</STRONG> (Thumb, 564 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwCopyIndex8RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwCopyIndex8RowGradientBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[99]"></a>EwCopyIndex8RowSolid</STRONG> (Thumb, 268 bytes, Stack size 20 bytes, ewextpxl_RGB565.o(.text.EwCopyIndex8RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EwCopyIndex8RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[8d]"></a>EwCopyIndex8RowSolidBlend</STRONG> (Thumb, 538 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwCopyIndex8RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwCopyIndex8RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[98]"></a>EwCopyNativeRow</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, ewextpxl_RGB565.o(.text.EwCopyNativeRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwCopyNativeRow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
</UL>
<P><STRONG><a name="[8c]"></a>EwCopyNativeRowBlend</STRONG> (Thumb, 492 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwCopyNativeRowBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwCopyNativeRowBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
</UL>
<P><STRONG><a name="[dc]"></a>EwCopyNativeRowGradient</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, ewextpxl_RGB565.o(.text.EwCopyNativeRowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EwCopyNativeRowGradient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[dd]"></a>EwCopyNativeRowGradientBlend</STRONG> (Thumb, 524 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwCopyNativeRowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwCopyNativeRowGradientBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[97]"></a>EwCopyNativeRowSolid</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, ewextpxl_RGB565.o(.text.EwCopyNativeRowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwCopyNativeRowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[8b]"></a>EwCopyNativeRowSolidBlend</STRONG> (Thumb, 502 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwCopyNativeRowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwCopyNativeRowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[9e]"></a>EwCopyRGB565Row</STRONG> (Thumb, 402 bytes, Stack size 28 bytes, ewextpxl_RGB565.o(.text.EwCopyRGB565Row))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EwCopyRGB565Row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
</UL>
<P><STRONG><a name="[e2]"></a>EwCopyRGB565RowGradient</STRONG> (Thumb, 592 bytes, Stack size 44 bytes, ewextpxl_RGB565.o(.text.EwCopyRGB565RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = EwCopyRGB565RowGradient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[e3]"></a>EwCopyRGB565RowGradientBlend</STRONG> (Thumb, 622 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwCopyRGB565RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwCopyRGB565RowGradientBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[9d]"></a>EwCopyRGB565RowSolid</STRONG> (Thumb, 460 bytes, Stack size 24 bytes, ewextpxl_RGB565.o(.text.EwCopyRGB565RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EwCopyRGB565RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[91]"></a>EwCopyRGB565RowSolidBlend</STRONG> (Thumb, 580 bytes, Stack size 40 bytes, ewextpxl_RGB565.o(.text.EwCopyRGB565RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EwCopyRGB565RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[3ad]"></a>EwCreateBidi</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, ewgfxbidi.o(.text.EwCreateBidi))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EwCreateBidi &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
</UL>

<P><STRONG><a name="[3ae]"></a>EwCreateBitmap</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, ewgfx.o(.text.EwCreateBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 1652<LI>Call Chain = EwCreateBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeSurface
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_Update
</UL>

<P><STRONG><a name="[3b1]"></a>EwCreateConstSurface</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, ewgfxcore.o(.text.EwCreateConstSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = EwCreateConstSurface &rArr; FlushAndClean &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCreateConstSurface
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlushAndClean
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanSurfaceCache
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
</UL>

<P><STRONG><a name="[3b5]"></a>EwCreateGlyph</STRONG> (Thumb, 1262 bytes, Stack size 112 bytes, ewgfxcore.o(.text.EwCreateGlyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324<LI>Call Chain = EwCreateGlyph &rArr; FlushAndClean &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlushAndClean
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
</UL>

<P><STRONG><a name="[3b6]"></a>EwCreatePath</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, ewgfx.o(.text.EwCreatePath))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EwCreatePath &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath_SetMaxNoOfSubPaths
</UL>

<P><STRONG><a name="[3b7]"></a>EwCreateSurface</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, ewgfxcore.o(.text.EwCreateSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = EwCreateSurface &rArr; FlushAndClean &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRGB565SurfaceMemSize
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetNativeSurfaceMemSize
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCreateSurface
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetIndex8SurfaceMemSize
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAlpha8SurfaceMemSize
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlushAndClean
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanSurfaceCache
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGfxCore
</UL>

<P><STRONG><a name="[312]"></a>EwCreateTimer</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, ewtimer.o(.text.EwCreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EwCreateTimer &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetPeriod
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetBegin
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
</UL>

<P><STRONG><a name="[366]"></a>EwDecompress</STRONG> (Thumb, 1334 bytes, Stack size 88 bytes, ewresource.o(.text.EwDecompress))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpLoadFrame
</UL>

<P><STRONG><a name="[307]"></a>EwDeregisterResource</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, ewresource.o(.text.EwDeregisterResource))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = EwDeregisterResource &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__Done
</UL>

<P><STRONG><a name="[31a]"></a>EwDestroyTimer</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, ewtimer.o(.text.EwDestroyTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Done
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__Done
</UL>

<P><STRONG><a name="[343]"></a>EwDetachObjObserver</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, ewslot.o(.text.EwDetachObjObserver))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = EwDetachObjObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetAppearance
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetAppearance
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetAppearance
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetAppearance
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_timerSlot
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetBitmap
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetAnimated
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_timerSlot
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAnimated
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_timerSlot
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetBitmap
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetAnimated
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetPath
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_timerSlot
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetEnabled
</UL>

<P><STRONG><a name="[3bd]"></a>EwDetachRefObserver</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, ewslot.o(.text.EwDetachRefObserver))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = EwDetachRefObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetOutlet
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetOutlet
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetOutlet
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetOutlet
</UL>

<P><STRONG><a name="[3be]"></a>EwDiscardGlyph</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ewgfxcore.o(.text.EwDiscardGlyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = EwDiscardGlyph &rArr; DiscardGlyph &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscardGlyph
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
</UL>

<P><STRONG><a name="[3bf]"></a>EwDiscardSignals</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, ewslot.o(.text.EwDiscardSignals))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = EwDiscardSignals &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReclaimMemory
</UL>

<P><STRONG><a name="[3c0]"></a>EwDisposeObservers</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, ewslot.o(.text.EwDisposeObservers))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = EwDisposeObservers &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReclaimMemory
</UL>

<P><STRONG><a name="[3c1]"></a>EwDisposeSignals</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, ewslot.o(.text.EwDisposeSignals))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = EwDisposeSignals &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReclaimMemory
</UL>

<P><STRONG><a name="[3c2]"></a>EwDisposeStrings</STRONG> (Thumb, 566 bytes, Stack size 40 bytes, ewstring.o(.text.EwDisposeStrings))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = EwDisposeStrings &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReclaimMemory
</UL>

<P><STRONG><a name="[3c3]"></a>EwDone</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, ewmain.o(.text.EwDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 2196<LI>Call Chain = EwDone &rArr; EwDoneViewport &rArr; EwEndUpdate &rArr; EwCopyBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReclaimMemory
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneViewport
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneHeap
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGraphicsEngine
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockObject
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_Deinitialize
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspTouchDone
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayDone
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiThread
</UL>

<P><STRONG><a name="[3ca]"></a>EwDoneGfxCore</STRONG> (Thumb, 730 bytes, Stack size 40 bytes, ewgfxcore.o(.text.EwDoneGfxCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 1212<LI>Call Chain = EwDoneGfxCore &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscardSurface
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscardGlyph
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGraphicsEngine
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGfxCore
</UL>

<P><STRONG><a name="[3c6]"></a>EwDoneGraphicsEngine</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, ewgfx.o(.text.EwDoneGraphicsEngine))
<BR><BR>[Stack]<UL><LI>Max Depth = 1236<LI>Call Chain = EwDoneGraphicsEngine &rArr; EwDoneGfxCore &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeSurface
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntDone
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGfxCore
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpDone
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDone
</UL>

<P><STRONG><a name="[3c7]"></a>EwDoneHeap</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ewheap.o(.text.EwDoneHeap))
<BR><BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDone
</UL>

<P><STRONG><a name="[3ac]"></a>EwDoneIssue</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ewgfxcore.o(.text.EwDoneIssue))
<BR><BR>[Stack]<UL><LI>Max Depth = 1204<LI>Call Chain = EwDoneIssue &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillRectangle
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopyBitmap
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTileBitmap
</UL>

<P><STRONG><a name="[3c4]"></a>EwDoneViewport</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, ewgfx.o(.text.EwDoneViewport))
<BR><BR>[Stack]<UL><LI>Max Depth = 2180<LI>Call Chain = EwDoneViewport &rArr; EwEndUpdate &rArr; EwCopyBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxDoneViewport
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDone
</UL>

<P><STRONG><a name="[3cf]"></a>EwDrawBitmapFrame</STRONG> (Thumb, 3038 bytes, Stack size 280 bytes, ewgfx.o(.text.EwDrawBitmapFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 2020<LI>Call Chain = EwDrawBitmapFrame &rArr; EwTileBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPackColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTileBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_DrawBitmapFrame
</UL>

<P><STRONG><a name="[3d1]"></a>EwDrawText</STRONG> (Thumb, 2200 bytes, Stack size 168 bytes, ewgfx.o(.text.EwDrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 1780<LI>Call Chain = EwDrawText &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTextAdvance
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPackColor
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsGlyphAvailable
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeGlyph
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntGetKerning
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorSD
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneIssue
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTaskData
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTask
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_DrawText
</UL>

<P><STRONG><a name="[3d7]"></a>EwEliminateTasks</STRONG> (Thumb, 972 bytes, Stack size 56 bytes, ewgfxtasks.o(.text.EwEliminateTasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EwEliminateTasks &rArr; EwAllocTasks
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTasks
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
</UL>

<P><STRONG><a name="[3eb]"></a>EwEmulateCopy</STRONG> (Thumb, 616 bytes, Stack size 184 bytes, ewgfxdriver.o(.text.EwEmulateCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EwEmulateCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCopyDriver
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBlendDriver
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
</UL>

<P><STRONG><a name="[3e9]"></a>EwEmulateFill</STRONG> (Thumb, 482 bytes, Stack size 160 bytes, ewgfxdriver.o(.text.EwEmulateFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = EwEmulateFill
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxFillDriver
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
</UL>

<P><STRONG><a name="[3d9]"></a>EwEmulateFillPolygon</STRONG> (Thumb, 946 bytes, Stack size 256 bytes, ewgfxdriver.o(.text.EwEmulateFillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = EwEmulateFillPolygon &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RasterPolygonRow_NZW
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RasterPolygonRow_EO
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RasterPolygonRow_AA_NZW
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RasterPolygonRow_AA_EO
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
</UL>

<P><STRONG><a name="[3ea]"></a>EwEmulateLine</STRONG> (Thumb, 252 bytes, Stack size 128 bytes, ewgfxdriver.o(.text.EwEmulateLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = EwEmulateLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
</UL>

<P><STRONG><a name="[3de]"></a>EwEmulateWarp</STRONG> (Thumb, 4416 bytes, Stack size 376 bytes, ewgfxdriver.o(.text.EwEmulateWarp))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = EwEmulateWarp &rArr; GetInterpolationFactor
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInterpolationFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WarpSurface2
</UL>

<P><STRONG><a name="[3cd]"></a>EwEndUpdate</STRONG> (Thumb, 1166 bytes, Stack size 416 bytes, ewgfx.o(.text.EwEndUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 2148<LI>Call Chain = EwEndUpdate &rArr; EwCopyBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopyBitmap
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewPoint
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectNeg
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIntersectRect
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxEndUpdate
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenCopyAlpha8RowSolidBlend
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWaitForSurface
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockSurface
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewColor
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockSurface
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneViewport
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[28f]"></a>EwError</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ewdebug.o(.text.EwError))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReclaimMemory
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitViewport
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAddHeapMemoryPool
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockObject
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetStringChar
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBidi
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadFont
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetFlowTextAdvance
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitSubPath
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreatePath
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBitmap
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyObjObservers
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwRegisterResource
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateTimer
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBitmap
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocHeapBlock
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocVideo
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachRefObserver
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllocString
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSignal
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDecompress
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFillPolygon
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiProcess
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockBitmap
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetGlyphMetrics
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntLoadGlyph
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateGlyph
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateConstSurface
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpInit
</UL>

<P><STRONG><a name="[3e3]"></a>EwErrorDD</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ewdebug.o(.text.EwErrorDD))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = EwErrorDD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBitmap
</UL>

<P><STRONG><a name="[359]"></a>EwErrorPD</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ewdebug.o(.text.EwErrorPD))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwVerifyHeap
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBeginUpdateArea
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBeginUpdate
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockObject
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadFont
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTextAdvance
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillRectangle
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopyBitmap
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDestroyTimer
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeHeapBlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTileBitmap
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockBitmap
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntOpen
</UL>

<P><STRONG><a name="[36a]"></a>EwErrorS</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ewdebug.o(.text.EwErrorS))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = EwErrorS &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpOpen
</UL>

<P><STRONG><a name="[3d6]"></a>EwErrorSD</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ewdebug.o(.text.EwErrorSD))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = EwErrorSD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadFont
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
</UL>

<P><STRONG><a name="[3e4]"></a>EwExecuteTasks</STRONG> (Thumb, 9876 bytes, Stack size 472 bytes, ewgfxtasks.o(.text.EwExecuteTasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 1140 + In Cycle
<LI>Call Chain = EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitColorGradient
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFill
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateCopy
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetColorFromGradient
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateWarp
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateLine
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFillPolygon
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockSurface
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockSurface
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WarpSurface2
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WarpSurface1
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
</UL>

<P><STRONG><a name="[3ec]"></a>EwFill</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ewextrte.o(.text.EwFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwFill
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RasterPolygonRow_NZW
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RasterPolygonRow_EO
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RasterPolygonRow_AA_NZW
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RasterPolygonRow_AA_EO
</UL>

<P><STRONG><a name="[3ed]"></a>EwFillPath</STRONG> (Thumb, 1684 bytes, Stack size 136 bytes, ewgfx.o(.text.EwFillPath))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748<LI>Call Chain = EwFillPath &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePath
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPackColor
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeTaskData
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneIssue
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTaskData
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTask
</UL>
<BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_FillPath
</UL>

<P><STRONG><a name="[3f0]"></a>EwFillRectangle</STRONG> (Thumb, 554 bytes, Stack size 88 bytes, ewgfx.o(.text.EwFillRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = EwFillRectangle &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPackColor
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneIssue
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTaskData
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTask
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_Update
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_FillRectangle
</UL>

<P><STRONG><a name="[ed]"></a>EwFillRowGradient</STRONG> (Thumb, 578 bytes, Stack size 92 bytes, ewextpxl_RGB565.o(.text.EwFillRowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = EwFillRowGradient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.FillWorkers)
</UL>
<P><STRONG><a name="[ee]"></a>EwFillRowGradientBlend</STRONG> (Thumb, 774 bytes, Stack size 72 bytes, ewextpxl_RGB565.o(.text.EwFillRowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EwFillRowGradientBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.FillWorkers)
</UL>
<P><STRONG><a name="[a7]"></a>EwFillRowSolid</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, ewextpxl_RGB565.o(.text.EwFillRowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwFillRowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxFillDriver)
<LI> ewgfxtasks.o(.rodata.FillWorkers)
</UL>
<P><STRONG><a name="[a8]"></a>EwFillRowSolidBlend</STRONG> (Thumb, 490 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwFillRowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwFillRowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxFillDriver)
<LI> ewgfxtasks.o(.rodata.FillWorkers)
</UL>
<P><STRONG><a name="[3f1]"></a>EwFindGlyph</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, ewgfxcore.o(.text.EwFindGlyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 1196<LI>Call Chain = EwFindGlyph &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsGlyphAvailable
</UL>

<P><STRONG><a name="[3f2]"></a>EwFindSurface</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, ewgfxcore.o(.text.EwFindSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 1204<LI>Call Chain = EwFindSurface &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
</UL>

<P><STRONG><a name="[3a8]"></a>EwFlushTasks</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, ewgfxcore.o(.text.EwFlushTasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 1188 + In Cycle
<LI>Call Chain = EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReorderTasks
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEliminateTasks
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanSurfaceCache
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTextAdvance
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopyBitmap
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWaitForSurface
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTileBitmap
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockSurface
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetGlyphMetrics
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneIssue
</UL>

<P><STRONG><a name="[400]"></a>EwFntClose</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewextfnt.o(.text.EwFntClose))
<BR><BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadFont
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeFont
</UL>

<P><STRONG><a name="[3cb]"></a>EwFntDone</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewextfnt.o(.text.EwFntDone))
<BR><BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGraphicsEngine
</UL>

<P><STRONG><a name="[44a]"></a>EwFntGetGlyphMetrics</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, ewextfnt.o(.text.EwFntGetGlyphMetrics))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EwFntGetGlyphMetrics
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
</UL>

<P><STRONG><a name="[3d4]"></a>EwFntGetKerning</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, ewextfnt.o(.text.EwFntGetKerning))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EwFntGetKerning
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTextAdvance
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
</UL>

<P><STRONG><a name="[41d]"></a>EwFntGetMetrics</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ewextfnt.o(.text.EwFntGetMetrics))
<BR><BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadFont
</UL>

<P><STRONG><a name="[41e]"></a>EwFntGetResourceName</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ewextfnt.o(.text.EwFntGetResourceName))
<BR><BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadFont
</UL>

<P><STRONG><a name="[40d]"></a>EwFntInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextfnt.o(.text.EwFntInit))
<BR><BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
</UL>

<P><STRONG><a name="[415]"></a>EwFntIsGlyphAvailable</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, ewextfnt.o(.text.EwFntIsGlyphAvailable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EwFntIsGlyphAvailable
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsGlyphAvailable
</UL>

<P><STRONG><a name="[3f4]"></a>EwFntLoadGlyph</STRONG> (Thumb, 1900 bytes, Stack size 64 bytes, ewextfnt.o(.text.EwFntLoadGlyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = EwFntLoadGlyph &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
</UL>

<P><STRONG><a name="[3f5]"></a>EwFntOpen</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ewextfnt.o(.text.EwFntOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EwFntOpen &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadFont
</UL>

<P><STRONG><a name="[3f6]"></a>EwFormatFloatToAnsiString</STRONG> (Thumb, 1230 bytes, Stack size 104 bytes, ewstring.o(.text.EwFormatFloatToAnsiString))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMove
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewStringFloat
</UL>

<P><STRONG><a name="[3f8]"></a>EwFormatInt64ToAnsiString</STRONG> (Thumb, 716 bytes, Stack size 40 bytes, ewstring.o(.text.EwFormatInt64ToAnsiString))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EwFormatInt64ToAnsiString &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>

<P><STRONG><a name="[3f9]"></a>EwFormatIntToAnsiString</STRONG> (Thumb, 630 bytes, Stack size 32 bytes, ewstring.o(.text.EwFormatIntToAnsiString))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EwFormatIntToAnsiString
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>

<P><STRONG><a name="[3fa]"></a>EwFormatUInt64ToAnsiString</STRONG> (Thumb, 658 bytes, Stack size 32 bytes, ewstring.o(.text.EwFormatUInt64ToAnsiString))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EwFormatUInt64ToAnsiString &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>

<P><STRONG><a name="[3fb]"></a>EwFormatUIntToAnsiString</STRONG> (Thumb, 592 bytes, Stack size 32 bytes, ewstring.o(.text.EwFormatUIntToAnsiString))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EwFormatUIntToAnsiString
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>

<P><STRONG><a name="[338]"></a>EwFree</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextrte.o(.text.EwFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeHeapBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReclaimMemory
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcessSignals
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitViewport
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneViewport
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGraphicsEngine
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockObject
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeBidi
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeFont
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitSubPath
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreePath
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeBitmap
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBitmap
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDestroyTimer
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDeregisterResource
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxDoneViewport
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeVideo
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachRefObserver
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReleaseDecompressBuffers
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDisposeStrings
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDisposeSignals
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDisposeObservers
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDiscardSignals
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFillPolygon
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscardSurface
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscardGlyph
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiProcess
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntLoadGlyph
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGfxCore
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateConstSurface
</UL>

<P><STRONG><a name="[3fd]"></a>EwFreeBidi</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ewgfxbidi.o(.text.EwFreeBidi))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = EwFreeBidi &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText__Done
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
</UL>

<P><STRONG><a name="[3fe]"></a>EwFreeBitmap</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ewgfx.o(.text.EwFreeBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = EwFreeBitmap &rArr; EwFreeSurface &rArr; CleanSurfaceCache &rArr; DiscardSurface &rArr; GfxDestroySurface &rArr; EwFreeVideo &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Done
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_OnSetFrameSize
</UL>

<P><STRONG><a name="[3ff]"></a>EwFreeFont</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ewgfx.o(.text.EwFreeFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = EwFreeFont &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntClose
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont__Done
</UL>

<P><STRONG><a name="[3d5]"></a>EwFreeGlyph</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ewgfxcore.o(.text.EwFreeGlyph))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTextAdvance
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetGlyphMetrics
</UL>

<P><STRONG><a name="[3fc]"></a>EwFreeHeapBlock</STRONG> (Thumb, 748 bytes, Stack size 36 bytes, ewheap.o(.text.EwFreeHeapBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>

<P><STRONG><a name="[401]"></a>EwFreePath</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, ewgfx.o(.text.EwFreePath))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = EwFreePath &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath__Done
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath_SetMaxNoOfSubPaths
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath__Done
</UL>

<P><STRONG><a name="[3b0]"></a>EwFreeSurface</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, ewgfxcore.o(.text.EwFreeSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = EwFreeSurface &rArr; CleanSurfaceCache &rArr; DiscardSurface &rArr; GfxDestroySurface &rArr; EwFreeVideo &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscardSurface
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanSurfaceCache
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGraphicsEngine
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeBitmap
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBitmap
</UL>

<P><STRONG><a name="[3ef]"></a>EwFreeTaskData</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ewgfxcore.o(.text.EwFreeTaskData))
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
</UL>

<P><STRONG><a name="[402]"></a>EwFreeVideo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewgfxdriver.o(.text.EwFreeVideo))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = EwFreeVideo &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxDestroySurface
</UL>

<P><STRONG><a name="[3b9]"></a>EwGetAlpha8SurfaceMemSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ewgfxdriver.o(.text.EwGetAlpha8SurfaceMemSize))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
</UL>

<P><STRONG><a name="[2ae]"></a>EwGetAutoObject</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, ewobject.o(.text.EwGetAutoObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_Initialize
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetAnimated
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAnimated
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetAnimated
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetEnabled
</UL>

<P><STRONG><a name="[3e7]"></a>EwGetColorFromGradient</STRONG> (Thumb, 258 bytes, Stack size 44 bytes, ewgfxdriver.o(.text.EwGetColorFromGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = EwGetColorFromGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
</UL>

<P><STRONG><a name="[403]"></a>EwGetFlowTextAdvance</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ewgfxattrtext.o(.text.EwGetFlowTextAdvance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1516<LI>Call Chain = EwGetFlowTextAdvance &rArr; EwGetTextAdvance &rArr; GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTextAdvance
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringLength
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont_GetFlowTextAdvance
</UL>

<P><STRONG><a name="[404]"></a>EwGetGlyphMetrics</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ewgfx.o(.text.EwGetGlyphMetrics))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468<LI>Call Chain = EwGetGlyphMetrics &rArr; GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeGlyph
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
</UL>

<P><STRONG><a name="[3bc]"></a>EwGetIndex8SurfaceMemSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ewgfxdriver.o(.text.EwGetIndex8SurfaceMemSize))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
</UL>

<P><STRONG><a name="[45b]"></a>EwGetMaxNoOfSubPaths</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ewgfx.o(.text.EwGetMaxNoOfSubPaths))
<BR><BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath_SetMaxNoOfSubPaths
</UL>

<P><STRONG><a name="[3bb]"></a>EwGetNativeSurfaceMemSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwGetNativeSurfaceMemSize))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
</UL>

<P><STRONG><a name="[30a]"></a>EwGetOverlayArea</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, ewgfx.o(.text.EwGetOverlayArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EwGetOverlayArea
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__DoesNeedUpdate
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_BeginUpdate
</UL>

<P><STRONG><a name="[3ba]"></a>EwGetRGB565SurfaceMemSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwGetRGB565SurfaceMemSize))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
</UL>

<P><STRONG><a name="[30c]"></a>EwGetRectArea</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ewrect.o(.text.EwGetRectArea))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_BeginUpdate
</UL>

<P><STRONG><a name="[321]"></a>EwGetRectCenter</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ewrect.o(.text.EwGetRectCenter))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_CursorHitTest
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[304]"></a>EwGetRectH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewrect.o(.text.EwGetRectH))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_ArrangeView
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition_onInitializeIn
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_ArrangeView
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[2ff]"></a>EwGetRectORect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ewrect.o(.text.EwGetRectORect))
<BR><BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_OnSetLayout
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_OnSetOpacity
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_ChangeViewState
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition_onInitializeIn
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_recalculateLayout
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[2f8]"></a>EwGetRectSize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ewrect.o(.text.EwGetRectSize))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_ArrangeView
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetBounds
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_Draw
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_Draw
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition_onInitializeIn
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_ArrangeView
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreOutline_OnSetBounds
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_recalculateLayout
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetBounds
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetBounds
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetBounds
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetBounds
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetBounds
</UL>

<P><STRONG><a name="[303]"></a>EwGetRectW</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewrect.o(.text.EwGetRectW))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_ArrangeView
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetBounds
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition_onInitializeIn
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_ArrangeView
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[405]"></a>EwGetStringChar</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, ewstring.o(.text.EwGetStringChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = EwGetStringChar &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
</UL>

<P><STRONG><a name="[360]"></a>EwGetStringLength</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, ewstring.o(.text.EwGetStringLength))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = EwGetStringLength &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont_ParseFlowString
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont_GetTextAdvance
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetFlowTextAdvance
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_DrawText
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiInit
</UL>

<P><STRONG><a name="[3d2]"></a>EwGetTextAdvance</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, ewgfx.o(.text.EwGetTextAdvance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492<LI>Call Chain = EwGetTextAdvance &rArr; GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsGlyphAvailable
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeGlyph
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntGetKerning
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont_GetTextAdvance
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetFlowTextAdvance
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
</UL>

<P><STRONG><a name="[2e3]"></a>EwGetTicks</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextrte.o(.text.EwGetTicks))
<BR><BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockGetTicks
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcessTimers
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNextTimerExpiration
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspTouchGetEvents
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStartTimer
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetOverlayArea
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_Trigger
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_cursorHoldTimerProc
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DeflectCursor
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyEvent__Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreEvent__Init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreDragEvent__Init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorGrabEvent__Init
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorEvent__Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWatermark2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWatermark1
</UL>

<P><STRONG><a name="[410]"></a>EwGfxTasksInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewgfxtasks.o(.text.EwGfxTasksInit))
<BR><BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
</UL>

<P><STRONG><a name="[28e]"></a>EwImmediateReclaimMemory</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewobject.o(.text.EwImmediateReclaimMemory))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBidi
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadFont
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitSubPath
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreatePath
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwRegisterResource
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateTimer
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBitmap
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocVideo
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachRefObserver
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllocString
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSignal
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDecompress
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFillPolygon
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiProcess
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockBitmap
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntLoadGlyph
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateGlyph
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateConstSurface
</UL>

<P><STRONG><a name="[407]"></a>EwInit</STRONG> (Thumb, 408 bytes, Stack size 72 bytes, ewmain.o(.text.EwInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1892<LI>Call Chain = EwInit &rArr; EwInitGraphicsEngine &rArr; EwLockBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitViewport
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitHeap
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAddHeapMemoryPool
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Initialize
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockObject
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_Initialize
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspTouchInit
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayInit
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockSetTime
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockGetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiThread
</UL>

<P><STRONG><a name="[40f]"></a>EwInitAttrText</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewgfxattrtext.o(.text.EwInitAttrText))
<BR><BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
</UL>

<P><STRONG><a name="[40e]"></a>EwInitBidi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewgfxbidi.o(.text.EwInitBidi))
<BR><BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
</UL>

<P><STRONG><a name="[3e6]"></a>EwInitColorGradient</STRONG> (Thumb, 312 bytes, Stack size 44 bytes, ewgfxdriver.o(.text.EwInitColorGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = EwInitColorGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxFillDriver
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCopyDriver
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBlendDriver
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WarpSurface2
</UL>

<P><STRONG><a name="[40b]"></a>EwInitGfxCore</STRONG> (Thumb, 848 bytes, Stack size 48 bytes, ewgfxcore.o(.text.EwInitGfxCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = EwInitGfxCore &rArr; EwCreateSurface &rArr; FlushAndClean &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGfxCore
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
</UL>

<P><STRONG><a name="[409]"></a>EwInitGraphicsEngine</STRONG> (Thumb, 1030 bytes, Stack size 112 bytes, ewgfx.o(.text.EwInitGraphicsEngine))
<BR><BR>[Stack]<UL><LI>Max Depth = 1820<LI>Call Chain = EwInitGraphicsEngine &rArr; EwLockBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGraphicsEngine
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBitmap
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewPoint
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathRandInt32
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxInitGfx
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockSurface
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockBitmap
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGfxCore
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitBidi
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitAttrText
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGfxTasksInit
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeSurface
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntInit
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntDone
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGfxCore
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpInit
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpDone
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[408]"></a>EwInitHeap</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ewheap.o(.text.EwInitHeap))
<BR><BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[3a9]"></a>EwInitIssue</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, ewgfxcore.o(.text.EwInitIssue))
<BR><BR>[Stack]<UL><LI>Max Depth = 1236<LI>Call Chain = EwInitIssue &rArr; FlushAndClean &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlushAndClean
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillRectangle
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopyBitmap
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTileBitmap
</UL>

<P><STRONG><a name="[413]"></a>EwInitSubPath</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, ewgfx.o(.text.EwInitSubPath))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = EwInitSubPath &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_updatePath
</UL>

<P><STRONG><a name="[40a]"></a>EwInitViewport</STRONG> (Thumb, 324 bytes, Stack size 64 bytes, ewgfx.o(.text.EwInitViewport))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = EwInitViewport &rArr; GfxInitViewport &rArr; EwAllocVideo &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxInitViewport
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[2e9]"></a>EwIntersectRect</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, ewrect.o(.text.EwIntersectRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EwIntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBeginUpdateArea
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateArea
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_CursorHitTest
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_CursorHitTest
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_UpdateCanvas
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_drawContent
</UL>

<P><STRONG><a name="[4bc]"></a>EwIntersectRect2</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, ewrect.o(.text.EwIntersectRect2))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EwIntersectRect2
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_Draw
</UL>

<P><STRONG><a name="[442]"></a>EwIsFloatInf</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ewscalars.o(.text.EwIsFloatInf))
<BR><BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTrace
</UL>

<P><STRONG><a name="[444]"></a>EwIsFloatNaN</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ewscalars.o(.text.EwIsFloatNaN))
<BR><BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTrace
</UL>

<P><STRONG><a name="[35e]"></a>EwIsGlyphAvailable</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ewgfx.o(.text.EwIsGlyphAvailable))
<BR><BR>[Stack]<UL><LI>Max Depth = 1212<LI>Call Chain = EwIsGlyphAvailable &rArr; EwFindGlyph &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntIsGlyphAvailable
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFindGlyph
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTextAdvance
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiApplyShaping
</UL>

<P><STRONG><a name="[311]"></a>EwIsPointInRect</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ewrect.o(.text.EwIsPointInRect))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
</UL>

<P><STRONG><a name="[2ea]"></a>EwIsRectEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ewrect.o(.text.EwIsRectEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBeginUpdateArea
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__DoesNeedUpdate
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateArea
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_CursorHitTest
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_Draw
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_Update
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_CursorHitTest
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_UpdateCanvas
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_BeginUpdate
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_recalculateLayout
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_drawContent
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
</UL>

<P><STRONG><a name="[4b6]"></a>EwIsSlotNull</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ewslot.o(.text.EwIsSlotNull))
<BR><BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetWrapText
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetOnUpdate
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetEllipsis
</UL>

<P><STRONG><a name="[416]"></a>EwLoadBitmap</STRONG> (Thumb, 862 bytes, Stack size 136 bytes, ewgfx.o(.text.EwLoadBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748<LI>Call Chain = EwLoadBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBitmap
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeSurface
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpOpen
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpLoadMappingTable
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpGetMetrics
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpGetFrameMetrics
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpGetFrameMemory
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpClose
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Init
</UL>

<P><STRONG><a name="[41c]"></a>EwLoadFont</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, ewgfx.o(.text.EwLoadFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EwLoadFont &rArr; EwFntOpen &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntOpen
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntGetResourceName
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntGetMetrics
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntClose
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorSD
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont__Init
</UL>

<P><STRONG><a name="[29e]"></a>EwLoadResource</STRONG> (Thumb, 502 bytes, Stack size 44 bytes, ewresource.o(.text.EwLoadResource))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = EwLoadResource &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_Medium__Init
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetSwitch_Medium__Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_Medium__Init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_Medium__Init
</UL>

<P><STRONG><a name="[2a6]"></a>EwLoadString</STRONG> (Thumb, 946 bytes, Stack size 48 bytes, ewstring.o(.text.EwLoadString))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDecompress
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAdaptByteOrder2
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas__DetachBitmap
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas__AttachBitmap
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetFocus
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_Warp3D
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap_OnSetFrameSize
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_WarpBitmap
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_ScaleBitmap
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_OnSetFrameSize
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_RemoveFader
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_AddFader
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_CancelTask
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__Init
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_RestackTop
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onFormatValue
</UL>

<P><STRONG><a name="[412]"></a>EwLockBitmap</STRONG> (Thumb, 326 bytes, Stack size 96 bytes, ewgfx.o(.text.EwLockBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 1708<LI>Call Chain = EwLockBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockSurface
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockSurface
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
</UL>

<P><STRONG><a name="[41f]"></a>EwLockGlyphCache</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, ewgfxcore.o(.text.EwLockGlyphCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 1308<LI>Call Chain = EwLockGlyphCache &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
</UL>

<P><STRONG><a name="[331]"></a>EwLockObject</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, ewobject.o(.text.EwLockObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EwLockObject &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_Initialize
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
</UL>

<P><STRONG><a name="[33b]"></a>EwLockSurface</STRONG> (Thumb, 502 bytes, Stack size 80 bytes, ewgfxcore.o(.text.EwLockSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxLockSurface
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFrameGrid
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockGlyphCache
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockBitmap
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WarpSurface2
</UL>

<P><STRONG><a name="[43a]"></a>EwMarkSignals</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, ewslot.o(.text.EwMarkSignals))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwMarkSignals
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReclaimMemory
</UL>

<P><STRONG><a name="[346]"></a>EwMathCos</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ewextrte.o(.text.EwMathCos))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EwMathCos &rArr; __hardfp_cosf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix_Rotate
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_updatePath
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAddSubPathArc
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
</UL>

<P><STRONG><a name="[345]"></a>EwMathPow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextrte.o(.text.EwMathPow))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EwMathPow &rArr; __hardfp_powf
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
</UL>

<P><STRONG><a name="[411]"></a>EwMathRandInt32</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ewextrte.o(.text.EwMathRandInt32))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwMathRandInt32 &rArr; EwBspClockGetTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockGetTime
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWatermark2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateWatermark1
</UL>

<P><STRONG><a name="[347]"></a>EwMathSin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ewextrte.o(.text.EwMathSin))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwMathSin &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix_Rotate
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_updatePath
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAddSubPathArc
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
</UL>

<P><STRONG><a name="[348]"></a>EwMathSqrt</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ewextrte.o(.text.EwMathSqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwMathSqrt &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_updatePath
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
</UL>

<P><STRONG><a name="[3f7]"></a>EwMove</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ewextrte.o(.text.EwMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatFloatToAnsiString
</UL>

<P><STRONG><a name="[302]"></a>EwMovePointNeg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ewpoint.o(.text.EwMovePointNeg))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_Draw
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_Draw
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_CursorHitTest
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_cursorHoldTimerProc
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchMovement
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DeflectCursor
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreOutline_OnSetBounds
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetBounds
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetBounds
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetBounds
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetBounds
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetBounds
</UL>

<P><STRONG><a name="[2f0]"></a>EwMovePointPos</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ewpoint.o(.text.EwMovePointPos))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_Draw
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Draw
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_cursorHoldTimerProc
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_UpdateCanvas
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchMovement
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DeflectCursor
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_MoveView
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[2eb]"></a>EwMoveRectNeg</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ewrect.o(.text.EwMoveRectNeg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwMoveRectNeg
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_CursorHitTest
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_UpdateCanvas
</UL>

<P><STRONG><a name="[2f5]"></a>EwMoveRectPos</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ewrect.o(.text.EwMoveRectPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwMoveRectPos
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_Draw
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_MoveView
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateArea
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_Draw
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_Draw
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_Draw
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_Draw
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_Draw
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_RetargetCursorWithReason
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_drawContent
</UL>

<P><STRONG><a name="[317]"></a>EwNegPoint</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ewpoint.o(.text.EwNegPoint))
<BR><BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_UpdateCanvas
</UL>

<P><STRONG><a name="[3e0]"></a>EwNewColor</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ewcolor.o(.text.EwNewColor))
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
</UL>

<P><STRONG><a name="[293]"></a>EwNewObjectIndirect</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, ewobject.o(.text.EwNewObjectIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_initLayoutContext
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen_UpdateViewMenu
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings_UpdateViewDebug
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings_UpdateViewCalibration
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewSettings
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewDistance
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewDetector
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu_UpdateViewCurrent
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationApplication__Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_update
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_Warp3D
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition_CreatePresentFader
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition_CreateOverlayFader
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition_CreateDismissFader
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_CursorHitTest
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_cursorHoldTimerProc
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchMovement
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DeflectCursor
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_initLayoutContext
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[305]"></a>EwNewPoint</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ewpoint.o(.text.EwNewPoint))
<BR><BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_ArrangeView
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_update
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_Warp3D
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_CursorHitTest
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_ArrangeView
</UL>

<P><STRONG><a name="[306]"></a>EwNewRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ewrect.o(.text.EwNewRect))
<BR><BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneViewport
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBeginUpdateArea
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_ArrangeView
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetOverlayArea
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_GetExtent
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePath
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[2fa]"></a>EwNewRect2Point</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ewrect.o(.text.EwNewRect2Point))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Initialize
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_update
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_Warp3D
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_Draw
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_Draw
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_Update
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_DrawBitmapFrame
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_UpdateCanvas
</UL>

<P><STRONG><a name="[2b6]"></a>EwNewRef</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewref.o(.text.EwNewRef))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__UpdateDistance
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__UpdateCurrent
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__UpdateAngle
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass_OnSetLamptest
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>

<P><STRONG><a name="[2ac]"></a>EwNewSlot</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ewslot.o(.text.EwNewSlot))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetPrecision
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetOutlet
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetAppearance
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton__Init
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetOutlet
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetAppearance
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton__Init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar__Init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetOutlet
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetMaxValue
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetAppearance
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge__Init
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetOutlet
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetMaxValue
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetCurrentValue
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetAppearance
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetWidgetMinSize
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftThickness
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftRoundedStart
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftRadius
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftColor
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetSwingElastic
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetSwingDuration
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetScale
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedlePivot
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedleMinAngle
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedleMaxAngle
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedle
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetCenterOffset
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_OnSetLayout
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_ChangeViewState
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetSourceAnchor
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint4
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint3
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint2
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint1
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_timerSlot
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_observerSlot
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetBitmap
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetAnimated
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_preReparseSlot
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetWrapText
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetEnableBidiText
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetEllipsis
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetBounds
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetAlignment
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_timerSlot
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAnimated
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_timerSlot
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetBitmap
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetAnimated
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetPath
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath_SetMaxNoOfSubPaths
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_updatePath
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetStyle
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetStartAngle
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetRadius
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetInnerRadius
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetEndAngle
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition_CreatePresentFader
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_timerSlot
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetEnabled
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_ChangeViewState
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask_Complete
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_onPreDispatchNext3
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_onPreDispatchNext2
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_onPreDispatchNext1
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_CancelTask
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_OnSetBounds
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint4
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint3
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint2
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint1
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreOutline_OnSetBounds
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_RestackTop
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onOutlet
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onConfigChanged
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_Medium__Init
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetSwitch_Medium__Init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_Medium__Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onOutlet
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onConfigChanged
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_Medium__Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onOutlet
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onConfigChanged
</UL>

<P><STRONG><a name="[428]"></a>EwNewStringChar</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, ewstring.o(.text.EwNewStringChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = EwNewStringChar &rArr; AllocString &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllocString
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
</UL>

<P><STRONG><a name="[429]"></a>EwNewStringFloat</STRONG> (Thumb, 226 bytes, Stack size 152 bytes, ewstring.o(.text.EwNewStringFloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = EwNewStringFloat &rArr; AllocString &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllocString
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatFloatToAnsiString
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onFormatValue
</UL>

<P><STRONG><a name="[42a]"></a>EwNextTimerExpiration</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, ewtimer.o(.text.EwNextTimerExpiration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwNextTimerExpiration
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[340]"></a>EwNotifyObjObservers</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, ewslot.o(.text.EwNotifyObjObservers))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EwNotifyObjObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSignal
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath_onUpdate
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffectTimerClass_Trigger
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetWidgetConfig_onInvalidate
</UL>

<P><STRONG><a name="[2be]"></a>EwNotifyRefObservers</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ewslot.o(.text.EwNotifyRefObservers))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSignal
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__UpdateDistance
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__UpdateCurrent
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__UpdateAngle
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass_OnSetLamptest
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseTouch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseKey
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onPressTouch
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onPressKey
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onFlashTimer
</UL>

<P><STRONG><a name="[4d3]"></a>EwOnGetBool</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewref.o(.text.EwOnGetBool))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onOutlet
</UL>

<P><STRONG><a name="[4cc]"></a>EwOnGetInt32</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewref.o(.text.EwOnGetInt32))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onOutlet
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onOutlet
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onOutlet
</UL>

<P><STRONG><a name="[4d2]"></a>EwOnSetBool</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewref.o(.text.EwOnSetBool))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseTouch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onReleaseKey
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onPressTouch
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onPressKey
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_onFlashTimer
</UL>

<P><STRONG><a name="[3a7]"></a>EwPackColor</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwPackColor))
<BR><BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillRectangle
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawBitmapFrame
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopyBitmap
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTileBitmap
</UL>

<P><STRONG><a name="[290]"></a>EwPanic</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ewextrte.o(.text.EwPanic))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockObject
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockObject
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetStringChar
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwRegisterResource
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDestroyTimer
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateTimer
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCastObject
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_RetargetCursorWithReason
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DeflectCursor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_BeginUpdate
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachRefObserver
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSignal
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDecompress
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntOpen
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpOpen
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpInit
</UL>

<P><STRONG><a name="[42b]"></a>EwParseFlowString</STRONG> (Thumb, 1794 bytes, Stack size 128 bytes, ewgfxattrtext.o(.text.EwParseFlowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 1596<LI>Call Chain = EwParseFlowString &rArr; EwGetGlyphMetrics &rArr; GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringLength
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopy
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewStringChar
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiReorderChars
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiProcess
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiMirrorGlyphs
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiInit
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiGetCharLevel
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiCompleteRow
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiApplyShaping
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsGlyphAvailable
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetGlyphMetrics
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntGetKerning
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont_ParseFlowString
</UL>

<P><STRONG><a name="[2e5]"></a>EwPostSignal</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ewslot.o(.text.EwPostSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddSignal
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetPrecision
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetOutlet
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetAppearance
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetOutlet
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetAppearance
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetAppearance
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetOutlet
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetMaxValue
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_OnSetAppearance
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetOutlet
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetMaxValue
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetCurrentValue
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_OnSetAppearance
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetWidgetMinSize
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftThickness
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftRoundedStart
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftRadius
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetTrackLeftColor
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetSwingElastic
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetSwingDuration
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetScale
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedlePivot
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedleMinAngle
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedleMaxAngle
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetNeedle
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig_OnSetCenterOffset
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_OnSetLayout
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_ChangeViewState
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetSourceAnchor
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint4
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint3
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint2
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetPoint1
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_observerSlot
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetAnimated
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_preReparseSlot
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_preOnUpdateSlot
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetWrapText
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetEnableBidiText
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetEllipsis
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetBounds
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetAlignment
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAnimated
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetAnimated
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath_SetMaxNoOfSubPaths
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_updatePath
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetStyle
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetStartAngle
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetRadius
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetInnerRadius
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetEndAngle
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_OnComplete
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_OnCancel
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetEnabled
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_RemoveFader
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_ChangeViewState
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask_Complete
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_onPreDispatchNext3
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_onPreDispatchNext2
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_onPreDispatchNext1
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_CancelTask
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_OnSetBounds
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint4
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint3
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint2
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint1
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreOutline_OnSetBounds
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_RestackTop
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onOutlet
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onConfigChanged
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_Medium__Init
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetSwitch_Medium__Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onReleaseTouch
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_onReleaseKey
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_Medium__Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onOutlet
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_onConfigChanged
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_Medium__Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onOutlet
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_onConfigChanged
</UL>

<P><STRONG><a name="[2df]"></a>EwPrint</STRONG> (Thumb, 1560 bytes, Stack size 136 bytes, ewdebug.o(.text.EwPrint))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopy
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwConsoleOutput
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatUIntToAnsiString
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatUInt64ToAnsiString
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatIntToAnsiString
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatInt64ToAnsiString
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFormatFloatToAnsiString
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrintSystemInfo
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDone
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayInit
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTrace
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_RetargetCursorWithReason
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DeflectCursor
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_BeginUpdate
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxInitViewport
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBeginUpdateArea
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorS
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorSD
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorDD
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>

<P><STRONG><a name="[430]"></a>EwPrintSystemInfo</STRONG> (Thumb, 528 bytes, Stack size 16 bytes, ewmain.o(.text.EwPrintSystemInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EwPrintSystemInfo &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiThread
</UL>

<P><STRONG><a name="[431]"></a>EwProcess</STRONG> (Thumb, 430 bytes, Stack size 80 bytes, ewmain.o(.text.EwProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 2228<LI>Call Chain = EwProcess &rArr; EwEndUpdate &rArr; EwCopyBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas__DetachBitmap
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas__AttachBitmap
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwVerifyHeap
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReclaimMemory
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcessTimers
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcessSignals
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNextTimerExpiration
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBeginUpdateArea
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBeginUpdate
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__UpdateGE20
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__UpdateCanvas
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__GetUpdateRegion
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__EndUpdate
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__DriveMultiTouchMovement
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__DriveMultiTouchHitting
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__DoesNeedUpdate
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__BeginUpdate
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_ProcessData
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspTouchGetEvents
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspEventWait
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayGetUpdateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiThread
</UL>

<P><STRONG><a name="[433]"></a>EwProcessSignals</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ewslot.o(.text.EwProcessSignals))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = EwProcessSignals &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[432]"></a>EwProcessTimers</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, ewtimer.o(.text.EwProcessTimers))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EwProcessTimers
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[3c5]"></a>EwReclaimMemory</STRONG> (Thumb, 908 bytes, Stack size 40 bytes, ewobject.o(.text.EwReclaimMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = EwReclaimMemory &rArr; EwDisposeStrings &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReleaseDecompressBuffers
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMarkSignals
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDisposeStrings
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDisposeSignals
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDisposeObservers
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDiscardSignals
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDone
</UL>

<P><STRONG><a name="[308]"></a>EwRegisterResource</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, ewresource.o(.text.EwRegisterResource))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = EwRegisterResource &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__Init
</UL>

<P><STRONG><a name="[43b]"></a>EwReleaseDecompressBuffers</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ewresource.o(.text.EwReleaseDecompressBuffers))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = EwReleaseDecompressBuffers &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwReclaimMemory
</UL>

<P><STRONG><a name="[3f3]"></a>EwReorderTasks</STRONG> (Thumb, 612 bytes, Stack size 36 bytes, ewgfxtasks.o(.text.EwReorderTasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwReorderTasks
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
</UL>

<P><STRONG><a name="[313]"></a>EwResetTimer</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ewtimer.o(.text.EwResetTimer))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Init
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_Trigger
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetPeriod
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetBegin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_cursorHoldTimerProc
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
</UL>

<P><STRONG><a name="[e8]"></a>EwScreenCopyAlpha8RowGradient</STRONG> (Thumb, 436 bytes, Stack size 48 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyAlpha8RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwScreenCopyAlpha8RowGradient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[e9]"></a>EwScreenCopyAlpha8RowGradientBlend</STRONG> (Thumb, 604 bytes, Stack size 64 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyAlpha8RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwScreenCopyAlpha8RowGradientBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[9c]"></a>EwScreenCopyAlpha8RowSolid</STRONG> (Thumb, 548 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyAlpha8RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwScreenCopyAlpha8RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[90]"></a>EwScreenCopyAlpha8RowSolidBlend</STRONG> (Thumb, 818 bytes, Stack size 52 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyAlpha8RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EwScreenCopyAlpha8RowSolidBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[a2]"></a>EwScreenCopyIndex8Row</STRONG> (Thumb, 498 bytes, Stack size 28 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyIndex8Row))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EwScreenCopyIndex8Row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
</UL>
<P><STRONG><a name="[96]"></a>EwScreenCopyIndex8RowBlend</STRONG> (Thumb, 714 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwScreenCopyIndex8RowBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
</UL>
<P><STRONG><a name="[e6]"></a>EwScreenCopyIndex8RowGradient</STRONG> (Thumb, 640 bytes, Stack size 40 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EwScreenCopyIndex8RowGradient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[e7]"></a>EwScreenCopyIndex8RowGradientBlend</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EwScreenCopyIndex8RowGradientBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[a1]"></a>EwScreenCopyIndex8RowSolid</STRONG> (Thumb, 564 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwScreenCopyIndex8RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[95]"></a>EwScreenCopyIndex8RowSolidBlend</STRONG> (Thumb, 810 bytes, Stack size 40 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyIndex8RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EwScreenCopyIndex8RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[a0]"></a>EwScreenCopyNativeRow</STRONG> (Thumb, 470 bytes, Stack size 24 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyNativeRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EwScreenCopyNativeRow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
</UL>
<P><STRONG><a name="[94]"></a>EwScreenCopyNativeRowBlend</STRONG> (Thumb, 674 bytes, Stack size 32 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EwScreenCopyNativeRowBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
</UL>
<P><STRONG><a name="[e4]"></a>EwScreenCopyNativeRowGradient</STRONG> (Thumb, 592 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwScreenCopyNativeRowGradient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[e5]"></a>EwScreenCopyNativeRowGradientBlend</STRONG> (Thumb, 846 bytes, Stack size 48 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwScreenCopyNativeRowGradientBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[9f]"></a>EwScreenCopyNativeRowSolid</STRONG> (Thumb, 528 bytes, Stack size 32 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EwScreenCopyNativeRowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[93]"></a>EwScreenCopyNativeRowSolidBlend</STRONG> (Thumb, 732 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyNativeRowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwScreenCopyNativeRowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[a4]"></a>EwScreenCopyRGB565Row</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyRGB565Row))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwScreenCopyRGB565Row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
</UL>
<P><STRONG><a name="[ea]"></a>EwScreenCopyRGB565RowGradient</STRONG> (Thumb, 420 bytes, Stack size 28 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyRGB565RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EwScreenCopyRGB565RowGradient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[eb]"></a>EwScreenCopyRGB565RowGradientBlend</STRONG> (Thumb, 586 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyRGB565RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwScreenCopyRGB565RowGradientBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[a3]"></a>EwScreenCopyRGB565RowSolid</STRONG> (Thumb, 364 bytes, Stack size 20 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyRGB565RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EwScreenCopyRGB565RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxCopyDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[92]"></a>EwScreenCopyRGB565RowSolidBlend</STRONG> (Thumb, 470 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwScreenCopyRGB565RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwScreenCopyRGB565RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxBlendDriver)
<LI> ewgfxtasks.o(.rodata.CopyWorkers)
</UL>
<P><STRONG><a name="[ef]"></a>EwScreenFillRowGradient</STRONG> (Thumb, 752 bytes, Stack size 96 bytes, ewextpxl_RGB565.o(.text.EwScreenFillRowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EwScreenFillRowGradient
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.FillWorkers)
</UL>
<P><STRONG><a name="[f0]"></a>EwScreenFillRowGradientBlend</STRONG> (Thumb, 426 bytes, Stack size 56 bytes, ewextpxl_RGB565.o(.text.EwScreenFillRowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwScreenFillRowGradientBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.FillWorkers)
</UL>
<P><STRONG><a name="[a5]"></a>EwScreenFillRowSolid</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, ewextpxl_RGB565.o(.text.EwScreenFillRowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwScreenFillRowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxFillDriver)
<LI> ewgfxtasks.o(.rodata.FillWorkers)
</UL>
<P><STRONG><a name="[a6]"></a>EwScreenFillRowSolidBlend</STRONG> (Thumb, 482 bytes, Stack size 44 bytes, ewextpxl_RGB565.o(.text.EwScreenFillRowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = EwScreenFillRowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewextgfx.o(.text.GfxFillDriver)
<LI> ewgfxtasks.o(.rodata.FillWorkers)
</UL>
<P><STRONG><a name="[88]"></a>EwScreenSetPixelSolid</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ewextpxl_RGB565.o(.text.EwScreenSetPixelSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwScreenSetPixelSolid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.text.EwExecuteTasks)
</UL>
<P><STRONG><a name="[89]"></a>EwScreenSetPixelSolidBlend</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, ewextpxl_RGB565.o(.text.EwScreenSetPixelSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EwScreenSetPixelSolidBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.text.EwExecuteTasks)
</UL>
<P><STRONG><a name="[139]"></a>EwScreenWarpAlpha8RowFilterGradient</STRONG> (Thumb, 700 bytes, Stack size 116 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = EwScreenWarpAlpha8RowFilterGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpAlpha8RowFilterSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[13a]"></a>EwScreenWarpAlpha8RowFilterGradientBlend</STRONG> (Thumb, 786 bytes, Stack size 104 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EwScreenWarpAlpha8RowFilterGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpAlpha8RowFilterSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[137]"></a>EwScreenWarpAlpha8RowFilterSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = EwScreenWarpAlpha8RowFilterSolid &rArr; EwScreenWarpAlpha8RowFilterGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpAlpha8RowFilterGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[138]"></a>EwScreenWarpAlpha8RowFilterSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowFilterSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EwScreenWarpAlpha8RowFilterSolidBlend &rArr; EwScreenWarpAlpha8RowFilterGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpAlpha8RowFilterGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[135]"></a>EwScreenWarpAlpha8RowGradient</STRONG> (Thumb, 612 bytes, Stack size 100 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = EwScreenWarpAlpha8RowGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpAlpha8RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[136]"></a>EwScreenWarpAlpha8RowGradientBlend</STRONG> (Thumb, 658 bytes, Stack size 104 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EwScreenWarpAlpha8RowGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpAlpha8RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[133]"></a>EwScreenWarpAlpha8RowSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = EwScreenWarpAlpha8RowSolid &rArr; EwScreenWarpAlpha8RowGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpAlpha8RowGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[134]"></a>EwScreenWarpAlpha8RowSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpAlpha8RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EwScreenWarpAlpha8RowSolidBlend &rArr; EwScreenWarpAlpha8RowGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpAlpha8RowGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[127]"></a>EwScreenWarpIndex8Row</STRONG> (Thumb, 802 bytes, Stack size 44 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8Row))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = EwScreenWarpIndex8Row
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[128]"></a>EwScreenWarpIndex8RowBlend</STRONG> (Thumb, 502 bytes, Stack size 52 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EwScreenWarpIndex8RowBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[12d]"></a>EwScreenWarpIndex8RowFilter</STRONG> (Thumb, 314 bytes, Stack size 60 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwScreenWarpIndex8RowFilter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[12e]"></a>EwScreenWarpIndex8RowFilterBlend</STRONG> (Thumb, 336 bytes, Stack size 56 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwScreenWarpIndex8RowFilterBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[131]"></a>EwScreenWarpIndex8RowFilterGradient</STRONG> (Thumb, 484 bytes, Stack size 80 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EwScreenWarpIndex8RowFilterGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpIndex8RowFilterSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[132]"></a>EwScreenWarpIndex8RowFilterGradientBlend</STRONG> (Thumb, 502 bytes, Stack size 76 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EwScreenWarpIndex8RowFilterGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpIndex8RowFilterSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[12f]"></a>EwScreenWarpIndex8RowFilterSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EwScreenWarpIndex8RowFilterSolid &rArr; EwScreenWarpIndex8RowFilterGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpIndex8RowFilterGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[130]"></a>EwScreenWarpIndex8RowFilterSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowFilterSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EwScreenWarpIndex8RowFilterSolidBlend &rArr; EwScreenWarpIndex8RowFilterGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpIndex8RowFilterGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[12b]"></a>EwScreenWarpIndex8RowGradient</STRONG> (Thumb, 346 bytes, Stack size 64 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwScreenWarpIndex8RowGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpIndex8RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[12c]"></a>EwScreenWarpIndex8RowGradientBlend</STRONG> (Thumb, 348 bytes, Stack size 64 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwScreenWarpIndex8RowGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpIndex8RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[129]"></a>EwScreenWarpIndex8RowSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwScreenWarpIndex8RowSolid &rArr; EwScreenWarpIndex8RowGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpIndex8RowGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[12a]"></a>EwScreenWarpIndex8RowSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpIndex8RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwScreenWarpIndex8RowSolidBlend &rArr; EwScreenWarpIndex8RowGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpIndex8RowGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[11b]"></a>EwScreenWarpNativeRow</STRONG> (Thumb, 736 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwScreenWarpNativeRow
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[11c]"></a>EwScreenWarpNativeRowBlend</STRONG> (Thumb, 498 bytes, Stack size 44 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = EwScreenWarpNativeRowBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[121]"></a>EwScreenWarpNativeRowFilter</STRONG> (Thumb, 294 bytes, Stack size 56 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwScreenWarpNativeRowFilter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[122]"></a>EwScreenWarpNativeRowFilterBlend</STRONG> (Thumb, 318 bytes, Stack size 56 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwScreenWarpNativeRowFilterBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[125]"></a>EwScreenWarpNativeRowFilterGradient</STRONG> (Thumb, 462 bytes, Stack size 76 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EwScreenWarpNativeRowFilterGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpNativeRowFilterSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[126]"></a>EwScreenWarpNativeRowFilterGradientBlend</STRONG> (Thumb, 492 bytes, Stack size 72 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EwScreenWarpNativeRowFilterGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpNativeRowFilterSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[123]"></a>EwScreenWarpNativeRowFilterSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EwScreenWarpNativeRowFilterSolid &rArr; EwScreenWarpNativeRowFilterGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpNativeRowFilterGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[124]"></a>EwScreenWarpNativeRowFilterSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowFilterSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EwScreenWarpNativeRowFilterSolidBlend &rArr; EwScreenWarpNativeRowFilterGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpNativeRowFilterGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[11f]"></a>EwScreenWarpNativeRowGradient</STRONG> (Thumb, 304 bytes, Stack size 52 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EwScreenWarpNativeRowGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpNativeRowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[120]"></a>EwScreenWarpNativeRowGradientBlend</STRONG> (Thumb, 346 bytes, Stack size 60 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwScreenWarpNativeRowGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpNativeRowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[11d]"></a>EwScreenWarpNativeRowSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EwScreenWarpNativeRowSolid &rArr; EwScreenWarpNativeRowGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpNativeRowGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[11e]"></a>EwScreenWarpNativeRowSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpNativeRowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwScreenWarpNativeRowSolidBlend &rArr; EwScreenWarpNativeRowGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpNativeRowGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[13b]"></a>EwScreenWarpRGB565Row</STRONG> (Thumb, 332 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpRGB565Row))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwScreenWarpRGB565Row
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[140]"></a>EwScreenWarpRGB565RowFilter</STRONG> (Thumb, 700 bytes, Stack size 56 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwScreenWarpRGB565RowFilter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[143]"></a>EwScreenWarpRGB565RowFilterGradient</STRONG> (Thumb, 466 bytes, Stack size 68 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = EwScreenWarpRGB565RowFilterGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpRGB565RowFilterSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[144]"></a>EwScreenWarpRGB565RowFilterGradientBlend</STRONG> (Thumb, 482 bytes, Stack size 64 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwScreenWarpRGB565RowFilterGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpRGB565RowFilterSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[141]"></a>EwScreenWarpRGB565RowFilterSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = EwScreenWarpRGB565RowFilterSolid &rArr; EwScreenWarpRGB565RowFilterGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpRGB565RowFilterGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[142]"></a>EwScreenWarpRGB565RowFilterSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowFilterSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwScreenWarpRGB565RowFilterSolidBlend &rArr; EwScreenWarpRGB565RowFilterGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpRGB565RowFilterGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[13e]"></a>EwScreenWarpRGB565RowGradient</STRONG> (Thumb, 746 bytes, Stack size 60 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwScreenWarpRGB565RowGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpRGB565RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[13f]"></a>EwScreenWarpRGB565RowGradientBlend</STRONG> (Thumb, 768 bytes, Stack size 60 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwScreenWarpRGB565RowGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpRGB565RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[13c]"></a>EwScreenWarpRGB565RowSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwScreenWarpRGB565RowSolid &rArr; EwScreenWarpRGB565RowGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpRGB565RowGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[13d]"></a>EwScreenWarpRGB565RowSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwScreenWarpRGB565RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwScreenWarpRGB565RowSolidBlend &rArr; EwScreenWarpRGB565RowGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwScreenWarpRGB565RowGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[2e6]"></a>EwSetContains</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ewscalars.o(.text.EwSetContains))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_BroadcastEvent
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FindSiblingView
</UL>

<P><STRONG><a name="[86]"></a>EwSetPixelSolid</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ewextpxl_RGB565.o(.text.EwSetPixelSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwSetPixelSolid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.text.EwExecuteTasks)
</UL>
<P><STRONG><a name="[87]"></a>EwSetPixelSolidBlend</STRONG> (Thumb, 192 bytes, Stack size 20 bytes, ewextpxl_RGB565.o(.text.EwSetPixelSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EwSetPixelSolidBlend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.text.EwExecuteTasks)
</UL>
<P><STRONG><a name="[4ce]"></a>EwSetPointX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ewpoint.o(.text.EwSetPointX))
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[4ab]"></a>EwSetRectH</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ewrect.o(.text.EwSetRectH))
<BR><BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
</UL>

<P><STRONG><a name="[351]"></a>EwSetRectOrigin</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ewrect.o(.text.EwSetRectOrigin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwSetRectOrigin
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader_OnStart
</UL>

<P><STRONG><a name="[4a9]"></a>EwSetRectSize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ewrect.o(.text.EwSetRectSize))
<BR><BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
</UL>

<P><STRONG><a name="[4aa]"></a>EwSetRectW</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ewrect.o(.text.EwSetRectW))
<BR><BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
</UL>

<P><STRONG><a name="[4ac]"></a>EwSetRectX</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ewrect.o(.text.EwSetRectX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwSetRectX
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
</UL>

<P><STRONG><a name="[4ad]"></a>EwSetRectY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ewrect.o(.text.EwSetRectY))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwSetRectY
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
</UL>

<P><STRONG><a name="[43c]"></a>EwSetStringChar</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, ewstring.o(.text.EwSetStringChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = EwSetStringChar &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllocString
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
</UL>

<P><STRONG><a name="[43d]"></a>EwShareString</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ewstring.o(.text.EwShareString))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = EwShareString &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_OnSetUnit
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_OnSetLabel
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_OnSetLabel
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onFormatValue
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_Medium__Init
</UL>

<P><STRONG><a name="[301]"></a>EwSignal</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ewslot.o(.text.EwSignal))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetBitmap
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_OnStart
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_timerSlot
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_run
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_Trigger
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_HandleEvent
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler_HandleEvent
</UL>

<P><STRONG><a name="[314]"></a>EwStartTimer</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, ewtimer.o(.text.EwStartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EwStartTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Init
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_Trigger
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetPeriod
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetBegin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_cursorHoldTimerProc
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_DriveMultiTouchHitting
</UL>

<P><STRONG><a name="[43e]"></a>EwStringFindChar</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, ewstring.o(.text.EwStringFindChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = EwStringFindChar &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
</UL>

<P><STRONG><a name="[43f]"></a>EwStringMiddle</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, ewstring.o(.text.EwStringMiddle))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = EwStringMiddle &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllocString
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
</UL>

<P><STRONG><a name="[440]"></a>EwStringRemove</STRONG> (Thumb, 360 bytes, Stack size 32 bytes, ewstring.o(.text.EwStringRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EwStringRemove &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyString
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllocString
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_onFormatValue
</UL>

<P><STRONG><a name="[2e4]"></a>EwThrow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ewdebug.o(.text.EwThrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EwThrow &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas__DetachBitmap
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas__AttachBitmap
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_SwitchToDialog
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_PresentDialog
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetFocus
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_DismissDialog
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_Warp3D
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap_OnSetFrameSize
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_OnSetFrameSize
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_RemoveFader
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFaderTask_AddFader
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue_CancelTask
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__Init
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_RestackTop
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_FadeGroup
</UL>

<P><STRONG><a name="[3d0]"></a>EwTileBitmap</STRONG> (Thumb, 906 bytes, Stack size 128 bytes, ewgfx.o(.text.EwTileBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = EwTileBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPackColor
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneIssue
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTaskData
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTask
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawBitmapFrame
</UL>

<P><STRONG><a name="[441]"></a>EwTrace</STRONG> (Thumb, 1396 bytes, Stack size 104 bytes, ewdebug.o(.text.EwTrace))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = EwTrace &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsFloatNaN
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsFloatInf
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_WarpBitmap
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_ScaleBitmap
</UL>

<P><STRONG><a name="[30b]"></a>EwUnionRect</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, ewrect.o(.text.EwUnionRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EwUnionRect
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_InvalidateArea
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_UpdateCanvas
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_BeginUpdate
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdatePath
</UL>

<P><STRONG><a name="[445]"></a>EwUnlockGlyphCache</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ewgfxcore.o(.text.EwUnlockGlyphCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwUnlockGlyphCache &rArr; EwUnlockSurface
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
</UL>

<P><STRONG><a name="[32b]"></a>EwUnlockObject</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, ewobject.o(.text.EwUnlockObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = EwUnlockObject &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_Deinitialize
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDone
</UL>

<P><STRONG><a name="[33d]"></a>EwUnlockSurface</STRONG> (Thumb, 330 bytes, Stack size 56 bytes, ewgfxcore.o(.text.EwUnlockSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwUnlockSurface
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxUnlockSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFrameGrid
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockGlyphCache
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockBitmap
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WarpSurface2
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WarpSurface1
</UL>

<P><STRONG><a name="[439]"></a>EwVerifyHeap</STRONG> (Thumb, 594 bytes, Stack size 48 bytes, ewheap.o(.text.EwVerifyHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = EwVerifyHeap &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[3e1]"></a>EwWaitForSurface</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, ewgfxcore.o(.text.EwWaitForSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 1220<LI>Call Chain = EwWaitForSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
</UL>

<P><STRONG><a name="[10f]"></a>EwWarpAlpha8RowFilterGradient</STRONG> (Thumb, 588 bytes, Stack size 80 bytes, ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EwWarpAlpha8RowFilterGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpAlpha8RowFilterSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[110]"></a>EwWarpAlpha8RowFilterGradientBlend</STRONG> (Thumb, 746 bytes, Stack size 88 bytes, ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EwWarpAlpha8RowFilterGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpAlpha8RowFilterSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[10d]"></a>EwWarpAlpha8RowFilterSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EwWarpAlpha8RowFilterSolid &rArr; EwWarpAlpha8RowFilterGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpAlpha8RowFilterGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[10e]"></a>EwWarpAlpha8RowFilterSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpAlpha8RowFilterSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EwWarpAlpha8RowFilterSolidBlend &rArr; EwWarpAlpha8RowFilterGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpAlpha8RowFilterGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[10b]"></a>EwWarpAlpha8RowGradient</STRONG> (Thumb, 502 bytes, Stack size 76 bytes, ewextpxl_RGB565.o(.text.EwWarpAlpha8RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EwWarpAlpha8RowGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpAlpha8RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[10c]"></a>EwWarpAlpha8RowGradientBlend</STRONG> (Thumb, 622 bytes, Stack size 76 bytes, ewextpxl_RGB565.o(.text.EwWarpAlpha8RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EwWarpAlpha8RowGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpAlpha8RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[109]"></a>EwWarpAlpha8RowSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpAlpha8RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EwWarpAlpha8RowSolid &rArr; EwWarpAlpha8RowGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpAlpha8RowGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[10a]"></a>EwWarpAlpha8RowSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpAlpha8RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EwWarpAlpha8RowSolidBlend &rArr; EwWarpAlpha8RowGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpAlpha8RowGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[447]"></a>EwWarpBitmap</STRONG> (Thumb, 1968 bytes, Stack size 176 bytes, ewgfx.o(.text.EwWarpBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 1788<LI>Call Chain = EwWarpBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPackColor
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneIssue
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTaskData
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocTask
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_WarpBitmap
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_ScaleBitmap
</UL>

<P><STRONG><a name="[fd]"></a>EwWarpIndex8Row</STRONG> (Thumb, 362 bytes, Stack size 48 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8Row))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwWarpIndex8Row
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[fe]"></a>EwWarpIndex8RowBlend</STRONG> (Thumb, 696 bytes, Stack size 64 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwWarpIndex8RowBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[103]"></a>EwWarpIndex8RowFilter</STRONG> (Thumb, 702 bytes, Stack size 52 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EwWarpIndex8RowFilter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[104]"></a>EwWarpIndex8RowFilterBlend</STRONG> (Thumb, 414 bytes, Stack size 60 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwWarpIndex8RowFilterBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[107]"></a>EwWarpIndex8RowFilterGradient</STRONG> (Thumb, 440 bytes, Stack size 68 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = EwWarpIndex8RowFilterGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpIndex8RowFilterSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[108]"></a>EwWarpIndex8RowFilterGradientBlend</STRONG> (Thumb, 538 bytes, Stack size 64 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwWarpIndex8RowFilterGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpIndex8RowFilterSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[105]"></a>EwWarpIndex8RowFilterSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = EwWarpIndex8RowFilterSolid &rArr; EwWarpIndex8RowFilterGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpIndex8RowFilterGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[106]"></a>EwWarpIndex8RowFilterSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowFilterSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwWarpIndex8RowFilterSolidBlend &rArr; EwWarpIndex8RowFilterGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpIndex8RowFilterGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[101]"></a>EwWarpIndex8RowGradient</STRONG> (Thumb, 622 bytes, Stack size 56 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwWarpIndex8RowGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpIndex8RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[102]"></a>EwWarpIndex8RowGradientBlend</STRONG> (Thumb, 394 bytes, Stack size 52 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EwWarpIndex8RowGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpIndex8RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[ff]"></a>EwWarpIndex8RowSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwWarpIndex8RowSolid &rArr; EwWarpIndex8RowGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpIndex8RowGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[100]"></a>EwWarpIndex8RowSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpIndex8RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EwWarpIndex8RowSolidBlend &rArr; EwWarpIndex8RowGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpIndex8RowGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[f1]"></a>EwWarpNativeRow</STRONG> (Thumb, 332 bytes, Stack size 36 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EwWarpNativeRow
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[f2]"></a>EwWarpNativeRowBlend</STRONG> (Thumb, 704 bytes, Stack size 64 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EwWarpNativeRowBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[f7]"></a>EwWarpNativeRowFilter</STRONG> (Thumb, 698 bytes, Stack size 52 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EwWarpNativeRowFilter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[f8]"></a>EwWarpNativeRowFilterBlend</STRONG> (Thumb, 392 bytes, Stack size 52 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EwWarpNativeRowFilterBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[fb]"></a>EwWarpNativeRowFilterGradient</STRONG> (Thumb, 408 bytes, Stack size 56 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwWarpNativeRowFilterGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpNativeRowFilterSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[fc]"></a>EwWarpNativeRowFilterGradientBlend</STRONG> (Thumb, 528 bytes, Stack size 60 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwWarpNativeRowFilterGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpNativeRowFilterSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[f9]"></a>EwWarpNativeRowFilterSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwWarpNativeRowFilterSolid &rArr; EwWarpNativeRowFilterGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpNativeRowFilterGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[fa]"></a>EwWarpNativeRowFilterSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowFilterSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwWarpNativeRowFilterSolidBlend &rArr; EwWarpNativeRowFilterGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpNativeRowFilterGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[f5]"></a>EwWarpNativeRowGradient</STRONG> (Thumb, 572 bytes, Stack size 48 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwWarpNativeRowGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpNativeRowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[f6]"></a>EwWarpNativeRowGradientBlend</STRONG> (Thumb, 388 bytes, Stack size 48 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwWarpNativeRowGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpNativeRowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[f3]"></a>EwWarpNativeRowSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwWarpNativeRowSolid &rArr; EwWarpNativeRowGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpNativeRowGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[f4]"></a>EwWarpNativeRowSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpNativeRowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwWarpNativeRowSolidBlend &rArr; EwWarpNativeRowGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpNativeRowGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[111]"></a>EwWarpRGB565Row</STRONG> (Thumb, 672 bytes, Stack size 40 bytes, ewextpxl_RGB565.o(.text.EwWarpRGB565Row))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EwWarpRGB565Row
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[116]"></a>EwWarpRGB565RowFilter</STRONG> (Thumb, 778 bytes, Stack size 60 bytes, ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EwWarpRGB565RowFilter
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[119]"></a>EwWarpRGB565RowFilterGradient</STRONG> (Thumb, 452 bytes, Stack size 56 bytes, ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwWarpRGB565RowFilterGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpRGB565RowFilterSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[11a]"></a>EwWarpRGB565RowFilterGradientBlend</STRONG> (Thumb, 546 bytes, Stack size 56 bytes, ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwWarpRGB565RowFilterGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpRGB565RowFilterSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[117]"></a>EwWarpRGB565RowFilterSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwWarpRGB565RowFilterSolid &rArr; EwWarpRGB565RowFilterGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpRGB565RowFilterGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[118]"></a>EwWarpRGB565RowFilterSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpRGB565RowFilterSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EwWarpRGB565RowFilterSolidBlend &rArr; EwWarpRGB565RowFilterGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpRGB565RowFilterGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[114]"></a>EwWarpRGB565RowGradient</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, ewextpxl_RGB565.o(.text.EwWarpRGB565RowGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EwWarpRGB565RowGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpRGB565RowSolid
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[115]"></a>EwWarpRGB565RowGradientBlend</STRONG> (Thumb, 398 bytes, Stack size 48 bytes, ewextpxl_RGB565.o(.text.EwWarpRGB565RowGradientBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwWarpRGB565RowGradientBlend
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpRGB565RowSolidBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[112]"></a>EwWarpRGB565RowSolid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpRGB565RowSolid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EwWarpRGB565RowSolid &rArr; EwWarpRGB565RowGradient
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpRGB565RowGradient
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[113]"></a>EwWarpRGB565RowSolidBlend</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ewextpxl_RGB565.o(.text.EwWarpRGB565RowSolidBlend))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EwWarpRGB565RowSolidBlend &rArr; EwWarpRGB565RowGradientBlend
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpRGB565RowGradientBlend
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ewgfxtasks.o(.rodata.WarpPerspWorkers)
<LI> ewgfxtasks.o(.rodata.WarpAffineWorkers)
</UL>
<P><STRONG><a name="[33c]"></a>EwZero</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ewextrte.o(.text.EwZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EwZero
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitViewport
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitSubPath
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreatePath
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBitmap
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFrameGrid
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxLockSurface
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxInitViewport
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxFillDriver
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCreateSurface
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCreateConstSurface
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxCopyDriver
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxBlendDriver
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFillPolygon
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGfxCore
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateGlyph
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateConstSurface
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpLoadClut
</UL>

<P><STRONG><a name="[4d4]"></a>ExtLedDisableLamptest</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, led.o(.text.ExtLedDisableLamptest))
<BR><BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmDisableLampTest
</UL>

<P><STRONG><a name="[4d5]"></a>ExtLedInit</STRONG> (Thumb, 220 bytes, Stack size 4 bytes, led.o(.text.ExtLedInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ExtLedInit
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmInitAll
</UL>

<P><STRONG><a name="[4d6]"></a>ExtLedSetLamptest</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, led.o(.text.ExtLedSetLamptest))
<BR><BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmSetLampTest
</UL>

<P><STRONG><a name="[478]"></a>FMC_SDRAM_Init</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, stm32f4xx_ll_fmc.o(.text.FMC_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[47a]"></a>FMC_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_ll_fmc.o(.text.FMC_SDRAM_ProgramRefreshRate))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
</UL>

<P><STRONG><a name="[448]"></a>FMC_SDRAM_SendCommand</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, stm32f4xx_ll_fmc.o(.text.FMC_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[479]"></a>FMC_SDRAM_Timing_Init</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, stm32f4xx_ll_fmc.o(.text.FMC_SDRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FMC_SDRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[35a]"></a>GfxBeginUpdate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ewextgfx.o(.text.GfxBeginUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GfxBeginUpdate &rArr; EwBspDisplayWaitForCompletion &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayWaitForCompletion
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBeginUpdate
</UL>

<P><STRONG><a name="[35c]"></a>GfxBeginUpdateArea</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, ewextgfx.o(.text.GfxBeginUpdateArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GfxBeginUpdateArea &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayWaitForCompletion
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBeginUpdateArea
</UL>

<P><STRONG><a name="[db]"></a>GfxBlendDriver</STRONG> (Thumb, 638 bytes, Stack size 216 bytes, ewextgfx.o(.text.GfxBlendDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GfxBlendDriver &rArr; EwBspGraphicsCopyBlend &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsLoadClut
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopyBlend
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitColorGradient
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateCopy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyDrivers)
</UL>
<P><STRONG><a name="[da]"></a>GfxCopyDriver</STRONG> (Thumb, 670 bytes, Stack size 216 bytes, ewextgfx.o(.text.GfxCopyDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GfxCopyDriver &rArr; EwBspGraphicsCopy &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsLoadClut
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopy
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitColorGradient
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateCopy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.CopyDrivers)
</UL>
<P><STRONG><a name="[3b4]"></a>GfxCreateConstSurface</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, ewextgfx.o(.text.GfxCreateConstSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GfxCreateConstSurface &rArr; EwAllocVideo &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocVideo
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateConstSurface
</UL>

<P><STRONG><a name="[3b8]"></a>GfxCreateSurface</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, ewextgfx.o(.text.GfxCreateSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GfxCreateSurface &rArr; EwAllocVideo &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocVideo
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
</UL>

<P><STRONG><a name="[339]"></a>GfxDestroySurface</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ewextgfx.o(.text.GfxDestroySurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = GfxDestroySurface &rArr; EwFreeVideo &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeVideo
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscardSurface
</UL>

<P><STRONG><a name="[3ce]"></a>GfxDoneViewport</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, ewextgfx.o(.text.GfxDoneViewport))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = GfxDoneViewport &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsDone
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneViewport
</UL>

<P><STRONG><a name="[3e2]"></a>GfxEndUpdate</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ewextgfx.o(.text.GfxEndUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GfxEndUpdate &rArr; EwBspGraphicsWaitForCompletion &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayCommitBuffer
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEndUpdate
</UL>

<P><STRONG><a name="[ec]"></a>GfxFillDriver</STRONG> (Thumb, 336 bytes, Stack size 176 bytes, ewextgfx.o(.text.GfxFillDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = GfxFillDriver &rArr; EwBspGraphicsFillBlend &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFillBlend
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFill
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitColorGradient
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFill
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfxtasks.o(.rodata.FillDrivers)
</UL>
<P><STRONG><a name="[40c]"></a>GfxInitGfx</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, ewextgfx.o(.text.GfxInitGfx))
<BR><BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitGraphicsEngine
</UL>

<P><STRONG><a name="[414]"></a>GfxInitViewport</STRONG> (Thumb, 584 bytes, Stack size 40 bytes, ewextgfx.o(.text.GfxInitViewport))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GfxInitViewport &rArr; EwAllocVideo &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsInit
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAllocVideo
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitViewport
</UL>

<P><STRONG><a name="[420]"></a>GfxLockSurface</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ewextgfx.o(.text.GfxLockSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GfxLockSurface &rArr; EwBspGraphicsWaitForCompletion &rArr; osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockSurface
</UL>

<P><STRONG><a name="[446]"></a>GfxUnlockSurface</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewextgfx.o(.text.GfxUnlockSurface))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockSurface
</UL>

<P><STRONG><a name="[4c9]"></a>GraphicsArcPath_OnGetInnerRadius</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsArcPath_OnGetInnerRadius))
<BR><BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[44c]"></a>GraphicsArcPath_OnSetEndAngle</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, graphics.o(.text.GraphicsArcPath_OnSetEndAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GraphicsArcPath_OnSetEndAngle &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[44d]"></a>GraphicsArcPath_OnSetInnerRadius</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, graphics.o(.text.GraphicsArcPath_OnSetInnerRadius))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GraphicsArcPath_OnSetInnerRadius &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[44e]"></a>GraphicsArcPath_OnSetRadius</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, graphics.o(.text.GraphicsArcPath_OnSetRadius))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GraphicsArcPath_OnSetRadius &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[44f]"></a>GraphicsArcPath_OnSetStartAngle</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, graphics.o(.text.GraphicsArcPath_OnSetStartAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GraphicsArcPath_OnSetStartAngle &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[450]"></a>GraphicsArcPath_OnSetStyle</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, graphics.o(.text.GraphicsArcPath_OnSetStyle))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GraphicsArcPath_OnSetStyle &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[212]"></a>GraphicsArcPath__Done</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, graphics.o(.text.GraphicsArcPath__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = GraphicsArcPath__Done &rArr; EwFreePath &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreePath
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsArcPath)
</UL>
<P><STRONG><a name="[210]"></a>GraphicsArcPath__Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, graphics.o(.text.GraphicsArcPath__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GraphicsArcPath__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsArcPath)
</UL>
<P><STRONG><a name="[211]"></a>GraphicsArcPath__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsArcPath__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsArcPath)
</UL>
<P><STRONG><a name="[a9]"></a>GraphicsArcPath_updatePath</STRONG> (Thumb, 5588 bytes, Stack size 112 bytes, graphics.o(.text.GraphicsArcPath_updatePath))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = GraphicsArcPath_updatePath &rArr; GraphicsPath_SetMaxNoOfSubPaths &rArr; EwFreePath &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath_SetMaxNoOfSubPaths
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitSubPath
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCloseSubPath
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBeginSubPath
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAddSubPathArc
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathSqrt
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathSin
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathCos
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Address Reference Count : 5]<UL><LI> graphics.o(.text.GraphicsArcPath_OnSetEndAngle)
<LI> graphics.o(.text.GraphicsArcPath_OnSetStartAngle)
<LI> graphics.o(.text.GraphicsArcPath_OnSetInnerRadius)
<LI> graphics.o(.text.GraphicsArcPath_OnSetRadius)
<LI> graphics.o(.text.GraphicsArcPath_OnSetStyle)
</UL>
<P><STRONG><a name="[454]"></a>GraphicsCanvas_CopyBitmap</STRONG> (Thumb, 138 bytes, Stack size 96 bytes, graphics.o(.text.GraphicsCanvas_CopyBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 1828<LI>Call Chain = GraphicsCanvas_CopyBitmap &rArr; EwCopyBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopyBitmap
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_Draw
</UL>

<P><STRONG><a name="[456]"></a>GraphicsCanvas_DrawBitmapFrame</STRONG> (Thumb, 208 bytes, Stack size 144 bytes, graphics.o(.text.GraphicsCanvas_DrawBitmapFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 2164<LI>Call Chain = GraphicsCanvas_DrawBitmapFrame &rArr; EwDrawBitmapFrame &rArr; EwTileBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawBitmapFrame
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect2Point
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_Draw
</UL>

<P><STRONG><a name="[457]"></a>GraphicsCanvas_DrawText</STRONG> (Thumb, 174 bytes, Stack size 112 bytes, graphics.o(.text.GraphicsCanvas_DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 1892<LI>Call Chain = GraphicsCanvas_DrawText &rArr; EwDrawText &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringLength
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
</UL>

<P><STRONG><a name="[458]"></a>GraphicsCanvas_FillPath</STRONG> (Thumb, 138 bytes, Stack size 104 bytes, graphics.o(.text.GraphicsCanvas_FillPath))
<BR><BR>[Stack]<UL><LI>Max Depth = 1852<LI>Call Chain = GraphicsCanvas_FillPath &rArr; EwFillPath &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_Draw
</UL>

<P><STRONG><a name="[30e]"></a>GraphicsCanvas_FillRectangle</STRONG> (Thumb, 94 bytes, Stack size 80 bytes, graphics.o(.text.GraphicsCanvas_FillRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1780<LI>Call Chain = GraphicsCanvas_FillRectangle &rArr; EwFillRectangle &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillRectangle
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot_Draw
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsRectangle_Draw
</UL>

<P><STRONG><a name="[216]"></a>GraphicsCanvas_OnSetFrameSize</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, graphics.o(.text.GraphicsCanvas_OnSetFrameSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = GraphicsCanvas_OnSetFrameSize &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeBitmap
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsCanvas)
</UL>
<P><STRONG><a name="[459]"></a>GraphicsCanvas_ScaleBitmap</STRONG> (Thumb, 368 bytes, Stack size 144 bytes, graphics.o(.text.GraphicsCanvas_ScaleBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 1932<LI>Call Chain = GraphicsCanvas_ScaleBitmap &rArr; EwWarpBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTrace
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_Draw
</UL>

<P><STRONG><a name="[217]"></a>GraphicsCanvas_Update</STRONG> (Thumb, 220 bytes, Stack size 96 bytes, graphics.o(.text.GraphicsCanvas_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 1796<LI>Call Chain = GraphicsCanvas_Update &rArr; EwFillRectangle &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBitmap
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect2Point
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsCanvas)
</UL>
<P><STRONG><a name="[45a]"></a>GraphicsCanvas_WarpBitmap</STRONG> (Thumb, 544 bytes, Stack size 200 bytes, graphics.o(.text.GraphicsCanvas_WarpBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 1988<LI>Call Chain = GraphicsCanvas_WarpBitmap &rArr; EwWarpBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTrace
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_Draw
</UL>

<P><STRONG><a name="[435]"></a>GraphicsCanvas__AttachBitmap</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, graphics.o(.text.GraphicsCanvas__AttachBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = GraphicsCanvas__AttachBitmap &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[436]"></a>GraphicsCanvas__DetachBitmap</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, graphics.o(.text.GraphicsCanvas__DetachBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = GraphicsCanvas__DetachBitmap &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
</UL>

<P><STRONG><a name="[215]"></a>GraphicsCanvas__Done</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsCanvas__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = GraphicsCanvas__Done &rArr; ResourcesBitmap__Done &rArr; EwFreeBitmap &rArr; EwFreeSurface &rArr; CleanSurfaceCache &rArr; DiscardSurface &rArr; GfxDestroySurface &rArr; EwFreeVideo &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsCanvas)
</UL>
<P><STRONG><a name="[213]"></a>GraphicsCanvas__Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, graphics.o(.text.GraphicsCanvas__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1772<LI>Call Chain = GraphicsCanvas__Init &rArr; ResourcesBitmap__Init &rArr; EwLoadBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsCanvas)
</UL>
<P><STRONG><a name="[214]"></a>GraphicsCanvas__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsCanvas__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsCanvas)
</UL>
<P><STRONG><a name="[451]"></a>GraphicsPath_SetMaxNoOfSubPaths</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, graphics.o(.text.GraphicsPath_SetMaxNoOfSubPaths))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = GraphicsPath_SetMaxNoOfSubPaths &rArr; EwFreePath &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetMaxNoOfSubPaths
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreePath
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreatePath
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_updatePath
</UL>

<P><STRONG><a name="[21a]"></a>GraphicsPath__Done</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, graphics.o(.text.GraphicsPath__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = GraphicsPath__Done &rArr; EwFreePath &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreePath
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsPath)
</UL>
<P><STRONG><a name="[218]"></a>GraphicsPath__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, graphics.o(.text.GraphicsPath__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GraphicsPath__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsPath)
</UL>
<P><STRONG><a name="[219]"></a>GraphicsPath__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsPath__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsPath)
</UL>
<P><STRONG><a name="[aa]"></a>GraphicsPath_onUpdate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsPath_onUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GraphicsPath_onUpdate &rArr; EwNotifyObjObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyObjObservers
</UL>
<BR>[Address Reference Count : 2]<UL><LI> graphics.o(.text.GraphicsPath_SetMaxNoOfSubPaths)
<LI> graphics.o(.text.GraphicsArcPath_updatePath)
</UL>
<P><STRONG><a name="[4c4]"></a>GraphicsWarpMatrix_Assign</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsWarpMatrix_Assign))
<BR><BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_Warp3D
</UL>

<P><STRONG><a name="[4c7]"></a>GraphicsWarpMatrix_CalculateZ</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsWarpMatrix_CalculateZ))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_update
</UL>

<P><STRONG><a name="[4c6]"></a>GraphicsWarpMatrix_DeriveFromQuad</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsWarpMatrix_DeriveFromQuad))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_update
</UL>

<P><STRONG><a name="[4c5]"></a>GraphicsWarpMatrix_Project</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsWarpMatrix_Project))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_update
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_Warp3D
</UL>

<P><STRONG><a name="[45c]"></a>GraphicsWarpMatrix_Rotate</STRONG> (Thumb, 498 bytes, Stack size 72 bytes, graphics.o(.text.GraphicsWarpMatrix_Rotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = GraphicsWarpMatrix_Rotate &rArr; EwMathSin &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathSin
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathCos
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[21d]"></a>GraphicsWarpMatrix__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsWarpMatrix__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsWarpMatrix)
</UL>
<P><STRONG><a name="[21b]"></a>GraphicsWarpMatrix__Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, graphics.o(.text.GraphicsWarpMatrix__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GraphicsWarpMatrix__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsWarpMatrix)
</UL>
<P><STRONG><a name="[21c]"></a>GraphicsWarpMatrix__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphics.o(.text.GraphicsWarpMatrix__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphics.o(.rodata.__vmt_GraphicsWarpMatrix)
</UL>
<P><STRONG><a name="[38a]"></a>HAL_DMA2D_BlendingStart_IT</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, stm32f4xx_hal_dma2d.o(.text.HAL_DMA2D_BlendingStart_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_BlendingStart_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFillBlend
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopyBlend
</UL>

<P><STRONG><a name="[392]"></a>HAL_DMA2D_CLUTLoad_IT</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32f4xx_hal_dma2d.o(.text.HAL_DMA2D_CLUTLoad_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA2D_CLUTLoad_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsLoadClut
</UL>

<P><STRONG><a name="[45f]"></a>HAL_DMA2D_CLUTLoadingCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_dma2d.o(.text.HAL_DMA2D_CLUTLoadingCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[387]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f4xx_hal_dma2d.o(.text.HAL_DMA2D_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFillBlend
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopyBlend
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopy
</UL>

<P><STRONG><a name="[38c]"></a>HAL_DMA2D_DeInit</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, stm32f4xx_hal_dma2d.o(.text.HAL_DMA2D_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA2D_DeInit &rArr; HAL_DMA2D_MspDeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsDone
</UL>

<P><STRONG><a name="[328]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 320 bytes, Stack size 16 bytes, stm32f4xx_hal_dma2d.o(.text.HAL_DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_LineEventCallback
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[386]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32f4xx_hal_dma2d.o(.text.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsInit
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFillBlend
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFill
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopyBlend
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopy
</UL>

<P><STRONG><a name="[45e]"></a>HAL_DMA2D_LineEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_dma2d.o(.text.HAL_DMA2D_LineEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[45d]"></a>HAL_DMA2D_MspDeInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ew_bsp_graphics.o(.text.HAL_DMA2D_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA2D_MspDeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>

<P><STRONG><a name="[460]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ew_bsp_graphics.o(.text.HAL_DMA2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[388]"></a>HAL_DMA2D_Start_IT</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, stm32f4xx_hal_dma2d.o(.text.HAL_DMA2D_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFill
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopy
</UL>

<P><STRONG><a name="[2db]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[2dc]"></a>HAL_DMA_Init</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(.text.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[2d9]"></a>HAL_Delay</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Delay
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Delay
</UL>

<P><STRONG><a name="[462]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[33e]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[2d3]"></a>HAL_GPIO_Init</STRONG> (Thumb, 442 bytes, Stack size 44 bytes, stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_Init
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_ITConfig
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspInOutInitButton
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>

<P><STRONG><a name="[394]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspInOutEventHandler
</UL>

<P><STRONG><a name="[2d4]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_WriteReg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_WriteData
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_Init
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
</UL>

<P><STRONG><a name="[449]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[463]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal_i2c.o(.text.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_ReadMultiple
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
</UL>

<P><STRONG><a name="[484]"></a>HAL_I2C_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_i2c.o(.text.HAL_I2C_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[465]"></a>HAL_I2C_Init</STRONG> (Thumb, 370 bytes, Stack size 16 bytes, stm32f4xx_hal_i2c.o(.text.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[468]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 720 bytes, Stack size 48 bytes, stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_ReadMultiple
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
</UL>

<P><STRONG><a name="[46a]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 476 bytes, Stack size 48 bytes, stm32f4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
</UL>

<P><STRONG><a name="[464]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_i2c.o(.text.HAL_I2C_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[466]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_i2c.o(.text.HAL_I2C_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[496]"></a>HAL_IncTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[396]"></a>HAL_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspSystemInit
</UL>

<P><STRONG><a name="[46d]"></a>HAL_InitTick</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32f4xx_hal.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[37c]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, stm32f4xx_hal_ltdc.o(.text.HAL_LTDC_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayInit
</UL>

<P><STRONG><a name="[473]"></a>HAL_LTDC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_ltdc.o(.text.HAL_LTDC_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[470]"></a>HAL_LTDC_IRQHandler</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, stm32f4xx_hal_ltdc.o(.text.HAL_LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ReloadEventCallback
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ErrorCallback
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[37b]"></a>HAL_LTDC_Init</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, stm32f4xx_hal_ltdc.o(.text.HAL_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayInit
</UL>

<P><STRONG><a name="[471]"></a>HAL_LTDC_LineEventCallback</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, ew_bsp_display.o(.text.HAL_LTDC_LineEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = HAL_LTDC_LineEventCallback &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[474]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, ew_bsp_display.o(.text.HAL_LTDC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[37e]"></a>HAL_LTDC_ProgramLineEvent</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32f4xx_hal_ltdc.o(.text.HAL_LTDC_ProgramLineEvent))
<BR><BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayInit
</UL>

<P><STRONG><a name="[472]"></a>HAL_LTDC_ReloadEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_ltdc.o(.text.HAL_LTDC_ReloadEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[46e]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[461]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspDeInit
</UL>

<P><STRONG><a name="[2de]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_ITConfig
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspInOutInitButton
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>

<P><STRONG><a name="[2dd]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_ITConfig
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspInOutInitButton
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>

<P><STRONG><a name="[46c]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[398]"></a>HAL_PWREx_EnableOverDrive</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_PWREx_EnableOverDrive
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspSystemInit
</UL>

<P><STRONG><a name="[39a]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 578 bytes, Stack size 24 bytes, stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspSystemInit
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
</UL>

<P><STRONG><a name="[399]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspSystemInit
</UL>

<P><STRONG><a name="[467]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[499]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[475]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[397]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 868 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspSystemInit
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
</UL>

<P><STRONG><a name="[36d]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, stm32f4xx_hal_rtc.o(.text.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockGetTime
</UL>

<P><STRONG><a name="[36c]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, stm32f4xx_hal_rtc.o(.text.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockGetTime
</UL>

<P><STRONG><a name="[370]"></a>HAL_RTC_Init</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, stm32f4xx_hal_rtc.o(.text.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockInit
</UL>

<P><STRONG><a name="[476]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 64 bytes, Stack size 104 bytes, ew_bsp_clock.o(.text.HAL_RTC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_RTC_MspInit &rArr; HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[373]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, stm32f4xx_hal_rtc.o(.text.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RTC_SetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockSetTime
</UL>

<P><STRONG><a name="[372]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 396 bytes, Stack size 40 bytes, stm32f4xx_hal_rtc.o(.text.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTC_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockSetTime
</UL>

<P><STRONG><a name="[2d7]"></a>HAL_SDRAM_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f4xx_hal_sdram.o(.text.HAL_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SDRAM_Init &rArr; FMC_SDRAM_Timing_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Timing_Init
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[477]"></a>HAL_SDRAM_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_sdram.o(.text.HAL_SDRAM_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[2da]"></a>HAL_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f4xx_hal_sdram.o(.text.HAL_SDRAM_ProgramRefreshRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SDRAM_ProgramRefreshRate
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_ProgramRefreshRate
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[2d8]"></a>HAL_SDRAM_SendCommand</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32f4xx_hal_sdram.o(.text.HAL_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[47b]"></a>HAL_SPI_DeInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(.text.HAL_SPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SPI_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_WriteReg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_WriteData
</UL>

<P><STRONG><a name="[495]"></a>HAL_SPI_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text.HAL_SPI_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[47d]"></a>HAL_SPI_Init</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(.text.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[47c]"></a>HAL_SPI_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text.HAL_SPI_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>

<P><STRONG><a name="[47e]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text.HAL_SPI_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[47f]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 560 bytes, Stack size 40 bytes, stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_WriteReg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_WriteData
</UL>

<P><STRONG><a name="[36f]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config))
<BR><BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockInit
</UL>

<P><STRONG><a name="[375]"></a>HAL_UART_Init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspConsoleInit
</UL>

<P><STRONG><a name="[481]"></a>HAL_UART_MspInit</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, ew_bsp_console.o(.text.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[377]"></a>HAL_UART_Transmit</STRONG> (Thumb, 328 bytes, Stack size 40 bytes, stm32f4xx_hal_uart.o(.text.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspConsolePutCharacter
</UL>

<P><STRONG><a name="[83]"></a>HardButtonIsrCallback</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, devicedriver.o(.text.HardButtonIsrCallback))
<BR>[Address Reference Count : 1]<UL><LI> devicedriver.o(.text.DeviceDriver_Initialize)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = HardFault_Handler &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[485]"></a>IOE_Delay</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f429i_discovery.o(.text.IOE_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IOE_Delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_Start
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_Reset
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_Init
</UL>

<P><STRONG><a name="[486]"></a>IOE_ITConfig</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, stm32f429i_discovery.o(.text.IOE_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = IOE_ITConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_EnableIT
</UL>

<P><STRONG><a name="[487]"></a>IOE_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f429i_discovery.o(.text.IOE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = IOE_Init &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_ReadID
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_Init
</UL>

<P><STRONG><a name="[488]"></a>IOE_Read</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, stm32f429i_discovery.o(.text.IOE_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = IOE_Read &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_Start
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_ITStatus
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_EnableIT
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_DisableIT
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_DetectTouch
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_ReadID
</UL>

<P><STRONG><a name="[489]"></a>IOE_ReadMultiple</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, stm32f429i_discovery.o(.text.IOE_ReadMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = IOE_ReadMultiple &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_GetXY
</UL>

<P><STRONG><a name="[48a]"></a>IOE_Write</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, stm32f429i_discovery.o(.text.IOE_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = IOE_Write &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_Start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_GetXY
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_EnableIT
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_DisableIT
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_DetectTouch
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_TS_ClearIT
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_Reset
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stmpe811_Init
</UL>

<P><STRONG><a name="[48b]"></a>LCD_Delay</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f429i_discovery.o(.text.LCD_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_Delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ili9341_Init
</UL>

<P><STRONG><a name="[48c]"></a>LCD_IO_Init</STRONG> (Thumb, 208 bytes, Stack size 56 bytes, stm32f429i_discovery.o(.text.LCD_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = LCD_IO_Init &rArr; SPIx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ili9341_Init
</UL>

<P><STRONG><a name="[48e]"></a>LCD_IO_WriteData</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, stm32f429i_discovery.o(.text.LCD_IO_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_IO_WriteData &rArr; HAL_SPI_Transmit &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ili9341_Init
</UL>

<P><STRONG><a name="[48f]"></a>LCD_IO_WriteReg</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, stm32f429i_discovery.o(.text.LCD_IO_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_IO_WriteReg &rArr; HAL_SPI_Transmit &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ili9341_Init
</UL>

<P><STRONG><a name="[61]"></a>LTDC_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ew_bsp_display.o(.text.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.MemManage_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = MemManage_Handler &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, port.o(.text.PendSV_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[221]"></a>ResourcesBitmap_OnSetFrameSize</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, resources.o(.text.ResourcesBitmap_OnSetFrameSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = ResourcesBitmap_OnSetFrameSize &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> resources.o(.rodata.__vmt_ResourcesBitmap)
</UL>
<P><STRONG><a name="[222]"></a>ResourcesBitmap_Update</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, resources.o(.text.ResourcesBitmap_Update))
<BR>[Address Reference Count : 1]<UL><LI> resources.o(.rodata.__vmt_ResourcesBitmap)
</UL>
<P><STRONG><a name="[220]"></a>ResourcesBitmap__Done</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, resources.o(.text.ResourcesBitmap__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = ResourcesBitmap__Done &rArr; EwFreeBitmap &rArr; EwFreeSurface &rArr; CleanSurfaceCache &rArr; DiscardSurface &rArr; GfxDestroySurface &rArr; EwFreeVideo &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeBitmap
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> resources.o(.rodata.__vmt_ResourcesBitmap)
</UL>
<P><STRONG><a name="[21e]"></a>ResourcesBitmap__Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, resources.o(.text.ResourcesBitmap__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1764<LI>Call Chain = ResourcesBitmap__Init &rArr; EwLoadBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> resources.o(.rodata.__vmt_ResourcesBitmap)
</UL>
<P><STRONG><a name="[21f]"></a>ResourcesBitmap__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, resources.o(.text.ResourcesBitmap__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> resources.o(.rodata.__vmt_ResourcesBitmap)
</UL>
<P><STRONG><a name="[455]"></a>ResourcesBitmap__Update</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, resources.o(.text.ResourcesBitmap__Update))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_Draw
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_Draw
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_Draw
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_WarpBitmap
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_Update
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_ScaleBitmap
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_FillPath
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_DrawText
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_DrawBitmapFrame
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_CopyBitmap
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_FillRectangle
</UL>

<P><STRONG><a name="[492]"></a>ResourcesFont_GetFlowTextAdvance</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, resources.o(.text.ResourcesFont_GetFlowTextAdvance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1516<LI>Call Chain = ResourcesFont_GetFlowTextAdvance &rArr; EwGetFlowTextAdvance &rArr; EwGetTextAdvance &rArr; GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetFlowTextAdvance
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
</UL>

<P><STRONG><a name="[493]"></a>ResourcesFont_GetTextAdvance</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, resources.o(.text.ResourcesFont_GetTextAdvance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1516<LI>Call Chain = ResourcesFont_GetTextAdvance &rArr; EwGetTextAdvance &rArr; GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTextAdvance
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringLength
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
</UL>

<P><STRONG><a name="[494]"></a>ResourcesFont_ParseFlowString</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, resources.o(.text.ResourcesFont_ParseFlowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 1620<LI>Call Chain = ResourcesFont_ParseFlowString &rArr; EwParseFlowString &rArr; EwGetGlyphMetrics &rArr; GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwParseFlowString
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringLength
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_reparseSlot
</UL>

<P><STRONG><a name="[225]"></a>ResourcesFont__Done</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, resources.o(.text.ResourcesFont__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = ResourcesFont__Done &rArr; CoreResource__Done &rArr; EwDeregisterResource &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeFont
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> resources.o(.rodata.__vmt_ResourcesFont)
</UL>
<P><STRONG><a name="[223]"></a>ResourcesFont__Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, resources.o(.text.ResourcesFont__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ResourcesFont__Init &rArr; EwLoadFont &rArr; EwFntOpen &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadFont
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> resources.o(.rodata.__vmt_ResourcesFont)
</UL>
<P><STRONG><a name="[224]"></a>ResourcesFont__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, resources.o(.text.ResourcesFont__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> resources.o(.rodata.__vmt_ResourcesFont)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SysTick_Handler &rArr; osSystickHandler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSystickHandler
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspClockTickIncrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SystemInit</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, system_stm32f4xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(.text)
</UL>
<P><STRONG><a name="[228]"></a>TemplatesDeviceClass__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, templates.o(.text.TemplatesDeviceClass__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> templates.o(.rodata.__vmt_TemplatesDeviceClass)
</UL>
<P><STRONG><a name="[226]"></a>TemplatesDeviceClass__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, templates.o(.text.TemplatesDeviceClass__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TemplatesDeviceClass__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> templates.o(.rodata.__vmt_TemplatesDeviceClass)
</UL>
<P><STRONG><a name="[227]"></a>TemplatesDeviceClass__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, templates.o(.text.TemplatesDeviceClass__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDeviceClass__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> templates.o(.rodata.__vmt_TemplatesDeviceClass)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.UsageFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = UsageFault_Handler &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[22c]"></a>ViewsFillPath_Draw</STRONG> (Thumb, 150 bytes, Stack size 120 bytes, views.o(.text.ViewsFillPath_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1972<LI>Call Chain = ViewsFillPath_Draw &rArr; GraphicsCanvas_FillPath &rArr; EwFillPath &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_FillPath
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsFillPath)
</UL>
<P><STRONG><a name="[49a]"></a>ViewsFillPath_OnSetColor</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, views.o(.text.ViewsFillPath_OnSetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ViewsFillPath_OnSetColor &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompColor
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[49d]"></a>ViewsFillPath_OnSetFillRule</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, views.o(.text.ViewsFillPath_OnSetFillRule))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ViewsFillPath_OnSetFillRule &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[49e]"></a>ViewsFillPath_OnSetOffset</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, views.o(.text.ViewsFillPath_OnSetOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ViewsFillPath_OnSetOffset &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[49f]"></a>ViewsFillPath_OnSetPath</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, views.o(.text.ViewsFillPath_OnSetPath))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ViewsFillPath_OnSetPath &rArr; EwDetachObjObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[22b]"></a>ViewsFillPath__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, views.o(.text.ViewsFillPath__Done))
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsFillPath)
</UL>
<P><STRONG><a name="[229]"></a>ViewsFillPath__Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, views.o(.text.ViewsFillPath__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ViewsFillPath__Init &rArr; CoreRectView__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsFillPath)
</UL>
<P><STRONG><a name="[22a]"></a>ViewsFillPath__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, views.o(.text.ViewsFillPath__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsFillPath)
</UL>
<P><STRONG><a name="[ac]"></a>ViewsFillPath_updatePath</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, views.o(.text.ViewsFillPath_updatePath))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ViewsFillPath_updatePath &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.text.ViewsFillPath_OnSetPath)
</UL>
<P><STRONG><a name="[230]"></a>ViewsFrame_Draw</STRONG> (Thumb, 546 bytes, Stack size 152 bytes, views.o(.text.ViewsFrame_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 2316<LI>Call Chain = ViewsFrame_Draw &rArr; GraphicsCanvas_DrawBitmapFrame &rArr; EwDrawBitmapFrame &rArr; EwTileBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_DrawBitmapFrame
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsFrame)
</UL>
<P><STRONG><a name="[4a0]"></a>ViewsFrame_OnSetAnimated</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, views.o(.text.ViewsFrame_OnSetAnimated))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = ViewsFrame_OnSetAnimated &rArr; EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetBitmap
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[4a1]"></a>ViewsFrame_OnSetBitmap</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, views.o(.text.ViewsFrame_OnSetBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = ViewsFrame_OnSetBitmap &rArr; ViewsFrame_OnSetAnimated &rArr; EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetAnimated
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[4a2]"></a>ViewsFrame_OnSetColor</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, views.o(.text.ViewsFrame_OnSetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ViewsFrame_OnSetColor &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompColor
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[4a3]"></a>ViewsFrame_OnSetEdges</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, views.o(.text.ViewsFrame_OnSetEdges))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ViewsFrame_OnSetEdges &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[4a4]"></a>ViewsFrame_OnSetFrameNumber</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, views.o(.text.ViewsFrame_OnSetFrameNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ViewsFrame_OnSetFrameNumber &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[4a5]"></a>ViewsFrame_OnSetNoEdgesLimit</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, views.o(.text.ViewsFrame_OnSetNoEdgesLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ViewsFrame_OnSetNoEdgesLimit &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[4a6]"></a>ViewsFrame_OnSetVisible</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, views.o(.text.ViewsFrame_OnSetVisible))
<BR><BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__ChangeViewState
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBar_UpdateViewState
</UL>

<P><STRONG><a name="[22f]"></a>ViewsFrame__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, views.o(.text.ViewsFrame__Done))
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsFrame)
</UL>
<P><STRONG><a name="[22d]"></a>ViewsFrame__Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, views.o(.text.ViewsFrame__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ViewsFrame__Init &rArr; CoreRectView__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsFrame)
</UL>
<P><STRONG><a name="[22e]"></a>ViewsFrame__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, views.o(.text.ViewsFrame__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsFrame)
</UL>
<P><STRONG><a name="[ae]"></a>ViewsFrame_observerSlot</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, views.o(.text.ViewsFrame_observerSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ViewsFrame_observerSlot &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.text.ViewsFrame_OnSetBitmap)
</UL>
<P><STRONG><a name="[ad]"></a>ViewsFrame_timerSlot</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, views.o(.text.ViewsFrame_timerSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = ViewsFrame_timerSlot &rArr; EwDetachObjObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Address Reference Count : 2]<UL><LI> views.o(.text.ViewsFrame_timerSlot)
<LI> views.o(.text.ViewsFrame_OnSetAnimated)
</UL>
<P><STRONG><a name="[234]"></a>ViewsImage_Draw</STRONG> (Thumb, 432 bytes, Stack size 216 bytes, views.o(.text.ViewsImage_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 2148<LI>Call Chain = ViewsImage_Draw &rArr; GraphicsCanvas_ScaleBitmap &rArr; EwWarpBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_ScaleBitmap
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_CopyBitmap
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect2Point
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsImage)
</UL>
<P><STRONG><a name="[4a8]"></a>ViewsImage_GetContentArea</STRONG> (Thumb, 756 bytes, Stack size 96 bytes, views.o(.text.ViewsImage_GetContentArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ViewsImage_GetContentArea &rArr; EwSetRectY
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetRectY
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetRectX
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetRectW
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetRectSize
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetRectH
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectW
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectH
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAutoSize
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_observerSlot
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_Draw
</UL>

<P><STRONG><a name="[4ae]"></a>ViewsImage_OnSetAlignment</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, views.o(.text.ViewsImage_OnSetAlignment))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ViewsImage_OnSetAlignment &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
</UL>

<P><STRONG><a name="[4af]"></a>ViewsImage_OnSetAnimated</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, views.o(.text.ViewsImage_OnSetAnimated))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = ViewsImage_OnSetAnimated &rArr; EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[2cc]"></a>ViewsImage_OnSetAutoSize</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, views.o(.text.ViewsImage_OnSetAutoSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ViewsImage_OnSetAutoSize &rArr; ViewsImage_GetContentArea &rArr; EwSetRectY
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
</UL>

<P><STRONG><a name="[2bb]"></a>ViewsImage_OnSetBitmap</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, views.o(.text.ViewsImage_OnSetBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = ViewsImage_OnSetBitmap &rArr; ViewsImage_OnSetAnimated &rArr; EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAnimated
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[4b0]"></a>ViewsImage_OnSetColor</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, views.o(.text.ViewsImage_OnSetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ViewsImage_OnSetColor &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompColor
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[2cd]"></a>ViewsImage_OnSetEmbedded</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, views.o(.text.ViewsImage_OnSetEmbedded))
<BR><BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__ChangeViewState
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
</UL>

<P><STRONG><a name="[4b1]"></a>ViewsImage_OnSetFrameNumber</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, views.o(.text.ViewsImage_OnSetFrameNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ViewsImage_OnSetFrameNumber &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[233]"></a>ViewsImage__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, views.o(.text.ViewsImage__Done))
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Done
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsImage)
</UL>
<P><STRONG><a name="[231]"></a>ViewsImage__Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, views.o(.text.ViewsImage__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ViewsImage__Init &rArr; CoreRectView__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsImage)
</UL>
<P><STRONG><a name="[232]"></a>ViewsImage__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, views.o(.text.ViewsImage__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__ReInit
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsImage)
</UL>
<P><STRONG><a name="[b0]"></a>ViewsImage_observerSlot</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, views.o(.text.ViewsImage_observerSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ViewsImage_observerSlot &rArr; ViewsImage_GetContentArea &rArr; EwSetRectY
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_GetContentArea
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.text.ViewsImage_OnSetBitmap)
</UL>
<P><STRONG><a name="[af]"></a>ViewsImage_timerSlot</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, views.o(.text.ViewsImage_timerSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = ViewsImage_timerSlot &rArr; EwDetachObjObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Address Reference Count : 2]<UL><LI> views.o(.text.ViewsImage_timerSlot)
<LI> views.o(.text.ViewsImage_OnSetAnimated)
</UL>
<P><STRONG><a name="[238]"></a>ViewsRectangle_Draw</STRONG> (Thumb, 136 bytes, Stack size 96 bytes, views.o(.text.ViewsRectangle_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1876<LI>Call Chain = ViewsRectangle_Draw &rArr; GraphicsCanvas_FillRectangle &rArr; EwFillRectangle &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_FillRectangle
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsRectangle)
</UL>
<P><STRONG><a name="[2a5]"></a>ViewsRectangle_OnSetColor</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, views.o(.text.ViewsRectangle_OnSetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ViewsRectangle_OnSetColor &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompColor
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
</UL>

<P><STRONG><a name="[237]"></a>ViewsRectangle__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, views.o(.text.ViewsRectangle__Done))
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Done
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Done
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Done
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Done
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Done
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Done
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Done
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsRectangle)
</UL>
<P><STRONG><a name="[235]"></a>ViewsRectangle__Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, views.o(.text.ViewsRectangle__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ViewsRectangle__Init &rArr; CoreRectView__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__Init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsRectangle)
</UL>
<P><STRONG><a name="[236]"></a>ViewsRectangle__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, views.o(.text.ViewsRectangle__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationWelcomeScreen__ReInit
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__ReInit
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__ReInit
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__ReInit
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__ReInit
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__ReInit
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__ReInit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsRectangle)
</UL>
<P><STRONG><a name="[23c]"></a>ViewsText_Draw</STRONG> (Thumb, 924 bytes, Stack size 232 bytes, views.o(.text.ViewsText_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 2124<LI>Call Chain = ViewsText_Draw &rArr; GraphicsCanvas_DrawText &rArr; EwDrawText &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStringFindChar
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringChar
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiIsRTL
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont_GetTextAdvance
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_DrawText
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSignal
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewPoint
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectW
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsText)
</UL>
<P><STRONG><a name="[4b2]"></a>ViewsText_GetContentArea</STRONG> (Thumb, 736 bytes, Stack size 112 bytes, views.o(.text.ViewsText_GetContentArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 1628<LI>Call Chain = ViewsText_GetContentArea &rArr; ResourcesFont_GetFlowTextAdvance &rArr; EwGetFlowTextAdvance &rArr; EwGetTextAdvance &rArr; GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetRectY
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetRectX
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetRectW
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringChar
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiIsRTL
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont_GetFlowTextAdvance
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSignal
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect2Point
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointPos
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectW
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectH
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_Draw
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
</UL>

<P><STRONG><a name="[4b4]"></a>ViewsText_OnSetAlignment</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, views.o(.text.ViewsText_OnSetAlignment))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ViewsText_OnSetAlignment &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
</UL>

<P><STRONG><a name="[23d]"></a>ViewsText_OnSetBounds</STRONG> (Thumb, 276 bytes, Stack size 88 bytes, views.o(.text.ViewsText_OnSetBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = ViewsText_OnSetBounds &rArr; CoreRectView_OnSetBounds &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectW
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompRect
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView_OnSetBounds
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsText)
</UL>
<P><STRONG><a name="[2a8]"></a>ViewsText_OnSetColor</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, views.o(.text.ViewsText_OnSetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ViewsText_OnSetColor &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompColor
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
</UL>

<P><STRONG><a name="[4b5]"></a>ViewsText_OnSetEllipsis</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, views.o(.text.ViewsText_OnSetEllipsis))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ViewsText_OnSetEllipsis &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsSlotNull
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
</UL>

<P><STRONG><a name="[4b7]"></a>ViewsText_OnSetEnableBidiText</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, views.o(.text.ViewsText_OnSetEnableBidiText))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ViewsText_OnSetEnableBidiText &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
</UL>

<P><STRONG><a name="[2ab]"></a>ViewsText_OnSetFont</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, views.o(.text.ViewsText_OnSetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ViewsText_OnSetFont &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
</UL>

<P><STRONG><a name="[4b8]"></a>ViewsText_OnSetOnUpdate</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, views.o(.text.ViewsText_OnSetOnUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ViewsText_OnSetOnUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsSlotNull
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompSlot
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
</UL>

<P><STRONG><a name="[2a7]"></a>ViewsText_OnSetString</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, views.o(.text.ViewsText_OnSetString))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ViewsText_OnSetString &rArr; EwCompString &rArr; VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwShareString
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplay_UpdateViewState
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
</UL>

<P><STRONG><a name="[4ba]"></a>ViewsText_OnSetWrapText</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, views.o(.text.ViewsText_OnSetWrapText))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ViewsText_OnSetWrapText &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsSlotNull
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButton_UpdateViewState
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButton_UpdateViewState
</UL>

<P><STRONG><a name="[23b]"></a>ViewsText__Done</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, views.o(.text.ViewsText__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = ViewsText__Done &rArr; EwFreeBidi &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeBidi
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Done
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Done
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Done
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Done
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Done
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Done
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsText)
</UL>
<P><STRONG><a name="[239]"></a>ViewsText__Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, views.o(.text.ViewsText__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ViewsText__Init &rArr; CoreRectView__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsText)
</UL>
<P><STRONG><a name="[23a]"></a>ViewsText__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, views.o(.text.ViewsText__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__ReInit
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__ReInit
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__ReInit
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__ReInit
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__ReInit
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__ReInit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsText)
</UL>
<P><STRONG><a name="[b3]"></a>ViewsText_preOnUpdateSlot</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, views.o(.text.ViewsText_preOnUpdateSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = ViewsText_preOnUpdateSlot &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Address Reference Count : 3]<UL><LI> views.o(.text.ViewsText_OnSetBounds)
<LI> views.o(.text.ViewsText_reparseSlot)
<LI> views.o(.text.ViewsText_OnSetAlignment)
</UL>
<P><STRONG><a name="[b2]"></a>ViewsText_preReparseSlot</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, views.o(.text.ViewsText_preReparseSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ViewsText_preReparseSlot &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Address Reference Count : 7]<UL><LI> views.o(.text.ViewsText_OnSetBounds)
<LI> views.o(.text.ViewsText_OnSetEnableBidiText)
<LI> views.o(.text.ViewsText_OnSetEllipsis)
<LI> views.o(.text.ViewsText_OnSetWrapText)
<LI> views.o(.text.ViewsText_OnSetAlignment)
<LI> views.o(.text.ViewsText_OnSetString)
<LI> views.o(.text.ViewsText_OnSetFont)
</UL>
<P><STRONG><a name="[b1]"></a>ViewsText_reparseSlot</STRONG> (Thumb, 1960 bytes, Stack size 152 bytes, views.o(.text.ViewsText_reparseSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 1772<LI>Call Chain = ViewsText_reparseSlot &rArr; ResourcesFont_ParseFlowString &rArr; EwParseFlowString &rArr; EwGetGlyphMetrics &rArr; GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStringMiddle
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwShareString
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetStringChar
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringChar
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeBidi
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBidi
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwConcatString
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwConcatCharString
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiIsRTL
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBidiIsNeeded
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont_ParseFlowString
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont_GetTextAdvance
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesFont_GetFlowTextAdvance
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringLength
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSignal
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewPoint
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectW
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectH
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Address Reference Count : 4]<UL><LI> views.o(.text.ViewsText_Draw)
<LI> views.o(.text.ViewsText_GetContentArea)
<LI> views.o(.text.ViewsText_preReparseSlot)
<LI> views.o(.text.ViewsText_reparseSlot)
</UL>
<P><STRONG><a name="[241]"></a>ViewsWarpImage_Draw</STRONG> (Thumb, 384 bytes, Stack size 168 bytes, views.o(.text.ViewsWarpImage_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 2156<LI>Call Chain = ViewsWarpImage_Draw &rArr; GraphicsCanvas_WarpBitmap &rArr; EwWarpBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIntersectRect2
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsCanvas_WarpBitmap
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResourcesBitmap__Update
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect2Point
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMoveRectPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsWarpImage)
</UL>
<P><STRONG><a name="[4bd]"></a>ViewsWarpImage_OnSetAnimated</STRONG> (Thumb, 192 bytes, Stack size 64 bytes, views.o(.text.ViewsWarpImage_OnSetAnimated))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = ViewsWarpImage_OnSetAnimated &rArr; EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetAutoObject
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetExtent
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetBitmap
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[4bf]"></a>ViewsWarpImage_OnSetBitmap</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, views.o(.text.ViewsWarpImage_OnSetBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = ViewsWarpImage_OnSetBitmap &rArr; ViewsWarpImage_OnSetAnimated &rArr; EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetAnimated
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[4c0]"></a>ViewsWarpImage_OnSetColor</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, views.o(.text.ViewsWarpImage_OnSetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ViewsWarpImage_OnSetColor &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompColor
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetExtent
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[4c1]"></a>ViewsWarpImage_OnSetFrameNumber</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, views.o(.text.ViewsWarpImage_OnSetFrameNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ViewsWarpImage_OnSetFrameNumber &rArr; CoreGroup__InvalidateArea
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetExtent
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[240]"></a>ViewsWarpImage__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, views.o(.text.ViewsWarpImage__Done))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsWarpImage)
</UL>
<P><STRONG><a name="[23e]"></a>ViewsWarpImage__Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, views.o(.text.ViewsWarpImage__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ViewsWarpImage__Init &rArr; CoreQuadView__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsWarpImage)
</UL>
<P><STRONG><a name="[23f]"></a>ViewsWarpImage__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, views.o(.text.ViewsWarpImage__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsWarpImage)
</UL>
<P><STRONG><a name="[b5]"></a>ViewsWarpImage_observerSlot</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, views.o(.text.ViewsWarpImage_observerSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ViewsWarpImage_observerSlot &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetExtent
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.text.ViewsWarpImage_OnSetBitmap)
</UL>
<P><STRONG><a name="[b4]"></a>ViewsWarpImage_timerSlot</STRONG> (Thumb, 214 bytes, Stack size 48 bytes, views.o(.text.ViewsWarpImage_timerSlot))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = ViewsWarpImage_timerSlot &rArr; EwDetachObjObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetExtent
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Address Reference Count : 2]<UL><LI> views.o(.text.ViewsWarpImage_timerSlot)
<LI> views.o(.text.ViewsWarpImage_OnSetAnimated)
</UL>
<P><STRONG><a name="[245]"></a>ViewsWarpView_OnSetPoint1</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, views.o(.text.ViewsWarpView_OnSetPoint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ViewsWarpView_OnSetPoint1 &rArr; CoreQuadView_OnSetPoint1 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint1
</UL>
<BR>[Address Reference Count : 2]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
</UL>
<P><STRONG><a name="[244]"></a>ViewsWarpView_OnSetPoint2</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, views.o(.text.ViewsWarpView_OnSetPoint2))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ViewsWarpView_OnSetPoint2 &rArr; CoreQuadView_OnSetPoint2 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
</UL>
<P><STRONG><a name="[243]"></a>ViewsWarpView_OnSetPoint3</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, views.o(.text.ViewsWarpView_OnSetPoint3))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ViewsWarpView_OnSetPoint3 &rArr; CoreQuadView_OnSetPoint3 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint3
</UL>
<BR>[Address Reference Count : 2]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
</UL>
<P><STRONG><a name="[242]"></a>ViewsWarpView_OnSetPoint4</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, views.o(.text.ViewsWarpView_OnSetPoint4))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ViewsWarpView_OnSetPoint4 &rArr; CoreQuadView_OnSetPoint4 &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView_OnSetPoint4
</UL>
<BR>[Address Reference Count : 2]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
<LI> views.o(.rodata.__vmt_ViewsWarpImage)
</UL>
<P><STRONG><a name="[4c2]"></a>ViewsWarpView_OnSetSourceAnchor</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, views.o(.text.ViewsWarpView_OnSetSourceAnchor))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ViewsWarpView_OnSetSourceAnchor &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[4c3]"></a>ViewsWarpView_Warp3D</STRONG> (Thumb, 660 bytes, Stack size 112 bytes, views.o(.text.ViewsWarpView_Warp3D))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = ViewsWarpView_Warp3D &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix_Project
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix_Assign
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwThrow
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect2Point
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewPoint
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetExtent
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGauge_UpdateViewState
</UL>

<P><STRONG><a name="[248]"></a>ViewsWarpView__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, views.o(.text.ViewsWarpView__Done))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
</UL>
<P><STRONG><a name="[246]"></a>ViewsWarpView__Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, views.o(.text.ViewsWarpView__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ViewsWarpView__Init &rArr; CoreQuadView__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
</UL>
<P><STRONG><a name="[247]"></a>ViewsWarpView__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, views.o(.text.ViewsWarpView__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> views.o(.rodata.__vmt_ViewsWarpView)
</UL>
<P><STRONG><a name="[b6]"></a>ViewsWarpView_update</STRONG> (Thumb, 800 bytes, Stack size 112 bytes, views.o(.text.ViewsWarpView_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = ViewsWarpView_update &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix_Project
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix_DeriveFromQuad
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix_CalculateZ
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect2Point
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewPoint
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__GetExtent
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__InvalidateArea
</UL>
<BR>[Address Reference Count : 6]<UL><LI> views.o(.text.ViewsWarpView_OnSetPoint4)
<LI> views.o(.text.ViewsWarpView_OnSetPoint3)
<LI> views.o(.text.ViewsWarpView_OnSetPoint2)
<LI> views.o(.text.ViewsWarpView_OnSetPoint1)
<LI> views.o(.text.ViewsWarpView_OnSetSourceAnchor)
<LI> views.o(.text.ViewsWarpImage_observerSlot)
</UL>
<P><STRONG><a name="[2a0]"></a>WidgetSetGaugeConfig_OnSetCenterOffset</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetCenterOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetGaugeConfig_OnSetCenterOffset &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[29f]"></a>WidgetSetGaugeConfig_OnSetNeedle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedle))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGaugeConfig_OnSetNeedle &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[29b]"></a>WidgetSetGaugeConfig_OnSetNeedleMaxAngle</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedleMaxAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGaugeConfig_OnSetNeedleMaxAngle &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[29c]"></a>WidgetSetGaugeConfig_OnSetNeedleMinAngle</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedleMinAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGaugeConfig_OnSetNeedleMinAngle &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[29d]"></a>WidgetSetGaugeConfig_OnSetNeedlePivot</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedlePivot))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetGaugeConfig_OnSetNeedlePivot &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[2a1]"></a>WidgetSetGaugeConfig_OnSetScale</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGaugeConfig_OnSetScale &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[296]"></a>WidgetSetGaugeConfig_OnSetSwingDuration</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetSwingDuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGaugeConfig_OnSetSwingDuration &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[295]"></a>WidgetSetGaugeConfig_OnSetSwingElastic</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetSwingElastic))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGaugeConfig_OnSetSwingElastic &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[298]"></a>WidgetSetGaugeConfig_OnSetTrackLeftColor</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetGaugeConfig_OnSetTrackLeftColor &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompColor
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[29a]"></a>WidgetSetGaugeConfig_OnSetTrackLeftRadius</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftRadius))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGaugeConfig_OnSetTrackLeftRadius &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[297]"></a>WidgetSetGaugeConfig_OnSetTrackLeftRoundedStart</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftRoundedStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGaugeConfig_OnSetTrackLeftRoundedStart &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[299]"></a>WidgetSetGaugeConfig_OnSetTrackLeftThickness</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftThickness))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGaugeConfig_OnSetTrackLeftThickness &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[2a2]"></a>WidgetSetGaugeConfig_OnSetWidgetMinSize</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetGaugeConfig_OnSetWidgetMinSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetGaugeConfig_OnSetWidgetMinSize &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationBlueGauge__Init
</UL>

<P><STRONG><a name="[250]"></a>WidgetSetGaugeConfig__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetGaugeConfig__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetGaugeConfig)
</UL>
<P><STRONG><a name="[24e]"></a>WidgetSetGaugeConfig__Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetGaugeConfig__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetGaugeConfig__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetGaugeConfig)
</UL>
<P><STRONG><a name="[24f]"></a>WidgetSetGaugeConfig__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetGaugeConfig__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetGaugeConfig)
</UL>
<P><STRONG><a name="[2b8]"></a>WidgetSetGauge_OnSetAppearance</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, widgetset.o(.text.WidgetSetGauge_OnSetAppearance))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = WidgetSetGauge_OnSetAppearance &rArr; EwDetachObjObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>

<P><STRONG><a name="[24c]"></a>WidgetSetGauge_OnSetBounds</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, widgetset.o(.text.WidgetSetGauge_OnSetBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = WidgetSetGauge_OnSetBounds &rArr; CoreGroup_OnSetBounds &rArr; CoreRectView_OnSetBounds &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
</UL>
<P><STRONG><a name="[2b2]"></a>WidgetSetGauge_OnSetCurrentValue</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGauge_OnSetCurrentValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGauge_OnSetCurrentValue &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>

<P><STRONG><a name="[2b1]"></a>WidgetSetGauge_OnSetMaxValue</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGauge_OnSetMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGauge_OnSetMaxValue &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>

<P><STRONG><a name="[2b7]"></a>WidgetSetGauge_OnSetOutlet</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, widgetset.o(.text.WidgetSetGauge_OnSetOutlet))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = WidgetSetGauge_OnSetOutlet &rArr; EwDetachRefObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachRefObserver
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompRef
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachRefObserver
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>

<P><STRONG><a name="[24d]"></a>WidgetSetGauge_UpdateViewState</STRONG> (Thumb, 700 bytes, Stack size 88 bytes, widgetset.o(.text.WidgetSetGauge_UpdateViewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = WidgetSetGauge_UpdateViewState &rArr; ViewsWarpView_Warp3D &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_UpdateViewState
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_Warp3D
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpView_OnSetSourceAnchor
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetFrameNumber
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetColor
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetBitmap
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsWarpImage_OnSetAnimated
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetFrameNumber
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetColor
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAnimated
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetPath
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetOffset
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetFillRule
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFillPath_OnSetColor
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix_Rotate
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetStyle
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetStartAngle
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetRadius
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetInnerRadius
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnSetEndAngle
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath_OnGetInnerRadius
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointPos
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectCenter
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_RestackTop
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
</UL>
<P><STRONG><a name="[24b]"></a>WidgetSetGauge__Done</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetGauge__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetGauge__Done
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFloatEffect__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
</UL>
<P><STRONG><a name="[249]"></a>WidgetSetGauge__Init</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, widgetset.o(.text.WidgetSetGauge__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = WidgetSetGauge__Init &rArr; CoreGroup__Init &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetEnabled
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFloatEffect__Init
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetTiming
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetNoOfCycles
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
</UL>
<P><STRONG><a name="[24a]"></a>WidgetSetGauge__ReInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetGauge__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetGauge__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFloatEffect__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetGauge)
</UL>
<P><STRONG><a name="[b8]"></a>WidgetSetGauge_onConfigChanged</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetGauge_onConfigChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WidgetSetGauge_onConfigChanged &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetGauge_OnSetAppearance)
</UL>
<P><STRONG><a name="[bb]"></a>WidgetSetGauge_onEndFloatEffect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetGauge_onEndFloatEffect))
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetGauge__Init)
</UL>
<P><STRONG><a name="[bc]"></a>WidgetSetGauge_onFloatEffect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetGauge_onFloatEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGauge_onFloatEffect &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetGauge__Init)
</UL>
<P><STRONG><a name="[ba]"></a>WidgetSetGauge_onOutlet</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetGauge_onOutlet))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetGauge_onOutlet &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwOnGetInt32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetGauge_OnSetOutlet)
</UL>
<P><STRONG><a name="[b9]"></a>WidgetSetGauge_onUpdateAngle</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, widgetset.o(.text.WidgetSetGauge_onUpdateAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = WidgetSetGauge_onUpdateAngle &rArr; EffectsEffect_OnSetEnabled &rArr; EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetTiming
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetEnabled
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetCycleDuration
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 4]<UL><LI> widgetset.o(.text.WidgetSetGauge_onConfigChanged)
<LI> widgetset.o(.text.WidgetSetGauge_onOutlet)
<LI> widgetset.o(.text.WidgetSetGauge_OnSetCurrentValue)
<LI> widgetset.o(.text.WidgetSetGauge_OnSetMaxValue)
</UL>
<P><STRONG><a name="[258]"></a>WidgetSetHorizontalValueBarConfig__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetHorizontalValueBarConfig__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBarConfig)
</UL>
<P><STRONG><a name="[256]"></a>WidgetSetHorizontalValueBarConfig__Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetHorizontalValueBarConfig__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetHorizontalValueBarConfig__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBarConfig)
</UL>
<P><STRONG><a name="[257]"></a>WidgetSetHorizontalValueBarConfig__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetHorizontalValueBarConfig__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBarConfig)
</UL>
<P><STRONG><a name="[149]"></a>WidgetSetHorizontalValueBar_Medium__Init</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_Medium__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = WidgetSetHorizontalValueBar_Medium__Init &rArr; EwLoadResource &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata._WidgetSetHorizontalValueBar_Medium)
</UL>
<P><STRONG><a name="[2c4]"></a>WidgetSetHorizontalValueBar_OnSetAppearance</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetAppearance))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = WidgetSetHorizontalValueBar_OnSetAppearance &rArr; EwDetachObjObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
</UL>

<P><STRONG><a name="[254]"></a>WidgetSetHorizontalValueBar_OnSetBounds</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = WidgetSetHorizontalValueBar_OnSetBounds &rArr; CoreGroup_OnSetBounds &rArr; CoreRectView_OnSetBounds &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
</UL>
<P><STRONG><a name="[2c2]"></a>WidgetSetHorizontalValueBar_OnSetMaxValue</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetHorizontalValueBar_OnSetMaxValue &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
</UL>

<P><STRONG><a name="[2c3]"></a>WidgetSetHorizontalValueBar_OnSetOutlet</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetOutlet))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = WidgetSetHorizontalValueBar_OnSetOutlet &rArr; EwDetachRefObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachRefObserver
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompRef
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachRefObserver
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
</UL>

<P><STRONG><a name="[255]"></a>WidgetSetHorizontalValueBar_UpdateViewState</STRONG> (Thumb, 730 bytes, Stack size 120 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_UpdateViewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = WidgetSetHorizontalValueBar_UpdateViewState &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_UpdateViewState
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetVisible
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetNoEdgesLimit
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetFrameNumber
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetEdges
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetColor
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetBitmap
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetAnimated
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectW
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectH
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_RestackTop
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetPointX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
</UL>
<P><STRONG><a name="[253]"></a>WidgetSetHorizontalValueBar__Done</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetHorizontalValueBar__Done
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFloatEffect__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
</UL>
<P><STRONG><a name="[251]"></a>WidgetSetHorizontalValueBar__Init</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = WidgetSetHorizontalValueBar__Init &rArr; CoreGroup__Init &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFloatEffect__Init
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetTiming
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetNoOfCycles
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
</UL>
<P><STRONG><a name="[252]"></a>WidgetSetHorizontalValueBar__ReInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetHorizontalValueBar__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFloatEffect__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetHorizontalValueBar)
</UL>
<P><STRONG><a name="[bd]"></a>WidgetSetHorizontalValueBar_onConfigChanged</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_onConfigChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WidgetSetHorizontalValueBar_onConfigChanged &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetAppearance)
</UL>
<P><STRONG><a name="[c0]"></a>WidgetSetHorizontalValueBar_onEndFloatEffect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_onEndFloatEffect))
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetHorizontalValueBar__Init)
</UL>
<P><STRONG><a name="[c1]"></a>WidgetSetHorizontalValueBar_onFloatEffect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_onFloatEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetHorizontalValueBar_onFloatEffect &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetHorizontalValueBar__Init)
</UL>
<P><STRONG><a name="[bf]"></a>WidgetSetHorizontalValueBar_onOutlet</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_onOutlet))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetHorizontalValueBar_onOutlet &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwOnGetInt32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetOutlet)
</UL>
<P><STRONG><a name="[be]"></a>WidgetSetHorizontalValueBar_onUpdatePos</STRONG> (Thumb, 264 bytes, Stack size 40 bytes, widgetset.o(.text.WidgetSetHorizontalValueBar_onUpdatePos))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = WidgetSetHorizontalValueBar_onUpdatePos &rArr; EffectsEffect_OnSetEnabled &rArr; EwGetAutoObject &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetTiming
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetEnabled
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect_OnSetCycleDuration
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 3]<UL><LI> widgetset.o(.text.WidgetSetHorizontalValueBar_onConfigChanged)
<LI> widgetset.o(.text.WidgetSetHorizontalValueBar_onOutlet)
<LI> widgetset.o(.text.WidgetSetHorizontalValueBar_OnSetMaxValue)
</UL>
<P><STRONG><a name="[260]"></a>WidgetSetPushButtonConfig__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetPushButtonConfig__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetPushButtonConfig)
</UL>
<P><STRONG><a name="[25e]"></a>WidgetSetPushButtonConfig__Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetPushButtonConfig__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetPushButtonConfig__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetPushButtonConfig)
</UL>
<P><STRONG><a name="[25f]"></a>WidgetSetPushButtonConfig__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetPushButtonConfig__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetPushButtonConfig)
</UL>
<P><STRONG><a name="[14a]"></a>WidgetSetPushButton_Medium__Init</STRONG> (Thumb, 1026 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetPushButton_Medium__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = WidgetSetPushButton_Medium__Init &rArr; EwLoadResource &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompColor
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata._WidgetSetPushButton_Medium)
</UL>
<P><STRONG><a name="[2af]"></a>WidgetSetPushButton_OnSetAppearance</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, widgetset.o(.text.WidgetSetPushButton_OnSetAppearance))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = WidgetSetPushButton_OnSetAppearance &rArr; EwDetachObjObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
</UL>

<P><STRONG><a name="[25c]"></a>WidgetSetPushButton_OnSetBounds</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, widgetset.o(.text.WidgetSetPushButton_OnSetBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = WidgetSetPushButton_OnSetBounds &rArr; CoreGroup_OnSetBounds &rArr; CoreRectView_OnSetBounds &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[2ad]"></a>WidgetSetPushButton_OnSetIcon</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetPushButton_OnSetIcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetPushButton_OnSetIcon &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
</UL>

<P><STRONG><a name="[2a9]"></a>WidgetSetPushButton_OnSetLabel</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetPushButton_OnSetLabel))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WidgetSetPushButton_OnSetLabel &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwShareString
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
</UL>

<P><STRONG><a name="[25d]"></a>WidgetSetPushButton_UpdateViewState</STRONG> (Thumb, 772 bytes, Stack size 104 bytes, widgetset.o(.text.WidgetSetPushButton_UpdateViewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = WidgetSetPushButton_UpdateViewState &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetBitmap
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_UpdateViewState
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetWrapText
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetEnableBidiText
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetEllipsis
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetAlignment
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetFrameNumber
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetColor
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAnimated
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsImage_OnSetAlignment
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetFrameNumber
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetColor
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetBitmap
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetAnimated
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_RestackTop
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[25b]"></a>WidgetSetPushButton__Done</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetPushButton__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = WidgetSetPushButton__Done &rArr; CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__Done
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Done
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Done
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Done
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Done
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Done
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Done
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[259]"></a>WidgetSetPushButton__Init</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, widgetset.o(.text.WidgetSetPushButton__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = WidgetSetPushButton__Init &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_OnSetLayout
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__Init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint4
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint3
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint2
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint1
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__Init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetPeriod
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetBegin
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_OnSetRetargetOffset
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_OnSetMaxStrikeCount
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[25a]"></a>WidgetSetPushButton__ReInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetPushButton__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetPushButton__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__ReInit
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__ReInit
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationMenu__ReInit
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__ReInit
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDetectorScreen__ReInit
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDebug__ReInit
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__ReInit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCalibration__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetPushButton)
</UL>
<P><STRONG><a name="[c2]"></a>WidgetSetPushButton_onConfigChanged</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetPushButton_onConfigChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WidgetSetPushButton_onConfigChanged &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__ChangeViewState
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetPushButton_OnSetAppearance)
</UL>
<P><STRONG><a name="[c7]"></a>WidgetSetPushButton_onEnterTouch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetPushButton_onEnterTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetPushButton_onEnterTouch &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetPushButton__Init)
</UL>
<P><STRONG><a name="[c3]"></a>WidgetSetPushButton_onFlashTimer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetPushButton_onFlashTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetPushButton_onFlashTimer &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetPushButton__Init)
</UL>
<P><STRONG><a name="[c6]"></a>WidgetSetPushButton_onLeaveTouch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetPushButton_onLeaveTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetPushButton_onLeaveTouch &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetPushButton__Init)
</UL>
<P><STRONG><a name="[c5]"></a>WidgetSetPushButton_onPressKey</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetPushButton_onPressKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetPushButton_onPressKey &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_OnSetEnabled
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetPushButton__Init)
</UL>
<P><STRONG><a name="[c9]"></a>WidgetSetPushButton_onPressTouch</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetPushButton_onPressTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = WidgetSetPushButton_onPressTouch &rArr; CoreTimer_OnSetEnabled &rArr; EwCreateTimer &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetPushButton__Init)
</UL>
<P><STRONG><a name="[c4]"></a>WidgetSetPushButton_onReleaseKey</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetPushButton_onReleaseKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WidgetSetPushButton_onReleaseKey &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetBegin
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_OnSetEnabled
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetPushButton__Init)
</UL>
<P><STRONG><a name="[c8]"></a>WidgetSetPushButton_onReleaseTouch</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetPushButton_onReleaseTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetPushButton_onReleaseTouch &rArr; CoreTimer_OnSetEnabled &rArr; EwCreateTimer &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetBegin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetPushButton__Init)
</UL>
<P><STRONG><a name="[14b]"></a>WidgetSetSwitch_Medium__Init</STRONG> (Thumb, 1818 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetSwitch_Medium__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = WidgetSetSwitch_Medium__Init &rArr; EwLoadResource &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompColor
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata._WidgetSetSwitch_Medium)
</UL>
<P><STRONG><a name="[268]"></a>WidgetSetToggleButtonConfig__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetToggleButtonConfig__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButtonConfig)
</UL>
<P><STRONG><a name="[266]"></a>WidgetSetToggleButtonConfig__Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetToggleButtonConfig__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetToggleButtonConfig__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButtonConfig)
</UL>
<P><STRONG><a name="[267]"></a>WidgetSetToggleButtonConfig__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetToggleButtonConfig__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButtonConfig)
</UL>
<P><STRONG><a name="[2c9]"></a>WidgetSetToggleButton_OnSetAppearance</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, widgetset.o(.text.WidgetSetToggleButton_OnSetAppearance))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = WidgetSetToggleButton_OnSetAppearance &rArr; EwDetachObjObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
</UL>

<P><STRONG><a name="[264]"></a>WidgetSetToggleButton_OnSetBounds</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, widgetset.o(.text.WidgetSetToggleButton_OnSetBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = WidgetSetToggleButton_OnSetBounds &rArr; CoreGroup_OnSetBounds &rArr; CoreRectView_OnSetBounds &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
</UL>
<P><STRONG><a name="[2c7]"></a>WidgetSetToggleButton_OnSetChecked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetToggleButton_OnSetChecked))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetToggleButton_OnSetChecked &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
</UL>

<P><STRONG><a name="[2c6]"></a>WidgetSetToggleButton_OnSetLabel</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetToggleButton_OnSetLabel))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WidgetSetToggleButton_OnSetLabel &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwShareString
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
</UL>

<P><STRONG><a name="[2c8]"></a>WidgetSetToggleButton_OnSetOutlet</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, widgetset.o(.text.WidgetSetToggleButton_OnSetOutlet))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = WidgetSetToggleButton_OnSetOutlet &rArr; EwDetachRefObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachRefObserver
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompRef
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachRefObserver
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
</UL>

<P><STRONG><a name="[265]"></a>WidgetSetToggleButton_UpdateViewState</STRONG> (Thumb, 836 bytes, Stack size 104 bytes, widgetset.o(.text.WidgetSetToggleButton_UpdateViewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = WidgetSetToggleButton_UpdateViewState &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_UpdateViewState
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetWrapText
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetEnableBidiText
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetEllipsis
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetAlignment
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetFrameNumber
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetColor
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetBitmap
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsFrame_OnSetAnimated
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectW
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectH
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_RestackTop
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
</UL>
<P><STRONG><a name="[263]"></a>WidgetSetToggleButton__Done</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetToggleButton__Done))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = WidgetSetToggleButton__Done &rArr; CoreTimer__Done &rArr; EwDestroyTimer &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__Done
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
</UL>
<P><STRONG><a name="[261]"></a>WidgetSetToggleButton__Init</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, widgetset.o(.text.WidgetSetToggleButton__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = WidgetSetToggleButton__Init &rArr; CoreGroup_Add &rArr; EwLoadString &rArr; EwDecompress &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView_OnSetLayout
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__Init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint4
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint3
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint2
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__OnSetPoint1
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__Init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetPeriod
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetBegin
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_OnSetRetargetOffset
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_OnSetMaxStrikeCount
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
</UL>
<P><STRONG><a name="[262]"></a>WidgetSetToggleButton__ReInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetToggleButton__ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetToggleButton__ReInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__ReInit
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationSettings__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetToggleButton)
</UL>
<P><STRONG><a name="[ca]"></a>WidgetSetToggleButton_onConfigChanged</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetToggleButton_onConfigChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WidgetSetToggleButton_onConfigChanged &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__ChangeViewState
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetToggleButton_OnSetAppearance)
</UL>
<P><STRONG><a name="[d0]"></a>WidgetSetToggleButton_onEnterTouch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetToggleButton_onEnterTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetToggleButton_onEnterTouch &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetToggleButton__Init)
</UL>
<P><STRONG><a name="[cc]"></a>WidgetSetToggleButton_onFlashTimer</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetToggleButton_onFlashTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetToggleButton_onFlashTimer &rArr; EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwOnSetBool
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetToggleButton__Init)
</UL>
<P><STRONG><a name="[cf]"></a>WidgetSetToggleButton_onLeaveTouch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetToggleButton_onLeaveTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetToggleButton_onLeaveTouch &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetToggleButton__Init)
</UL>
<P><STRONG><a name="[cb]"></a>WidgetSetToggleButton_onOutlet</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetToggleButton_onOutlet))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetToggleButton_onOutlet &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwOnGetBool
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetToggleButton_OnSetOutlet)
</UL>
<P><STRONG><a name="[ce]"></a>WidgetSetToggleButton_onPressKey</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetToggleButton_onPressKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetToggleButton_onPressKey &rArr; EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_OnSetEnabled
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwOnSetBool
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetToggleButton__Init)
</UL>
<P><STRONG><a name="[d2]"></a>WidgetSetToggleButton_onPressTouch</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetToggleButton_onPressTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetToggleButton_onPressTouch &rArr; EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwOnSetBool
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetToggleButton__Init)
</UL>
<P><STRONG><a name="[cd]"></a>WidgetSetToggleButton_onReleaseKey</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetToggleButton_onReleaseKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WidgetSetToggleButton_onReleaseKey &rArr; EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetBegin
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler_OnSetEnabled
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwOnSetBool
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetToggleButton__Init)
</UL>
<P><STRONG><a name="[d1]"></a>WidgetSetToggleButton_onReleaseTouch</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetToggleButton_onReleaseTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WidgetSetToggleButton_onReleaseTouch &rArr; EwNotifyRefObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetEnabled
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer_OnSetBegin
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwOnSetBool
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetToggleButton__Init)
</UL>
<P><STRONG><a name="[270]"></a>WidgetSetValueDisplayConfig__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetValueDisplayConfig__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplayConfig)
</UL>
<P><STRONG><a name="[26e]"></a>WidgetSetValueDisplayConfig__Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetValueDisplayConfig__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetValueDisplayConfig__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplayConfig)
</UL>
<P><STRONG><a name="[26f]"></a>WidgetSetValueDisplayConfig__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetValueDisplayConfig__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplayConfig)
</UL>
<P><STRONG><a name="[14c]"></a>WidgetSetValueDisplay_Medium__Init</STRONG> (Thumb, 534 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetValueDisplay_Medium__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = WidgetSetValueDisplay_Medium__Init &rArr; EwLoadResource &rArr; EwNewObjectIndirect &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadResource
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwShareString
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompColor
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompPoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata._WidgetSetValueDisplay_Medium)
</UL>
<P><STRONG><a name="[2ba]"></a>WidgetSetValueDisplay_OnSetAppearance</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, widgetset.o(.text.WidgetSetValueDisplay_OnSetAppearance))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = WidgetSetValueDisplay_OnSetAppearance &rArr; EwDetachObjObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachObjObserver
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachObjObserver
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>

<P><STRONG><a name="[26c]"></a>WidgetSetValueDisplay_OnSetBounds</STRONG> (Thumb, 190 bytes, Stack size 56 bytes, widgetset.o(.text.WidgetSetValueDisplay_OnSetBounds))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = WidgetSetValueDisplay_OnSetBounds &rArr; CoreGroup_OnSetBounds &rArr; CoreRectView_OnSetBounds &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_OnSetBounds
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMovePointNeg
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
</UL>
<P><STRONG><a name="[2b9]"></a>WidgetSetValueDisplay_OnSetOutlet</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, widgetset.o(.text.WidgetSetValueDisplay_OnSetOutlet))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = WidgetSetValueDisplay_OnSetOutlet &rArr; EwDetachRefObserver &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDetachRefObserver
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompRef
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAttachRefObserver
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>

<P><STRONG><a name="[2b5]"></a>WidgetSetValueDisplay_OnSetPrecision</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetValueDisplay_OnSetPrecision))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetValueDisplay_OnSetPrecision &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>

<P><STRONG><a name="[2b4]"></a>WidgetSetValueDisplay_OnSetUnit</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetValueDisplay_OnSetUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WidgetSetValueDisplay_OnSetUnit &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwShareString
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>

<P><STRONG><a name="[26d]"></a>WidgetSetValueDisplay_UpdateViewState</STRONG> (Thumb, 588 bytes, Stack size 192 bytes, widgetset.o(.text.WidgetSetValueDisplay_UpdateViewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 1820<LI>Call Chain = WidgetSetValueDisplay_UpdateViewState &rArr; ViewsText_GetContentArea &rArr; ResourcesFont_GetFlowTextAdvance &rArr; EwGetFlowTextAdvance &rArr; EwGetTextAdvance &rArr; GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewObjectIndirect
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetString
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetFont
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetColor
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_UpdateViewState
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Add
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetOnUpdate
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetEnableBidiText
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_OnSetAlignment
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ViewsText_GetContentArea
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwIsRectEmpty
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetRectORect
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_Remove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
</UL>
<P><STRONG><a name="[26b]"></a>WidgetSetValueDisplay__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetValueDisplay__Done))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Done
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
</UL>
<P><STRONG><a name="[269]"></a>WidgetSetValueDisplay__Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetValueDisplay__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WidgetSetValueDisplay__Init &rArr; CoreGroup__Init &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
</UL>
<P><STRONG><a name="[26a]"></a>WidgetSetValueDisplay__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetValueDisplay__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationDistanceMeasurement__ReInit
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationCurrentMeasurement__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetValueDisplay)
</UL>
<P><STRONG><a name="[d3]"></a>WidgetSetValueDisplay_onConfigChanged</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, widgetset.o(.text.WidgetSetValueDisplay_onConfigChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = WidgetSetValueDisplay_onConfigChanged &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__OnSetBounds
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetValueDisplay_OnSetAppearance)
</UL>
<P><STRONG><a name="[d5]"></a>WidgetSetValueDisplay_onFormatValue</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetValueDisplay_onFormatValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = WidgetSetValueDisplay_onFormatValue &rArr; EwNewStringFloat &rArr; AllocString &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadString
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwShareString
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwConcatString
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStringRemove
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewStringFloat
</UL>
<BR>[Address Reference Count : 3]<UL><LI> widgetset.o(.text.WidgetSetValueDisplay_onConfigChanged)
<LI> widgetset.o(.text.WidgetSetValueDisplay_onOutlet)
<LI> widgetset.o(.text.WidgetSetValueDisplay_OnSetPrecision)
</UL>
<P><STRONG><a name="[d6]"></a>WidgetSetValueDisplay_onLayoutViews</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetValueDisplay_onLayoutViews))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetValueDisplay_onLayoutViews &rArr; CoreGroup_InvalidateViewState &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup_InvalidateViewState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetValueDisplay_UpdateViewState)
</UL>
<P><STRONG><a name="[d4]"></a>WidgetSetValueDisplay_onOutlet</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, widgetset.o(.text.WidgetSetValueDisplay_onOutlet))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetValueDisplay_onOutlet &rArr; EwPostSignal &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewSlot
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwOnGetInt32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.text.WidgetSetValueDisplay_OnSetOutlet)
</UL>
<P><STRONG><a name="[273]"></a>WidgetSetWidgetConfig__Done</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetWidgetConfig__Done))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetWidgetConfig)
</UL>
<P><STRONG><a name="[271]"></a>WidgetSetWidgetConfig__Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, widgetset.o(.text.WidgetSetWidgetConfig__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetSetWidgetConfig__Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetWidgetConfig)
</UL>
<P><STRONG><a name="[272]"></a>WidgetSetWidgetConfig__ReInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetWidgetConfig__ReInit))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XObject__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widgetset.o(.rodata.__vmt_WidgetSetWidgetConfig)
</UL>
<P><STRONG><a name="[b7]"></a>WidgetSetWidgetConfig_onInvalidate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widgetset.o(.text.WidgetSetWidgetConfig_onInvalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = WidgetSetWidgetConfig_onInvalidate &rArr; EwNotifyObjObservers &rArr; AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyObjObservers
</UL>
<BR>[Address Reference Count : 17]<UL><LI> widgetset.o(.text.WidgetSetValueDisplay_Medium__Init)
<LI> widgetset.o(.text.WidgetSetSwitch_Medium__Init)
<LI> widgetset.o(.text.WidgetSetPushButton_Medium__Init)
<LI> widgetset.o(.text.WidgetSetHorizontalValueBar_Medium__Init)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetSwingElastic)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetSwingDuration)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftRoundedStart)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftColor)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftThickness)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetTrackLeftRadius)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedleMaxAngle)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedleMinAngle)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedlePivot)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetNeedle)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetCenterOffset)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetScale)
<LI> widgetset.o(.text.WidgetSetGaugeConfig_OnSetWidgetMinSize)
</UL>
<P><STRONG><a name="[276]"></a>XObject__Done</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewobject.o(.text.XObject__Done))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemplatesDeviceClass__Done
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__Done
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Done
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Done
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix__Done
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath__Done
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath__Done
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader__Done
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__Done
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTimingList__Done
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition__Done
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFloatEffect__Done
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFader__Done
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect__Done
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__Done
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__Done
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask__Done
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue__Done
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__Done
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Done
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__Done
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreOutline__Done
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreLayoutQuadContext__Done
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreLayoutContext__Done
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__Done
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyEvent__Done
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreEvent__Done
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreDragEvent__Done
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreDialogContext__Done
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorHit__Done
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorGrabEvent__Done
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorEvent__Done
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetWidgetConfig__Done
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplayConfig__Done
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButtonConfig__Done
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButtonConfig__Done
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBarConfig__Done
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig__Done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewobject.o(.rodata.__vmt_XObject)
</UL>
<P><STRONG><a name="[274]"></a>XObject__Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ewobject.o(.text.XObject__Init))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemplatesDeviceClass__Init
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__Init
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__Init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__Init
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix__Init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath__Init
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath__Init
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader__Init
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__Init
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTimingList__Init
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition__Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFloatEffect__Init
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFader__Init
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect__Init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__Init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__Init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask__Init
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue__Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__Init
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__Init
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreOutline__Init
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreLayoutQuadContext__Init
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreLayoutContext__Init
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__Init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyEvent__Init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreEvent__Init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreDragEvent__Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreDialogContext__Init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorHit__Init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorGrabEvent__Init
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorEvent__Init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetWidgetConfig__Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplayConfig__Init
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButtonConfig__Init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButtonConfig__Init
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBarConfig__Init
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig__Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewobject.o(.rodata.__vmt_XObject)
</UL>
<P><STRONG><a name="[275]"></a>XObject__ReInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ewobject.o(.text.XObject__ReInit))
<BR><BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemplatesDeviceClass__ReInit
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreSimpleTouchHandler__ReInit
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRoot__ReInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreGroup__ReInit
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsWarpMatrix__ReInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsPath__ReInit
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GraphicsArcPath__ReInit
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsVisibilityFader__ReInit
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTransition__ReInit
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsTimingList__ReInit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsShowHideTransition__ReInit
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFloatEffect__ReInit
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsFader__ReInit
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EffectsEffect__ReInit
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreView__ReInit
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTimer__ReInit
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTask__ReInit
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreTaskQueue__ReInit
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreResource__ReInit
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreRectView__ReInit
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreQuadView__ReInit
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreOutline__ReInit
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreLayoutQuadContext__ReInit
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreLayoutContext__ReInit
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyPressHandler__ReInit
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreKeyEvent__ReInit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreEvent__ReInit
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreDragEvent__ReInit
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreDialogContext__ReInit
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorHit__ReInit
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorGrabEvent__ReInit
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CoreCursorEvent__ReInit
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetWidgetConfig__ReInit
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetValueDisplayConfig__ReInit
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetToggleButtonConfig__ReInit
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetPushButtonConfig__ReInit
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetHorizontalValueBarConfig__ReInit
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetSetGaugeConfig__ReInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewobject.o(.rodata.__vmt_XObject)
</UL>
<P><STRONG><a name="[32c]"></a>cmDisableLampTest</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, api.o(.text.cmDisableLampTest))
<BR><BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtLedDisableLamptest
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_DisableLampTest
</UL>

<P><STRONG><a name="[335]"></a>cmGetAngle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, api.o(.text.cmGetAngle))
<BR><BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_ProcessData
</UL>

<P><STRONG><a name="[333]"></a>cmGetCurrent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, api.o(.text.cmGetCurrent))
<BR><BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_ProcessData
</UL>

<P><STRONG><a name="[334]"></a>cmGetDistance</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, api.o(.text.cmGetDistance))
<BR><BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_ProcessData
</UL>

<P><STRONG><a name="[330]"></a>cmInitAll</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, api.o(.text.cmInitAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = cmInitAll &rArr; ExtLedInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtLedInit
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_Initialize
</UL>

<P><STRONG><a name="[336]"></a>cmSetLampTest</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, api.o(.text.cmSetLampTest))
<BR><BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtLedSetLamptest
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceDriver_SetLampTest
</UL>

<P><STRONG><a name="[379]"></a>ili9341_Init</STRONG> (Thumb, 658 bytes, Stack size 8 bytes, ili9341.o(.text.ili9341_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = ili9341_Init &rArr; LCD_IO_Init &rArr; SPIx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_WriteReg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_WriteData
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_Init
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayInit
</UL>

<P><STRONG><a name="[64]"></a>main</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = main &rArr; EwBspSystemInit &rArr; BSP_SDRAM_Init &rArr; BSP_SDRAM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspSystemInit
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspSystemDone
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspConsoleInit
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspConsoleDone
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4d8]"></a>osKernelStart</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cmsis_os.o(.text.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37a]"></a>osSemaphoreCreate</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, cmsis_os.o(.text.osSemaphoreCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = osSemaphoreCreate &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayInit
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsInit
</UL>

<P><STRONG><a name="[329]"></a>osSemaphoreRelease</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, cmsis_os.o(.text.osSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[37d]"></a>osSemaphoreWait</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, cmsis_os.o(.text.osSemaphoreWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = osSemaphoreWait &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayWaitForCompletion
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspDisplayInit
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsWaitForCompletion
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsLoadClut
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsInit
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFillBlend
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsFill
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopyBlend
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspGraphicsCopy
</UL>

<P><STRONG><a name="[384]"></a>osSignalWait</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, cmsis_os.o(.text.osSignalWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osSignalWait &rArr; xTaskNotifyWait &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspEventWait
</UL>

<P><STRONG><a name="[498]"></a>osSystickHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cmsis_os.o(.text.osSystickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osSystickHandler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4d7]"></a>osThreadCreate</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, cmsis_os.o(.text.osThreadCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osThreadCreate &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[383]"></a>osThreadGetId</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cmsis_os.o(.text.osThreadGetId))
<BR><BR>[Calls]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetCurrentTaskHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBspEventWait
</UL>

<P><STRONG><a name="[4f1]"></a>pvPortMalloc</STRONG> (Thumb, 596 bytes, Stack size 24 bytes, heap_4.o(.text.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[500]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(.text.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[504]"></a>pxPortInitialiseStack</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, port.o(.text.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[277]"></a>stmpe811_Init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stmpe811.o(.text.stmpe811_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = stmpe811_Init &rArr; IOE_Write &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Init
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P><STRONG><a name="[278]"></a>stmpe811_ReadID</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, stmpe811.o(.text.stmpe811_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = stmpe811_ReadID &rArr; IOE_Read &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P><STRONG><a name="[279]"></a>stmpe811_Reset</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stmpe811.o(.text.stmpe811_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = stmpe811_Reset &rArr; IOE_Write &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P><STRONG><a name="[27e]"></a>stmpe811_TS_ClearIT</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stmpe811.o(.text.stmpe811_TS_ClearIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = stmpe811_TS_ClearIT &rArr; IOE_Write &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P><STRONG><a name="[27b]"></a>stmpe811_TS_DetectTouch</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stmpe811.o(.text.stmpe811_TS_DetectTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = stmpe811_TS_DetectTouch &rArr; IOE_Write &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P><STRONG><a name="[280]"></a>stmpe811_TS_DisableIT</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stmpe811.o(.text.stmpe811_TS_DisableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = stmpe811_TS_DisableIT &rArr; IOE_Write &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P><STRONG><a name="[27d]"></a>stmpe811_TS_EnableIT</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stmpe811.o(.text.stmpe811_TS_EnableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = stmpe811_TS_EnableIT &rArr; IOE_Write &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P><STRONG><a name="[27c]"></a>stmpe811_TS_GetXY</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, stmpe811.o(.text.stmpe811_TS_GetXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = stmpe811_TS_GetXY &rArr; IOE_Write &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_ReadMultiple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P><STRONG><a name="[27f]"></a>stmpe811_TS_ITStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stmpe811.o(.text.stmpe811_TS_ITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = stmpe811_TS_ITStatus &rArr; IOE_Read &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P><STRONG><a name="[27a]"></a>stmpe811_TS_Start</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, stmpe811.o(.text.stmpe811_TS_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = stmpe811_TS_Start &rArr; IOE_Write &rArr; I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stmpe811.o(.data.stmpe811_ts_drv)
</UL>
<P><STRONG><a name="[4e8]"></a>uxListRemove</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, list.o(.text.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[4fb]"></a>vListInitialise</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, list.o(.text.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[503]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(.text.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[4ea]"></a>vListInsert</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, list.o(.text.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[4e9]"></a>vListInsertEnd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, list.o(.text.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[4eb]"></a>vPortEnterCritical</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, port.o(.text.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[4ec]"></a>vPortExitCritical</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, port.o(.text.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[4ed]"></a>vPortFree</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, heap_4.o(.text.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[4f7]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, port.o(.text.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[4ff]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, port.o(.text.vPortValidateInterruptPriority))
<BR><BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
</UL>

<P><STRONG><a name="[4fc]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(.text.vTaskInternalSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4f0]"></a>vTaskMissedYield</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(.text.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[4f4]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, tasks.o(.text.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4f5]"></a>vTaskPriorityDisinheritAfterTimeout</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, tasks.o(.text.vTaskPriorityDisinheritAfterTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityDisinheritAfterTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[4db]"></a>vTaskStartScheduler</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, tasks.o(.text.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[4f2]"></a>vTaskSuspendAll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tasks.o(.text.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[490]"></a>vTaskSwitchContext</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, tasks.o(.text.vTaskSwitchContext))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[4f6]"></a>xPortStartScheduler</STRONG> (Thumb, 382 bytes, Stack size 32 bytes, port.o(.text.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnableVFP
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvPortStartFirstTask
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[4e4]"></a>xPortSysTickHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, port.o(.text.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSystickHandler
</UL>

<P><STRONG><a name="[4de]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, queue.o(.text.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
</UL>

<P><STRONG><a name="[4dc]"></a>xQueueGenericCreate</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, queue.o(.text.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
</UL>

<P><STRONG><a name="[4dd]"></a>xQueueGenericSend</STRONG> (Thumb, 522 bytes, Stack size 48 bytes, queue.o(.text.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreCreate
</UL>

<P><STRONG><a name="[4df]"></a>xQueueGiveFromISR</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, queue.o(.text.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[4e0]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, queue.o(.text.xQueueReceiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
</UL>

<P><STRONG><a name="[4e1]"></a>xQueueSemaphoreTake</STRONG> (Thumb, 442 bytes, Stack size 48 bytes, queue.o(.text.xQueueSemaphoreTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreWait
</UL>

<P><STRONG><a name="[4fd]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, tasks.o(.text.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4e5]"></a>xTaskCreate</STRONG> (Thumb, 750 bytes, Stack size 40 bytes, tasks.o(.text.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadCreate
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[4e6]"></a>xTaskGetCurrentTaskHandle</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(.text.xTaskGetCurrentTaskHandle))
<BR><BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
</UL>

<P><STRONG><a name="[4e3]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tasks.o(.text.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSystickHandler
</UL>

<P><STRONG><a name="[4fa]"></a>xTaskIncrementTick</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, tasks.o(.text.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[4e2]"></a>xTaskNotifyWait</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, tasks.o(.text.xTaskNotifyWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xTaskNotifyWait &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSignalWait
</UL>

<P><STRONG><a name="[4fe]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, tasks.o(.text.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[501]"></a>xTaskPriorityInherit</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, tasks.o(.text.xTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[4ef]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, tasks.o(.text.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[4f3]"></a>xTaskResumeAll</STRONG> (Thumb, 312 bytes, Stack size 40 bytes, tasks.o(.text.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[50b]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>

<P><STRONG><a name="[421]"></a>__hardfp_cosf</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, cosf.o(i.__hardfp_cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __hardfp_cosf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathCos
</UL>

<P><STRONG><a name="[422]"></a>__hardfp_powf</STRONG> (Thumb, 1606 bytes, Stack size 32 bytes, powf.o(i.__hardfp_powf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __hardfp_powf
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_overflow
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_divzero
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathPow
</UL>

<P><STRONG><a name="[520]"></a>__mathlib_powf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, powf.o(i.__hardfp_powf), UNUSED)

<P><STRONG><a name="[425]"></a>__hardfp_sinf</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, sinf.o(i.__hardfp_sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathSin
</UL>

<P><STRONG><a name="[426]"></a>__hardfp_sqrtf</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sqrtf.o(i.__hardfp_sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathSqrt
</UL>

<P><STRONG><a name="[50e]"></a>__mathlib_flt_divzero</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_divzero))
<BR><BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>

<P><STRONG><a name="[508]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[50d]"></a>__mathlib_flt_infnan2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan2))
<BR><BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>

<P><STRONG><a name="[507]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[50a]"></a>__mathlib_flt_overflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_overflow))
<BR><BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>

<P><STRONG><a name="[50c]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>

<P><STRONG><a name="[505]"></a>__mathlib_rredf2</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __mathlib_rredf2
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[521]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[522]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[523]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[506]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[483]"></a>I2Cx_Init</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, stm32f429i_discovery.o(.text.I2Cx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = I2Cx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetState
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_ReadMultiple
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Init
</UL>

<P><STRONG><a name="[48d]"></a>SPIx_Init</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, stm32f429i_discovery.o(.text.SPIx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SPIx_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_GetState
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_WriteReg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_WriteData
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IO_Init
</UL>

<P><STRONG><a name="[469]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 636 bytes, Stack size 40 bytes, stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_RequestMemoryRead
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[46b]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 450 bytes, Stack size 40 bytes, stm32f4xx_hal_i2c.o(.text.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_RequestMemoryWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[46f]"></a>LTDC_SetConfig</STRONG> (Thumb, 288 bytes, Stack size 20 bytes, stm32f4xx_hal_ltdc.o(.text.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[482]"></a>UART_SetConfig</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(.text.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[480]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>

<P><STRONG><a name="[d9]"></a>GuiThread</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(.text.GuiThread))
<BR><BR>[Stack]<UL><LI>Max Depth = 2236<LI>Call Chain = GuiThread &rArr; EwProcess &rArr; EwEndUpdate &rArr; EwCopyBitmap &rArr; MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwProcess
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrintSystemInfo
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInit
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.rodata..L__const.main.os_thread_def_EwThreadHandle)
</UL>
<P><STRONG><a name="[4ee]"></a>prvUnlockQueue</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, queue.o(.text.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[4e7]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, tasks.o(.text.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
</UL>

<P><STRONG><a name="[d8]"></a>prvIdleTask</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, tasks.o(.text.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = prvIdleTask &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(.text.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[4f9]"></a>prvPortStartFirstTask</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, port.o(.text.prvPortStartFirstTask))
<BR><BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[d7]"></a>prvTaskExitError</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, port.o(.text.prvTaskExitError))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = prvTaskExitError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> port.o(.text.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[4f8]"></a>vPortEnableVFP</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, port.o(.text.vPortEnableVFP))
<BR><BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[7e]"></a>TimerProc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, core.o(.text.TimerProc))
<BR>[Address Reference Count : 5]<UL><LI> core.o(.text.CoreRoot__Init)
<LI> core.o(.text.CoreTimer_OnSetPeriod)
<LI> core.o(.text.CoreTimer_OnSetEnabled)
<LI> core.o(.text.CoreRoot_DriveMultiTouchHitting)
<LI> core.o(.text.CoreTimer_OnSetBegin)
</UL>
<P><STRONG><a name="[33a]"></a>DrawFrameGrid</STRONG> (Thumb, 290 bytes, Stack size 112 bytes, ewgfx.o(.text.DrawFrameGrid))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockSurface
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapBitmapFrame
</UL>

<P><STRONG><a name="[3d3]"></a>GetGlyph</STRONG> (Thumb, 438 bytes, Stack size 120 bytes, ewgfx.o(.text.GetGlyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + In Cycle
<LI>Call Chain = GetGlyph &rArr;  GetGlyph (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockGlyphCache
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockGlyphCache
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeGlyph
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntLoadGlyph
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFntGetGlyphMetrics
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFindGlyph
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorSD
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDiscardGlyph
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateGlyph
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTextAdvance
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGlyph
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetGlyphMetrics
</UL>

<P><STRONG><a name="[3af]"></a>InitBitmap</STRONG> (Thumb, 868 bytes, Stack size 80 bytes, ewgfx.o(.text.InitBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = InitBitmap &rArr; EwErrorDD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwZero
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorDD
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBitmap
</UL>

<P><STRONG><a name="[3a6]"></a>MapBitmapFrame</STRONG> (Thumb, 1800 bytes, Stack size 232 bytes, ewgfx.o(.text.MapBitmapFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 1612<LI>Call Chain = MapBitmapFrame &rArr; DrawFrameGrid &rArr; EwLockSurface &rArr; EwFlushTasks &rArr;  EwFlushTasks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawFrameGrid
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopy
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockSurface
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockSurface
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFindSurface
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorPD
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwErrorDD
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateConstSurface
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpOpen
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpLoadFrame
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpLoadClut
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpGetFrameMemory
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwBmpClose
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLoadBitmap
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWarpBitmap
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillRectangle
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDrawText
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateBitmap
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCopyBitmap
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwTileBitmap
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockBitmap
</UL>

<P><STRONG><a name="[3ee]"></a>UpdatePath</STRONG> (Thumb, 840 bytes, Stack size 88 bytes, ewgfx.o(.text.UpdatePath))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UpdatePath &rArr; EwUnionRect
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewRect
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnionRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFillPath
</UL>

<P><STRONG><a name="[8a]"></a>UpdateWatermark1</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, ewgfx.o(.text.UpdateWatermark1))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UpdateWatermark1 &rArr; EwMathRandInt32 &rArr; EwBspClockGetTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathRandInt32
</UL>
<BR>[Address Reference Count : 3]<UL><LI> ewgfx.o(.text.EwInitGraphicsEngine)
<LI> ewgfx.o(.data.UpdateWatermarkProc)
<LI> ewgfx.o(.text.EwGetOverlayArea)
</UL>
<P><STRONG><a name="[ab]"></a>UpdateWatermark2</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, ewgfx.o(.text.UpdateWatermark2))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UpdateWatermark2 &rArr; EwMathRandInt32 &rArr; EwBspClockGetTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetTicks
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwMathRandInt32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ewgfx.o(.text.UpdateWatermark1)
</UL>
<P><STRONG><a name="[2e0]"></a>CleanSurfaceCache</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, ewgfxcore.o(.text.CleanSurfaceCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = CleanSurfaceCache &rArr; DiscardSurface &rArr; GfxDestroySurface &rArr; EwFreeVideo &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscardSurface
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCanDiscardSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeSurface
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateConstSurface
</UL>

<P><STRONG><a name="[337]"></a>DiscardGlyph</STRONG> (Thumb, 604 bytes, Stack size 40 bytes, ewgfxcore.o(.text.DiscardGlyph))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = DiscardGlyph &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlushAndClean
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGfxCore
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDiscardGlyph
</UL>

<P><STRONG><a name="[2e1]"></a>DiscardSurface</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, ewgfxcore.o(.text.DiscardSurface))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = DiscardSurface &rArr; GfxDestroySurface &rArr; EwFreeVideo &rArr; EwFree &rArr; EwFreeHeapBlock &rArr; EwErrorPD &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GfxDestroySurface
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlushAndClean
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanSurfaceCache
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFreeSurface
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGfxCore
</UL>

<P><STRONG><a name="[3b3]"></a>FlushAndClean</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, ewgfxcore.o(.text.FlushAndClean))
<BR><BR>[Stack]<UL><LI>Max Depth = 1212<LI>Call Chain = FlushAndClean &rArr; ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIssues
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscardSurface
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DiscardGlyph
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCanDiscardSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateGlyph
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateConstSurface
</UL>

<P><STRONG><a name="[3b2]"></a>ProcessIssues</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, ewgfxcore.o(.text.ProcessIssues))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = ProcessIssues &rArr; EwExecuteTasks &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompleteTasks
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlushAndClean
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwWaitForSurface
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockSurface
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitIssue
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFlushTasks
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFindSurface
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFindGlyph
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwDoneGfxCore
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateSurface
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateGlyph
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCreateConstSurface
</UL>

<P><STRONG><a name="[3df]"></a>GetInterpolationFactor</STRONG> (Thumb, 152 bytes, Stack size 36 bytes, ewgfxdriver.o(.text.GetInterpolationFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetInterpolationFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateWarp
</UL>

<P><STRONG><a name="[3dc]"></a>RasterPolygonRow_AA_EO</STRONG> (Thumb, 1082 bytes, Stack size 112 bytes, ewgfxdriver.o(.text.RasterPolygonRow_AA_EO))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = RasterPolygonRow_AA_EO &rArr; EwFill
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFill
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFillPolygon
</UL>

<P><STRONG><a name="[3da]"></a>RasterPolygonRow_AA_NZW</STRONG> (Thumb, 1242 bytes, Stack size 80 bytes, ewgfxdriver.o(.text.RasterPolygonRow_AA_NZW))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RasterPolygonRow_AA_NZW &rArr; EwFill
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFill
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFillPolygon
</UL>

<P><STRONG><a name="[3dd]"></a>RasterPolygonRow_EO</STRONG> (Thumb, 798 bytes, Stack size 56 bytes, ewgfxdriver.o(.text.RasterPolygonRow_EO))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RasterPolygonRow_EO &rArr; EwFill
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFill
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFillPolygon
</UL>

<P><STRONG><a name="[3db]"></a>RasterPolygonRow_NZW</STRONG> (Thumb, 884 bytes, Stack size 64 bytes, ewgfxdriver.o(.text.RasterPolygonRow_NZW))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RasterPolygonRow_NZW &rArr; EwFill
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwFill
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateFillPolygon
</UL>

<P><STRONG><a name="[28c]"></a>AddSignal</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, ewslot.o(.text.AddSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = AddSignal &rArr; EwPanic &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyRefObservers
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNotifyObjObservers
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPostSignal
</UL>

<P><STRONG><a name="[291]"></a>AllocString</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, ewstring.o(.text.AllocString))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = AllocString &rArr; EwError &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwAlloc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwImmediateReclaimMemory
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwError
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStringMiddle
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetStringChar
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwConcatString
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwConcatCharString
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStringRemove
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewStringFloat
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwNewStringChar
</UL>

<P><STRONG><a name="[3a0]"></a>VerifyString</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, ewstring.o(.text.VerifyString))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = VerifyString &rArr; EwPrint &rArr; EwFormatFloatToAnsiString &rArr; EwMove &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPrint
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwPanic
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStringMiddle
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStringFindChar
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwShareString
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwSetStringChar
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringChar
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwConcatString
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwConcatCharString
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwCompString
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwGetStringLength
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwStringRemove
</UL>

<P><STRONG><a name="[3e5]"></a>WarpSurface1</STRONG> (Thumb, 346 bytes, Stack size 112 bytes, ewgfxtasks.o(.text.WarpSurface1))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WarpSurface1 &rArr; EwUnlockSurface
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
</UL>

<P><STRONG><a name="[3e8]"></a>WarpSurface2</STRONG> (Thumb, 720 bytes, Stack size 256 bytes, ewgfxtasks.o(.text.WarpSurface2))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + In Cycle
<LI>Call Chain = WarpSurface2 &rArr;  EwLockSurface (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwInitColorGradient
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwEmulateWarp
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwUnlockSurface
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwLockSurface
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EwExecuteTasks
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
